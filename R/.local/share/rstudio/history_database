0:source("Scripts/FigUtils.R")
0:source("R_Pipeline/make_gviz_browser_shots.R")
0:library(cowplot)
0:#theme_set(theme_gray())
0:n_threads <- 4
0:setup_packages(n_threads = n_threads)
0:library(here)
0:Sys.setenv(MEME_DIR = "/home/snystrom/meme")
0:Sys.setenv(TOMTOM_DB = here("Data/fly_factor_survey_id.meme"))
0:# load pipeline output files
0:lapply(Sys.glob("R_Pipeline/output_data/*.rda"), load, .GlobalEnv)
0:times <- c("3LW", "0APF", "6APF", "18APF", "24APF", "36APF", "44APF")
0:times_nozero <- c("3LW", "6APF", "18APF", "24APF", "36APF", "44APF")
0:developmental_time_factor <- factor(times, levels = times)
0:developmental_time_factor_nozero <- factor(times_nozero, levels = times_nozero)
0:# Additional timepoint information from full WT timecourse
0:extra_sampleSheet <- readr::read_tsv("Data/allTimes_SampleSheet.tsv") %>%
0:dplyr::mutate(grp = paste0(Genotype, ".", Time)) %>%
0:dplyr::mutate(Bigwig = gsub("FAIRE_Data/Data/BigWigs/", "Data/Extra_Bigwigs/", Bigwig)) %>%
0:dplyr::mutate(BigwigZnorm = gsub("FAIRE_Data/Data/BigWigs/", "Data/Extra_Bigwigs/", BigwigZnorm)) %>%
0:dplyr::mutate(Bam = gsub("FAIRE_Data/Data/Bam/", "Data/Extra_Bam/", Bam)) %>%
0:#dplyr::select(-Bam) %>%
0:data.frame
0:source("R_Pipeline/pipeline_methods.R")
0:source("R_Pipeline/pipeline_methods.R")
0:source("Scripts/importMatrix.R")
0:source("Scripts/FigUtils.R")
0:source("R_Pipeline/make_gviz_browser_shots.R")
0:library(cowplot)
0:#theme_set(theme_gray())
0:n_threads <- 4
0:setup_packages(n_threads = n_threads)
0:library(here)
0:Sys.setenv(MEME_DIR = "/home/snystrom/meme")
0:Sys.setenv(TOMTOM_DB = here("Data/fly_factor_survey_id.meme"))
0:# load pipeline output files
0:lapply(Sys.glob("R_Pipeline/output_data/*.rda"), load, .GlobalEnv)
0:times <- c("3LW", "0APF", "6APF", "18APF", "24APF", "36APF", "44APF")
0:times_nozero <- c("3LW", "6APF", "18APF", "24APF", "36APF", "44APF")
0:developmental_time_factor <- factor(times, levels = times)
0:developmental_time_factor_nozero <- factor(times_nozero, levels = times_nozero)
0:# Additional timepoint information from full WT timecourse
0:extra_sampleSheet <- readr::read_tsv("Data/allTimes_SampleSheet.tsv") %>%
0:dplyr::mutate(grp = paste0(Genotype, ".", Time)) %>%
0:dplyr::mutate(Bigwig = gsub("FAIRE_Data/Data/BigWigs/", "Data/Extra_Bigwigs/", Bigwig)) %>%
0:dplyr::mutate(BigwigZnorm = gsub("FAIRE_Data/Data/BigWigs/", "Data/Extra_Bigwigs/", BigwigZnorm)) %>%
0:dplyr::mutate(Bam = gsub("FAIRE_Data/Data/Bam/", "Data/Extra_Bam/", Bam)) %>%
0:#dplyr::select(-Bam) %>%
0:data.frame
0:# replace 3lw data with correct samples
0:or.3lw_entry <- peakTable %>%
0:dplyr::filter(grp == "OR.3LW") %>%
0:dplyr::select(-Bam, -Peakfile, -Assay, -Sample)
0:extra_peakTable <- readr::read_tsv("Data/allTimes_PeakTable.tsv") %>%
0:dplyr::mutate(grp = paste0(Genotype, ".", Time)) %>%
0:dplyr::mutate(BigwigZnorm = gsub("FAIRE_Data/Data/BigWigs/", "Data/Extra_Bigwigs/", BigwigZnorm)) %>%
0:dplyr::select(-Peakfile) %>%
0:dplyr::filter(grp != "OR.3LW") %>%
0:data.frame %>%
0:dplyr::bind_rows(., or.3lw_entry)
0:ptm_sampleSheet <- readr::read_tsv("histone_ptm_samplesheet.tsv") %>%
0:dplyr::mutate(BigwigZnorm = paste0("Data/", BigwigZnorm)) %>%
0:dplyr::mutate(Bigwig = paste0("Data/", Bigwig)) %>%
0:dplyr::mutate(Sample = gsub("-", "\\.", Sample)) %>%
0:data.frame
0:#############
0:# colorscheme for consequences of binding & FAIRE regions
0:# for WT behavior:
0:increasing_color = "forestgreen"
0:decreasing_color = "firebrick"
0:static_color = "dodgerblue4"
0:# for behavior in response to precocious E93:
0:gof_increasing_color = "#0092ff"
0:gof_decreasing_color = "#ffa700"
0:gof_static_color = "grey50"
0:# Generic genome highlight color
0:genome_highlight_color = "grey75"
0:behavior_colors <- c("Increasing" = increasing_color, "Decreasing" = decreasing_color, "Static" = static_color)
0:gof_behavior_colors <- c("Increasing" = gof_increasing_color, "Decreasing" = gof_decreasing_color, "Static" = gof_static_color)
0:toOrphan <- function(df, col = peak_binding_description){
0:# For converting peak_binding_description to "orphan" from "orphan_endogenous"
0:# this is to pay down some tech-debt that I realized too late to change original assignment.
0:col <- enquo(col)
0:df %>%
0:dplyr::mutate(!!col := gsub("_endogenous", "", !!col))
0:}
0:## DEVELOPMENT Guidelines:
0:# fig size max: 180 mm x 210 mm (7.08 in x 8.26 in)
0:# 8pt arial for all text
0:# 12pt uppercase for labels
0:theme_development <- theme(text = element_text(size = 8, family = "Arial"),
0:axis.text = element_text(size = 8, family = "Arial"),
0:strip.text = element_text(size = 8, family = "Arial"),
0:plot.tag = element_text(size = 12, family = "Arial"))
0:pt_to_mm <- function(pt){
0:# Convert ggplot2 size from mm to pt
0:# named this function poorly to start, now too late to change.
0:pt * 0.352778
0:}
0:# now only with E93 WT bound...
0:# 20% of E93 WT bound, dependent sites are precocious bound and sensitive
0:unionChip_anno %>%
0:dplyr::mutate(precocious_bound = ifelse(grepl('ectopic|entopic', peak_binding_description), T,F)) %>%
0:dplyr::filter(e93_dependent == 'dependent' & peak_binding_description != 'ectopic') %>%
0:dplyr::group_by(precocious_bound, e93_sensitive) %>%
0:dplyr::tally() %>%
0:dplyr::ungroup() %>%
0:dplyr::mutate(per = n/sum(n))
0:source("R_Pipeline/pipeline_methods.R")
0:setup_packages(n_threads = n_threads)
0:chip_peakTableList <- chip_peakTable %>%
0:split(., .$grp)
0:theme_set(theme_grey())
0:set.seed(1892825)
0:# now only with E93 WT bound...
0:# 20% of E93 WT bound, dependent sites are precocious bound and sensitive
0:unionChip_anno %>%
0:dplyr::mutate(precocious_bound = ifelse(grepl('ectopic|entopic', peak_binding_description), T,F)) %>%
0:dplyr::filter(e93_dependent == 'dependent' & peak_binding_description != 'ectopic') %>%
0:dplyr::group_by(precocious_bound, e93_sensitive) %>%
0:dplyr::tally() %>%
0:dplyr::ungroup() %>%
0:dplyr::mutate(per = n/sum(n))
0:chip_repOv <- peak_overlaps_by_condition(chip_allPeaks_by_rep %>% split(mcols(.)$grp))
0:addGrpToPeaks <- function(x){
0:peaks <- map(x, "mergedPeaks") %>%
0:map(., data.frame) %>%
0:imap(., ~{
0:name <- .y
0:df <- .x
0:df %>%
0:dplyr::mutate(grp = name)
0:}) %>%
0:map(., GRanges)
0:return(peaks)
0:}
0:repOv_peaks <- addGrpToPeaks(chip_repOv)
0:wt_ov_gof <- ChIPpeakAnno::findOverlapsOfPeaks(repOv_peaks)
0:ChIPpeakAnno::makeVennDiagram(wt_ov_gof)
0:allChipPeaks <- annotate_overlap_status(wt_ov_gof, by = "grp") %>%
0:lapply(., function(peaks){
0:peaks %>%
0:data.frame %>%
0:dplyr::mutate(peak_binding_description = case_when(.$peak_status == "OR.24APF_unique" ~ "orphan_endogenous",
0:.$peak_status == "E93GOF.3LW_unique" ~ "ectopic",
0:.$peak_status == "shared" & .$grp == "OR.24APF" ~ "entopic",
0:.$peak_status == "shared" & .$grp == "E93GOF.3LW" ~ "na"))
0:}) %>%
0:dplyr::bind_rows(.)
0:library(forcats)
0:plotData <- allChipPeaks %>%
0:dplyr::filter(grp == "OR.24APF") %>%
0:dplyr::mutate(peak_binding_description = case_when(.$peak_binding_description == "orphan_endogenous" ~ "Unbound",
0:.$peak_binding_description == "entopic" ~ "Bound"))
0:axis_data <- plotData %>%
0:dplyr::group_by(peak_binding_description) %>%
0:dplyr::count() %>%
0:tidyr::spread(peak_binding_description, n) %>%
0:dplyr::mutate(total = Bound + Unbound)
0:percentBound <- round((axis_data$Bound / axis_data$total) * 100)
0:breaks <- c(axis_data$Bound, axis_data$total)
0:plotData %>%
0:ggplot(aes(factor("WT E93\nLate binding sites"))) +
0:geom_bar(aes(fill = fct_rev(peak_binding_description))) +
0:xlab(NULL) +
0:ylab(glue::glue("{percentBound}%\nBound")) +
0:theme_minimal() +
0:theme(text = element_text(color = "black"),
0:axis.text = element_text(color = "black", size = 15),
0:axis.line = element_line(color = "black"),
0:panel.grid.major = element_blank(),
0:axis.title.y = element_text(angle = 0,
0:vjust = percentBound/100 + 0.035,
0:size = 14)) +
0:guides(fill = guide_legend(title = "Bound by\nPrecocious E93", title.hjust = 0.5)) +
0:scale_fill_manual(values  = c("Bound" = "Black", "Unbound" = "Grey")) +
0:scale_y_continuous(breaks = breaks, expand = c(0,0))
0:unionChip <- allChipPeaks %>%
0:GRanges %>%
0:GenomicRanges::reduce(.)
0:endogenous <- allChipPeaks %>%
0:dplyr::filter(peak_binding_description == "entopic") %>%
0:GRanges
0:ectopic <- allChipPeaks %>%
0:dplyr::filter(peak_binding_description == "ectopic") %>%
0:GRanges
0:orphan_endogenous <- allChipPeaks %>%
0:dplyr::filter(peak_binding_description == "orphan_endogenous") %>%
0:GRanges
0:unionChip %<>%
0:data.frame %>%
0:dplyr::mutate(id = glue::glue("peak_{num}", num = seq(1:nrow(.))) %>% as.character(.)) %>%
0:dplyr::mutate(peak_binding_description = case_when(GRanges(.) %over% endogenous ~ "entopic",
0:GRanges(.) %over% ectopic ~ "ectopic",
0:GRanges(.) %over% orphan_endogenous ~ "orphan_endogenous")) %>%
0:GRanges
0:unionChip %>%
0:data.frame %>%
0:dplyr::count(peak_binding_description)
0:makeAnno <- function(grange) {
0:annoDF <- grange %>%
0:data.frame() %>%
0:dplyr::select(id, seqnames, start, end, strand)
0:colnames(annoDF) <- c("GeneID", "Chr", "Start", "End", "Strand")
0:return(annoDF)
0:}
0:# this function is no longer in the rsubread package!
0:#chip_anno <- Rsubread::createAnnotationFile(unionChip)
0:chip_anno <- makeAnno(unionChip)
0:chip_counts <- Rsubread::featureCounts(chip_sampleSheet$Bam,
0:annot.ext = chip_anno,
0:allowMultiOverlap = T,
0:nthreads = n_threads)
0:faire_counts_in_chipPeaks <- Rsubread::featureCounts(sampleSheet$Bam,
0:annot.ext = chip_anno,
0:allowMultiOverlap = T,
0:nthreads = n_threads)
0:colnames(chip_counts$counts) <- chip_sampleSheet$Sample
0:colnames(faire_counts_in_chipPeaks$counts) <- sampleSheet$Sample
0:chip_res <- results(chip_dds)
0:library(DESeq2)
0:chip_dds <- DESeqDataSetFromMatrix(countData = chip_counts$counts, colData = chip_sampleSheet, design = ~grp) %>%
0:DESeq(.)
0:faire_chip_dds <- DESeqDataSetFromMatrix(countData = faire_counts_in_chipPeaks$counts, colData = sampleSheet, design = ~grp) %>%
0:DESeq(.)
0:chip_res <- results(chip_dds)
0:summary(chip_res)
0:chip_cpm <- fpm(chip_dds)
0:chip_faire_cpm <- fpm(faire_chip_dds)
0:mean_cpm <- function(cpm, prefix = "", suffix = "_cpm", idCol = "id",
0:sample_regex = ".+\\..+\\..+\\.",
0:rep_regex = "\\.Rep\\d"){
0:# requires colnames to be of form <genotype>.<time>.<tissue>.<Rep#>
0:mean_cpm <- cpm %>%
0:data.frame %>%
0:tibble::rownames_to_column(idCol) %>%
0:reshape2::melt(variable.name = "Sample_Rep", value.name = "cpm") %>%
0:dplyr::mutate(grp = gsub(rep_regex, "", Sample_Rep)) %>%
0:dplyr::mutate(Rep = gsub(sample_regex, "", Sample_Rep)) %>%
0:dplyr::group_by(id, grp) %>%
0:dplyr::summarise(cpm = mean(cpm)) %>%
0:dplyr::mutate(grp = paste0(prefix, grp, suffix)) %>%
0:tidyr::spread(key = grp, value = cpm) %>%
0:data.frame
0:return(mean_cpm)
0:}
0:chip_mean_cpm <- mean_cpm(chip_cpm, prefix = "chip_cpm_", suffix = "")
0:chip_faire_mean_cpm <- mean_cpm(chip_faire_cpm, prefix = "faire_cpm_", suffix = "")
0:unionChip %<>%
0:data.frame %>%
0:dplyr::left_join(., chip_mean_cpm, by = "id") %>%
0:dplyr::left_join(., chip_faire_mean_cpm, by = "id")
0:peakTable_split <- peakTable %>% split(.$Sample)
0:chip_peakTable_split <- chip_peakTable %>% split(.$Sample)
0:chip_allRes <- generate_DESeq2_contrast_strings(chip_sampleSheet) %>%
0:generate_DESeq2_contrasts(chip_dds, ., lfcCutoff = 1, padjCutoff = 0.05, format = "DataFrame")
0:chip_faire_allRes <- generate_DESeq2_contrast_strings(sampleSheet) %>%
0:generate_DESeq2_contrasts(faire_chip_dds, ., lfcCutoff = 1, padjCutoff = 0.05, format = "DataFrame")
0:dm3.txdb <- TxDb.Dmelanogaster.UCSC.dm3.ensGene::TxDb.Dmelanogaster.UCSC.dm3.ensGene
0:BiocManager::install('TxDb.Dmelanogaster.UCSC.dm3.ensGene')
0:dm3.txdb <- TxDb.Dmelanogaster.UCSC.dm3.ensGene::TxDb.Dmelanogaster.UCSC.dm3.ensGene
0:unionChip_anno <- unionChip %>%
0:dplyr::mutate(e93_dependent = case_when((chip_faire_allRes$OR.3LWvsE93mut.3LW$behavior_type %in% c("Increasing", "Decreasing")) ~ "dependent",
0:(chip_faire_allRes$OR.24APFvsE93mut.24APF$behavior_type %in% c("Increasing", "Decreasing")) ~ "dependent",
0:T ~ "independent")) %>%
0:dplyr::mutate(e93_sensitive = case_when((chip_faire_allRes$OR.3LWvsE93GOF.3LW$behavior_type %in% c("Increasing", "Decreasing")) ~ "sensitive",
0:T ~ "insensitive")) %>%
0:dplyr::mutate(e93_response_category = paste0(e93_dependent, "_", e93_sensitive)) %>%
0:dplyr::mutate(e93_sensitive_behavior = chip_faire_allRes$OR.3LWvsE93GOF.3LW$behavior_type) %>%
0:dplyr::mutate(wt_l3_24_dynamic_behavior = chip_faire_allRes$OR.3LWvsOR.24APF$behavior_type) %>%
0:GRanges(.) %>%
0:ChIPseeker::annotatePeak(., tssRegion = c(-500,500), TxDb = dm3.txdb, level = "gene") %>%
0:ChIPseeker::as.GRanges(.) %>%
0:data.frame %>%
0:dplyr::mutate(anno_simple = gsub(" \\(.+$", "", annotation))
0:unionChip_anno %>%
0:dplyr::summarize(dep = sum(e93_dependent == "dependent"),
0:sens = sum(e93_sensitive == "sensitive"),
0:all = sum(e93_dependent %in% c("dependent", "independent")),
0:both = sum(e93_response_category == "dependent_sensitive")) %>%
0:dplyr::summarise(dep_frac = both/dep, sens_frac = both/sens, dep_all = dep/all, sens_all = sens/all)
0:dm3.txdb <- TxDb.Dmelanogaster.UCSC.dm3.ensGene::TxDb.Dmelanogaster.UCSC.dm3.ensGene
0:unionChip_anno <- unionChip %>%
0:dplyr::mutate(e93_dependent = case_when((chip_faire_allRes$OR.3LWvsE93mut.3LW$behavior_type %in% c("Increasing", "Decreasing")) ~ "dependent",
0:(chip_faire_allRes$OR.24APFvsE93mut.24APF$behavior_type %in% c("Increasing", "Decreasing")) ~ "dependent",
0:T ~ "independent")) %>%
0:dplyr::mutate(e93_sensitive = case_when((chip_faire_allRes$OR.3LWvsE93GOF.3LW$behavior_type %in% c("Increasing", "Decreasing")) ~ "sensitive",
0:T ~ "insensitive")) %>%
0:dplyr::mutate(e93_response_category = paste0(e93_dependent, "_", e93_sensitive)) %>%
0:dplyr::mutate(e93_sensitive_behavior = chip_faire_allRes$OR.3LWvsE93GOF.3LW$behavior_type) %>%
0:dplyr::mutate(wt_l3_24_dynamic_behavior = chip_faire_allRes$OR.3LWvsOR.24APF$behavior_type) %>%
0:GRanges(.) %>%
0:ChIPseeker::annotatePeak(., tssRegion = c(-500,500), TxDb = dm3.txdb, level = "gene") %>%
0:ChIPseeker::as.GRanges(.) %>%
0:data.frame %>%
0:dplyr::mutate(anno_simple = gsub(" \\(.+$", "", annotation))
0:unionChip_anno %>%
0:dplyr::summarize(dep = sum(e93_dependent == "dependent"),
0:sens = sum(e93_sensitive == "sensitive"),
0:all = sum(e93_dependent %in% c("dependent", "independent")),
0:both = sum(e93_response_category == "dependent_sensitive")) %>%
0:dplyr::summarise(dep_frac = both/dep, sens_frac = both/sens, dep_all = dep/all, sens_all = sens/all)
0:unionChip_anno %>%
0:dplyr::mutate(precocious_bound = ifelse(grepl('ectopic|entopic', peak_binding_description), T,F)) %>%
0:dplyr::group_by(precocious_bound, e93_response_category) %>%
0:dplyr::tally() %>%
0:dplyr::mutate(per = n/sum(n))
0:# now only with E93 WT bound...
0:# 20% of E93 WT bound, dependent sites are precocious bound and sensitive
0:unionChip_anno %>%
0:dplyr::mutate(precocious_bound = ifelse(grepl('ectopic|entopic', peak_binding_description), T,F)) %>%
0:dplyr::filter(e93_dependent == 'dependent' & peak_binding_description != 'ectopic') %>%
0:dplyr::group_by(precocious_bound, e93_sensitive) %>%
0:dplyr::tally() %>%
0:dplyr::ungroup() %>%
0:dplyr::mutate(per = n/sum(n))
0:# now only with E93 WT bound...
0:# 20% of E93 WT bound, dependent sites are precocious bound and sensitive
0:unionChip_anno %>%
0:dplyr::mutate(precocious_bound = ifelse(grepl('ectopic|entopic', peak_binding_description), T,F)) %>%
0:dplyr::filter(e93_dependent == 'dependent' & peak_binding_description != 'ectopic') %>%
0:dplyr::group_by(peak_binding_description, precocious_bound, e93_sensitive) %>%
0:dplyr::tally() %>%
0:dplyr::ungroup() %>%
0:dplyr::mutate(per = n/sum(n))
0:# now only with E93 WT bound...
0:# 20% of E93 WT bound, dependent sites are precocious bound and sensitive
0:unionChip_anno %>%
0:dplyr::mutate(precocious_bound = ifelse(grepl('ectopic|entopic', peak_binding_description), T,F)) %>%
0:#dplyr::filter(e93_dependent == 'dependent' & peak_binding_description != 'ectopic') %>%
0:dplyr::group_by(e93_dependent, peak_binding_description, precocious_bound, e93_sensitive) %>%
0:dplyr::tally() %>%
0:dplyr::ungroup() %>%
0:dplyr::mutate(per = n/sum(n))
0:# now only with E93 WT bound...
0:# 20% of E93 WT bound, dependent sites are precocious bound and sensitive
0:unionChip_anno %>%
0:dplyr::mutate(precocious_bound = ifelse(grepl('ectopic|entopic', peak_binding_description), T,F)) %>%
0:dplyr::filter(e93_dependent == 'dependent' & peak_binding_description != 'ectopic') %>%
0:dplyr::group_by(precocious_bound, e93_sensitive) %>%
0:dplyr::tally() %>%
0:dplyr::ungroup() %>%
0:dplyr::mutate(per = n/sum(n))
0:# now only entopic peaks
0:unionChip_anno %>%
0:dplyr::mutate(precocious_bound = ifelse(grepl('ectopic|entopic', peak_binding_description), T,F)) %>%
0:dplyr::filter(e93_dependent == 'dependent' & peak_binding_description == 'entopic') %>%
0:dplyr::group_by(precocious_bound, e93_sensitive) %>%
0:dplyr::tally() %>%
0:dplyr::ungroup() %>%
0:dplyr::mutate(per = n/sum(n))
0:# now only with E93 WT bound...
0:# 20% of E93 WT bound, dependent sites are precocious bound and sensitive
0:unionChip_anno %>%
0:dplyr::mutate(precocious_bound = ifelse(grepl('ectopic|entopic', peak_binding_description), T,F)) %>%
0:#dplyr::filter(e93_dependent == 'dependent' & peak_binding_description != 'ectopic') %>%
0:dplyr::group_by(e93_dependent, peak_binding_description, precocious_bound, e93_sensitive) %>%
0:dplyr::tally() %>%
0:dplyr::ungroup() %>%
0:dplyr::mutate(per = n/sum(n))
0:renv::status
0:renv::status()
0:renv::status()
0:renv::snapshot()
0:renv::dependencies()
0:renv::dependencies(
0:)
0:dep <- renv::dependencies(
0:)
0:dplyr::filter(dep$Package == 'profileplyr')
0:dep %>% dplyr::filter(dep$Package == 'profileplyr')
0:library(magrittr)
0:dep %>% dplyr::filter(dep$Package == 'profileplyr')
0:library(ggplot2)
0:library(magrittr)
0:source('scripts/utils.R')
0:library(ggplot2)
0:library(magrittr)
0:source('utils.R')
0:load('rData/sheets.RDS')
0:multiqc_files <- list.files('multiqc_data', full.names = T, pattern = '*.txt')
0:multiqc <- purrr::map(multiqc_files, ~ read.delim(.x, header = T))
0:multiqc <- lapply(multiqc_files, read.delim)
0:names(multiqc) <- sapply(stringr::str_split(multiqc_files,'/|_|\\.'), function(x) paste(x[1],x[4],sep ='.'))
0:#logs_files <- c(list.files('Logs', full.names = T, pattern = '*.txt'), list.files('Logs', full.names = T, pattern = '*.tsv'))
0:#
0:#
0:#logs <- purrr::maplogs_filess, ~ read.delim(.x, header =TT)
0:#multiqc <- lapply(multiqc_data, read.delim)
0:##names(multiqc) <- sapply(stringr::str_split(multiqc_data,'/|_|\\.'), function(x) paste(x[1],x[4],sep ='.'))
0:samtools <- multiqc$multiqc.samtools %>%
0:dplyr::mutate(sample.id = paste(stringr::str_split_fixed(Sample, "-|_", n = 8)[,1],
0:stringr::str_split_fixed(Sample, "-|_", n = 8)[,6],
0:stringr::str_split_fixed(Sample, "-|_", n = 8)[,7], sep = "."),
0:filter = stringr::str_split_fixed(Sample, "_", n = 3)[,3], .before = 1)
0:multiqc
0:multiqc_files
0:multiqc_files <- list.files('../PIPELINES/osaGFP-CnR/multiqc_data', full.names = T, pattern = '*.txt')
0:multiqc <- purrr::map(multiqc_files, ~ read.delim(.x, header = T))
0:multiqc <- lapply(multiqc_files, read.delim)
0:names(multiqc) <- sapply(stringr::str_split(multiqc_files,'/|_|\\.'), function(x) paste(x[1],x[4],sep ='.'))
0:#logs_files <- c(list.files('Logs', full.names = T, pattern = '*.txt'), list.files('Logs', full.names = T, pattern = '*.tsv'))
0:#
0:#
0:#logs <- purrr::maplogs_filess, ~ read.delim(.x, header =TT)
0:#multiqc <- lapply(multiqc_data, read.delim)
0:##names(multiqc) <- sapply(stringr::str_split(multiqc_data,'/|_|\\.'), function(x) paste(x[1],x[4],sep ='.'))
0:samtools <- multiqc$multiqc.samtools %>%
0:dplyr::mutate(sample.id = paste(stringr::str_split_fixed(Sample, "-|_", n = 8)[,1],
0:stringr::str_split_fixed(Sample, "-|_", n = 8)[,6],
0:stringr::str_split_fixed(Sample, "-|_", n = 8)[,7], sep = "."),
0:filter = stringr::str_split_fixed(Sample, "_", n = 3)[,3], .before = 1)
0:multiqc
0:multiqc_files
0:multiqc
0:multiqc_files
0:names(multiqc) <- sapply(stringr::str_split(multiqc_files,'/|_|\\.'), function(x) paste(x[7],x[10],sep ='.'))
0:multiqc
0:names(multiqc) <- sapply(stringr::str_split(multiqc_files,'/|_|\\.'), function(x) paste(x[8],x[10],sep ='.'))
0:multiqc
0:names(multiqc) <- sapply(stringr::str_split(multiqc_files,'/|_|\\.'), function(x) paste(x[8],x[9],sep ='.'))
0:multiqc
0:multiqc
0:samtools <- multiqc$multiqc.samtools %>%
0:dplyr::mutate(sample.id = paste(stringr::str_split_fixed(Sample, "-|_", n = 8)[,1],
0:stringr::str_split_fixed(Sample, "-|_", n = 8)[,6],
0:stringr::str_split_fixed(Sample, "-|_", n = 8)[,7], sep = "."),
0:filter = stringr::str_split_fixed(Sample, "_", n = 3)[,3], .before = 1)
0:bowtie <- multiqc$multiqc.bowtie2 %>%
0:dplyr::mutate(sample.id = paste(stringr::str_split_fixed(Sample, "-|_", n = 8)[,1],
0:stringr::str_split_fixed(Sample, "-|_", n = 8)[,6],
0:stringr::str_split_fixed(Sample, "-|_", n = 8)[,7], sep = "."),
0:filter = stringr::str_split_fixed(Sample, "_", n = 3)[,3], .before = 1)
0:picard <- multiqc$multiqc.picard %>%
0:dplyr::mutate(sample.id = paste(stringr::str_split_fixed(Sample, "-|_", n = 8)[,1],
0:stringr::str_split_fixed(Sample, "-|_", n = 8)[,6],
0:stringr::str_split_fixed(Sample, "-|_", n = 8)[,7], sep = "."))
0:bowtie %>%
0:reshape2::melt() %>%
0:dplyr::filter(variable != 'total_reads' & variable != 'overall_alignment_rate' & variable != 'paired_total') %>%
0:dplyr::mutate(variable = factor(variable, levels = c('paired_total', 'paired_aligned_one', 'paired_aligned_multi','paired_aligned_none'))) %>%
0:ggplot(aes(sample.id, value, fill = variable)) +
0:geom_bar(stat = 'identity') +
0:geom_text(aes(label = round(value/1000000,2)), position = position_stack(vjust = 0.5)) +
0:scale_fill_manual(values = c('#78c4ff','#4873e8','#8c8c8c')) +
0:ylab('read pairs (millions)') +
0:theme(axis.text.y = element_blank(),
0:axis.title.x = element_blank(),
0:legend.title = element_blank())
0:ggsave('rOut/QC/bowtie.png', width = 9, height = 5, dpi = 300)
0:dplyr::inner_join(bowtie, samtools, by = 'sample.id')
0:samtools %>%
0:reshape2::melt() %>%
0:dplyr::filter(variable == 'mapped_passed') %>%
0:ggplot(aes(sample.id, value, fill = filter)) +
0:geom_bar(stat = 'identity', position = position_dodge()) +
0:geom_text(aes(label = round(value/1000000/2, 2)), position = position_dodge(0.9), vjust = -0.5) +
0:scale_fill_manual(values = c('#036ffc','#519bfc','#96c4ff')) +
0:ylab('read pairs (millions)') +
0:theme(axis.text.y = element_blank(),
0:axis.title.x = element_blank(),
0:legend.title = element_blank())
0:ggsave('rOut/QC/dups.png', width = 9, height = 5, dpi = 300)
0:samtools
0:#multiqc$multiqc.fastq %>% reshape2::melt() %>% dplyr::filter(grepl('percentage',variable))
0:mycolors = colorRampPalette(RColorBrewer::brewer.pal(13, 'Spectral'))(13)
0:mycolors
0:multiqc.fastq.melt <- multiqc$multiqc.fastq %>%
0:reshape2::melt() %>%
0:dplyr::filter(grepl('percentage', variable)) %>%
0:dplyr::mutate(sample.id = paste(stringr::str_split_fixed(Sample, "-|_", n = 8)[,1],
0:stringr::str_split_fixed(Sample, "-|_", n = 8)[,6],
0:stringr::str_split_fixed(Sample, "-|_", n = 8)[,7], sep = "_"))
0:#unique(multiqc.fastq.melt$sample.id)
0:pie_fun <- function(sampleid, df) {
0:df %>%
0:dplyr::filter(sample.id == sampleid) %>%
0:ggplot(aes(sample.id, value, fill = variable)) +
0:geom_bar(stat = 'identity', width = 1) +
0:coord_polar(theta = 'y') +
0:scale_fill_manual(values = mycolors)
0:ggsave(paste0('rOut/QC/',sampleid,'-multiqc.png'), width = 7, height = 4, dpi = 300)
0:}
0:lapply(unique(multiqc.fastq.melt$sample.id), function(x) pie_fun(sampleid = x, df = multiqc.fastq.melt))
0:dep <- renv::dependencies(
0:)
0:renv::status()
0:?renv::status
0:?renv::status()
0:renv::snapshot()
0:renv::clean()
0:renv::status()
0:renv::snapshot()
0:renv::status()
0:version
0:renv::status()
0:renv::status()
0:renv::snapshot()
0:renv::status()
0:renv::clean()
0:renv::diagnostics()
0:renv::diagnostics() %>%
0:dplyr::filter(Dependency == 'direct')
0:renv::diagnostics()
0:renv::diagnostics() %>%
0:dplyr::filter(Dependency == 'direct')
0:test <- renv::diagnostics()
0:test %>%
0:data.frame()
0:test
0:test <- renv::diagnostics()  %>% data.frame()
0:test
1694444251855:gc()
1694565428420:library(magrittr)
1694565428483:library(ggplot2)
1694565429271:#library(ggrepel)
1694565429282:library(GenomicRanges)
1694565429627:library(org.Dm.eg.db)
1694565430136:library(AnnotationDbi)
1694565430152:library(EnrichedHeatmap)
1694565430247:library(ComplexHeatmap)
1694565430263:#library(GO.db)
1694565430279:#library(patchwork)
1694565430295:source('utils.R')
1694565430312:source('~/NystLib/R/peakUtils.R') #TODO move/rewrite getPeakData from NystLib to utils.R
1694565430459:## load data
1694565430491:load('rData/sheets.rda')
1694565430627:load('rData/peaks.rda')
1694565436078:load('rData/rnaiScreen.rda')
1694565437804:#TODO move RNAseq data into BAP project
1694565437814:# TODO this is in progress - mixed across directories
1694565437925:load('rData/wing-rnaseq-GeTMM.RData')  # GeTMM normalized RNAseq
1694565437998:#loads 'wing.rnaseq'
1694565438015:#load('rData/wing-rnaseq-DDS.RData')  # loads dds.results
1694565438026:## TODO -- no id validation yet need to fix
1694565438035:#rna.dds <- dds.results %>%
1694565438045:#  dplyr::filter(baseMean_6h > 0) %>%
1694565438054:#  tibble::rownames_to_column(var = 'Geneid')
1694565438070:ON.genes <- wing.rnaseq %>%
1694565438080:dplyr::filter(mean >= 2) %>%
1694565438090:dplyr::select(Geneid)
1694565438176:ON.genes %>% write.table('on-rnaseq.txt', sep = '\n', row.names = F, col.names = F, quote = F)
1694565438206:#TODO clean this up - had to write out the on list and use the flybase id validator tool...
1694565438215:ON.genes.validated <- read.table('~/McKay/Wing-RNAseq/on-genes-IDvalidation.txt', header = T) %>%
1694565438225:dplyr::rename(Geneid = submitted_item,
1694565438235:Validated = validated_id,
1694565438245:Symbol = current_symbol)
1694566835702:library(magrittr)
1694566836312:library(ggplot2)
1694566836327:#library(ggrepel)
1694566836337:library(GenomicRanges)
1694566836354:library(org.Dm.eg.db)
1694566836364:library(AnnotationDbi)
1694566836381:library(EnrichedHeatmap)
1694566836391:library(ComplexHeatmap)
1694566836408:#library(GO.db)
1694566836424:#library(patchwork)
1694566836441:source('utils.R')
1694566836460:source('NystLib/R/peakUtils.R') #TODO move/rewrite getPeakData from NystLib to utils.R
1694566836520:## load data
1694566836537:load('rData/sheets.rda')
1694566836621:load('rData/peaks.rda')
1694566841385:load('rData/rnaiScreen.rda')
1694566841465:#TODO move RNAseq data into BAP project
1694566841475:# TODO this is in progress - mixed across directories
1694566841486:load('rData/wing-rnaseq-GeTMM.RData')  # GeTMM normalized RNAseq
1694566841581:#loads 'wing.rnaseq'
1694566841637:#load('rData/wing-rnaseq-DDS.RData')  # loads dds.results
1694566841647:## TODO -- no id validation yet need to fix
1694566841657:#rna.dds <- dds.results %>%
1694566841667:#  dplyr::filter(baseMean_6h > 0) %>%
1694566841676:#  tibble::rownames_to_column(var = 'Geneid')
1694566841693:ON.genes <- wing.rnaseq %>%
1694566841704:dplyr::filter(mean >= 2) %>%
1694566841714:dplyr::select(Geneid)
1694566841748:ON.genes %>% write.table('on-rnaseq.txt', sep = '\n', row.names = F, col.names = F, quote = F)
1694566841778:#TODO clean this up - had to write out the on list and use the flybase id validator tool...
1694566841788:ON.genes.validated <- read.table('Wing-RNAseq/on-genes-IDvalidation.txt', header = T) %>%
1694566841798:dplyr::rename(Geneid = submitted_item,
1694566841808:Validated = validated_id,
1694566841817:Symbol = current_symbol)
1694566841865:#TODO move flyfactor database to BAP - code to download to repo?
1694566841877:## load in a flyfacotr fbgn validated .txt - generated with Flybase id validator
1694566841894:## there are 2 'FlyFactor' FBgn codes that are updated two more than 1 unique 'Validated' FBgns in `fbgn.validated`
1694566841906:# FBgn0051782 -- CG31782 in flyfactor - old annotation? no present in Flybase, maybe split into three differen pseudogene annos now
1694566841918:# FBgn0050420 -- is only Atf-2 in flyfactor db
1694566841928:fbgn.validated <- read.table('fbgn_validated.txt', header = F, sep = '\t')
1694566841948:colnames(fbgn.validated) <- c('FlyFactor', 'Validated', 'Symbol')
1694566841961:fbgn.validated %<>%
1694566841970:dplyr::filter(FlyFactor != 'FBgn0051782') %>% #drop this FBgn, problematic update to multiple new FBgns of pseudogenes
1694566841980:dplyr::filter(Validated != 'FBgn0265182') # drop this Validated FBgn, which is an incorrectly updated from FBgn0050420
1694566842006:## global variables
1694566842016:###
1694566842025:# assign global variables
1694566842034:###
1694566842051:dm6 <- BSgenome.Dmelanogaster.UCSC.dm6::BSgenome.Dmelanogaster.UCSC.dm6
1694566842097:#dm3 <- BSgenome.Dmelanogaster.UCSC.dm3::BSgenome.Dmelanogaster.UCSC.dm3
1694566842108:dm6.TxDb <- TxDb.Dmelanogaster.UCSC.dm6.ensGene::TxDb.Dmelanogaster.UCSC.dm6.ensGene
1694566842231:dm6.promoters <- ChIPseeker::getPromoters(dm6.TxDb, upstream = 500, downstream = 100)
1694566843287:dm6.genes <- GenomicFeatures::genes(dm6.TxDb)
1694566843933:brD <- data.frame('seqnames' = 'chrX',
1694566843942:'start' = 1565708,
1694566843952:'end' = 1567401) %>%
1694566843962:GenomicRanges::GRanges()
1694566844030:shn <- data.frame('seqnames' = 'chr2R',
1694566844040:'start' = 11159086,
1694566844051:'end' = 11217394) %>%
1694566844060:GRanges()
1694566844121:sbb <- data.frame('seqnames' = 'chr2R',
1694566844131:'start' = 18278198,
1694566844142:'end' = 18357296) %>%
1694566844152:GRanges()
1694566844214:# Dl
1694566844225:#chr3R:19,265,389-19,350,508
1694566844236:Dl <- data.frame('seqnames' = 'chr3R',
1694566844245:'start' = 19265389,
1694566844256:'end' = 19350508) %>%
1694566844265:GRanges()
1694566844333:# E(spl)-c
1694566844342:#chr3R:25,980,255-26,065,374
1694566844353:espl <- data.frame('seqnames' = 'chr3R',
1694566844363:'start' = 25980255,
1694566844372:'end' = 26065374) %>%
1694566844381:GRanges()
1694566844441:# ac/sc
1694566844452:#chrX:365,344-402,061
1694566844462:acsc <- data.frame('seqnames' = 'chrX',
1694566844472:'start' = 365344,
1694566844482:'end' = 402061) %>%
1694566844492:GRanges()
1694566844550:# serrate
1694566844561:#chr3R:27,167,731-27,227,610
1694566844572:ser <- data.frame('seqnames' = 'chr3R',
1694566844582:'start' = 27167731,
1694566844592:'end' = 27227610) %>%
1694566844601:GRanges()
1694566844660:# notch
1694566844672:#chrX:3,093,887-3,206,341
1694566844683:notch <- data.frame('seqnames' = 'chrX',
1694566844694:'start' = 3093887,
1694566844705:'end' = 3206341) %>%
1694566844716:GRanges()
1694566844768:###
1694566844785:# nubbin
1694566844795:#chr2L:12,542,935-12,696,192
1694566844851:nub <- data.frame('seqnames' = 'chr2L',
1694566844862:'start' = 12542935,
1694566844876:'end' = 12696192) %>%
1694566844887:GRanges()
1694566844940:# enhancers
1694566844950:###
1694566844967:redFly_enhancers <- read.table('bed/all_Dmel_CRM-sorted-merged.bed', sep = '\t')
1694566845016:colnames(redFly_enhancers) <- c('seqnames', 'start','end')
1694566845035:redFly_enhancers.ranges <- GRanges(redFly_enhancers)
1694566845121:## memes setup
1694566845131:###
1694566845141:# meme db
1694566845151:###
1694566845162:#TODO - so clunky...
1694566845172:# loading in the fly factor database, drop out a couple of problematic fbgn
1694566845182:# then use the fbgn.validated lookup table for fly factor to update all the old ids to correct ids
1694566845192:# then filter on the on gene list -- which has to go through a similar process of id validation
1694566845201:# gross
1694566845211:meme_db <- universalmotif::read_meme('~/McKay/Motif_databases/FLY/fly_factor_survey.meme') %>%
1694566845222:universalmotif::to_df() %>%
1694566845231:dplyr::group_by(name) %>%
1694566845241:dplyr::filter(!grepl('FBgn0051782|FBgn0265182', name)) %>%  #drop this FBgn, problematic update to multiple new FBgns of pseudogenes
1694566845271:dplyr::mutate(basename = stringr::str_split_fixed(name, '_', n = 2)[[1]],
1694566845282:fbgn.validated = fbgn.validated[fbgn.validated$FlyFactor == basename,]$Validated)
1694567328964:library(magrittr)
1694567328981:library(ggplot2)
1694567328995:#library(ggrepel)
1694567329010:library(GenomicRanges)
1694567329066:library(org.Dm.eg.db)
1694567329080:library(AnnotationDbi)
1694567329103:library(EnrichedHeatmap)
1694567329714:library(ComplexHeatmap)
1694567329739:#library(GO.db)
1694567329761:#library(patchwork)
1694567329780:source('utils.R')
1694567329802:source('NystLib/R/peakUtils.R') #TODO move/rewrite getPeakData from NystLib to utils.R
1694567329835:## load data
1694567329856:load('rData/sheets.rda')
1694567329946:load('rData/peaks.rda')
1694567333063:load('rData/rnaiScreen.rda')
1694567333153:#TODO move RNAseq data into BAP project
1694567333166:# TODO this is in progress - mixed across directories
1694567333179:load('rData/wing-rnaseq-GeTMM.RData')  # GeTMM normalized RNAseq
1694567333364:#loads 'wing.rnaseq'
1694567333385:#load('rData/wing-rnaseq-DDS.RData')  # loads dds.results
1694567333399:## TODO -- no id validation yet need to fix
1694567333414:#rna.dds <- dds.results %>%
1694567333427:#  dplyr::filter(baseMean_6h > 0) %>%
1694567333439:#  tibble::rownames_to_column(var = 'Geneid')
1694567333457:ON.genes <- wing.rnaseq %>%
1694567333469:dplyr::filter(mean >= 2) %>%
1694567333480:dplyr::select(Geneid)
1694567333506:ON.genes %>% write.table('on-rnaseq.txt', sep = '\n', row.names = F, col.names = F, quote = F)
1694567333536:#TODO clean this up - had to write out the on list and use the flybase id validator tool...
1694567333548:ON.genes.validated <- read.table('Wing-RNAseq/on-genes-IDvalidation.txt', header = T) %>%
1694567333560:dplyr::rename(Geneid = submitted_item,
1694567333572:Validated = validated_id,
1694567333585:Symbol = current_symbol)
1694567333672:#TODO move flyfactor database to BAP - code to download to repo?
1694567333686:## load in a flyfacotr fbgn validated .txt - generated with Flybase id validator
1694567333706:## there are 2 'FlyFactor' FBgn codes that are updated two more than 1 unique 'Validated' FBgns in `fbgn.validated`
1694567333718:# FBgn0051782 -- CG31782 in flyfactor - old annotation? no present in Flybase, maybe split into three differen pseudogene annos now
1694567333731:# FBgn0050420 -- is only Atf-2 in flyfactor db
1694567333743:fbgn.validated <- read.table('fbgn_validated.txt', header = F, sep = '\t')
1694567333762:colnames(fbgn.validated) <- c('FlyFactor', 'Validated', 'Symbol')
1694567333780:fbgn.validated %<>%
1694567333793:dplyr::filter(FlyFactor != 'FBgn0051782') %>% #drop this FBgn, problematic update to multiple new FBgns of pseudogenes
1694567333807:dplyr::filter(Validated != 'FBgn0265182') # drop this Validated FBgn, which is an incorrectly updated from FBgn0050420
1694567333833:## global variables
1694567333845:###
1694567333857:# assign global variables
1694567333870:###
1694567333890:dm6 <- BSgenome.Dmelanogaster.UCSC.dm6::BSgenome.Dmelanogaster.UCSC.dm6
1694567333903:#dm3 <- BSgenome.Dmelanogaster.UCSC.dm3::BSgenome.Dmelanogaster.UCSC.dm3
1694567333916:dm6.TxDb <- TxDb.Dmelanogaster.UCSC.dm6.ensGene::TxDb.Dmelanogaster.UCSC.dm6.ensGene
1694567333936:dm6.promoters <- ChIPseeker::getPromoters(dm6.TxDb, upstream = 500, downstream = 100)
1694567333989:dm6.genes <- GenomicFeatures::genes(dm6.TxDb)
1694567334573:brD <- data.frame('seqnames' = 'chrX',
1694567334587:'start' = 1565708,
1694567334600:'end' = 1567401) %>%
1694567334613:GenomicRanges::GRanges()
1694567334684:shn <- data.frame('seqnames' = 'chr2R',
1694567334698:'start' = 11159086,
1694567334713:'end' = 11217394) %>%
1694567334726:GRanges()
1694567334792:sbb <- data.frame('seqnames' = 'chr2R',
1694567334806:'start' = 18278198,
1694567334820:'end' = 18357296) %>%
1694567334834:GRanges()
1694567334900:# Dl
1694567334913:#chr3R:19,265,389-19,350,508
1694567334927:Dl <- data.frame('seqnames' = 'chr3R',
1694567334962:'start' = 19265389,
1694567334978:'end' = 19350508) %>%
1694567334993:GRanges()
1694567335069:# E(spl)-c
1694567335081:#chr3R:25,980,255-26,065,374
1694567335094:espl <- data.frame('seqnames' = 'chr3R',
1694567335108:'start' = 25980255,
1694567335121:'end' = 26065374) %>%
1694567335135:GRanges()
1694567335204:# ac/sc
1694567335216:#chrX:365,344-402,061
1694567335228:acsc <- data.frame('seqnames' = 'chrX',
1694567335240:'start' = 365344,
1694567335254:'end' = 402061) %>%
1694567335268:GRanges()
1694567335336:# serrate
1694567335349:#chr3R:27,167,731-27,227,610
1694567335362:ser <- data.frame('seqnames' = 'chr3R',
1694567335375:'start' = 27167731,
1694567335388:'end' = 27227610) %>%
1694567335401:GRanges()
1694567335464:# notch
1694567335477:#chrX:3,093,887-3,206,341
1694567335488:notch <- data.frame('seqnames' = 'chrX',
1694567335502:'start' = 3093887,
1694567335514:'end' = 3206341) %>%
1694567335527:GRanges()
1694567335589:###
1694567335609:# nubbin
1694567335623:#chr2L:12,542,935-12,696,192
1694567335639:nub <- data.frame('seqnames' = 'chr2L',
1694567335654:'start' = 12542935,
1694567335669:'end' = 12696192) %>%
1694567335683:GRanges()
1694567335740:# enhancers
1694567335752:###
1694567335772:redFly_enhancers <- read.table('bed/all_Dmel_CRM-sorted-merged.bed', sep = '\t')
1694567335811:colnames(redFly_enhancers) <- c('seqnames', 'start','end')
1694567335830:redFly_enhancers.ranges <- GRanges(redFly_enhancers)
1694567335932:## memes setup
1694567335950:###
1694567335963:# meme db
1694567335975:###
1694567335988:#TODO - so clunky...
1694567336000:# loading in the fly factor database, drop out a couple of problematic fbgn
1694567336012:# then use the fbgn.validated lookup table for fly factor to update all the old ids to correct ids
1694567336025:# then filter on the on gene list -- which has to go through a similar process of id validation
1694567336037:# gross
1694567336049:meme_db <- universalmotif::read_meme('fly_factor_survey.meme') %>%
1694567336061:universalmotif::to_df() %>%
1694567336072:dplyr::group_by(name) %>%
1694567336084:dplyr::filter(!grepl('FBgn0051782|FBgn0265182', name)) %>%  #drop this FBgn, problematic update to multiple new FBgns of pseudogenes
1694567336097:dplyr::mutate(basename = stringr::str_split_fixed(name, '_', n = 2)[[1]],
1694567336110:fbgn.validated = fbgn.validated[fbgn.validated$FlyFactor == basename,]$Validated)
1694567338395:meme_db_on <- meme_db %>%
1694567338408:dplyr::filter(fbgn.validated %in% ON.genes.validated$Validated)
1694567338477:options(meme_db = universalmotif::to_list(meme_db_on, extrainfo = F))
1694567338539:## colors
1694567338555:viridis.hex <- c("#440154","#3b528b","#21918c","#5ec962","#5ec962","#fde725")
1694567338569:cbPalette <- c("#999999", "#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7")
1694567338584:cbPalette.4 <- c("#D81B60","#1E88E5","#FFC107","#004D40")
1694567338600:cbPalette.ibm <- c('#332288','#117733','#44AA99','#88CCEE','#DDCC77','#CC6677','#AA4499','#882255')
1694567338620:## browser
1694567338632:WTFAIRE.colors <- c("grey10","grey20","grey30","grey40","grey50","grey60")
1694567338653:## peak subsets
1694567338666:osaPeaks <- peaks$cnr.df %>%
1694567338679:dplyr::filter(osa.cnr & !yw.cnr) %>%
1694567338692:GRanges() %>%
1694567338704:resize(width = 1, fix = "center")
1694567338808:osaPeaks.full <- peaks$cnr.df %>%
1694567338820:dplyr::filter(osa.cnr & !yw.cnr) %>%
1694567338833:GRanges(seqlengths = seqlengths(dm6))
1694567338922:osaPeaks.enhancers.full <- osaPeaks.full %>%
1694567338935:data.frame() %>%
1694567338948:dplyr::filter(anno.new %in% c('Distal Intergenic', 'Intron')) %>%
1694567338976:GRanges()
1694567339155:# uses rep1 summit coordinates
1694567339168:osaPeaks.summits <- subsetByOverlaps(cnr.summits, osaPeaks.full)
1694567339295:osaPeaks.faire.summits <- subsetByOverlaps(faire.wt.3LW.summits, osaPeaks.full)
1694567339376:fairePeaks.wt <- peaks$faire.wt.df %>%
1694567339388:#  dplyr::filter(assay == 'faire' & experiment == 'WT FAIRE Wing Timecourse') %>%
1694567339399:GRanges() %>%
1694567339412:resize(width = 1, fix = "center")
1694567339605:#redundant... but used in a couple chunks for motif analysis
1694567339618:fairePeaks.wt.full <- peaks$faire.wt.df %>%
1694567340638:dplyr::filter(assay == 'faire'  & experiment == 'WT FAIRE Wing Timecourse')
1694567341323:#DONE - remove the peakCat ? since now using log2fold change for these categories...
1694567341336:# switched to using osaDeg.qF which is a peak set derived from diffbind, that has been subset using iranges by intersect
1694567341349:# with quality filtered peak calls in peaks$faire.osaDeg.df
1694567341362:osaDeg.center <- osaDeg.qF %>%
1694567341377:GRanges() %>%
1694567341391:resize(width = 1, fix = "center")
1694567341618:# rotund peaks
1694567341630:rn.peaks <- peaks$rn.df %>%
1694567341646:GRanges()
1694567341707:rn.distal <- rn.peaks %>%
1694567341744:dplyr::filter(anno.new %in% c('Distal Intergenic', 'Intron')) %>%
1694567341758:GRanges()
1694567342246:# genomic 500bp
1694567342287:dm6.500bp <- peaks$dm6.500bp %>%
1694567342302:GRanges() %>%
1694567342315:resize(width = 1, fix = 'center')
1694567344679:#fairePeaks.osaDependent <- fairePeaks.deg %>%
1694567344691:#  data.frame() %>%
1694567344704:#  dplyr::filter(faireCat.osaDeGrad == 'Osa Dependent') %>%
1694567344717:#  GRanges()
1694567344729:#
1694567344742:#fairePeaks.osaIndependent <- fairePeaks.deg %>%
1694567344755:#  data.frame() %>%
1694567344767:#  dplyr::filter(faireCat.osaDeGrad == 'Osa Independent') %>%
1694567344779:#  GRanges()
1694567344792:#
1694567344804:#fairePeaks.osaEctopic <- fairePeaks.deg %>%
1694567344816:#  data.frame() %>%
1694567344828:#  dplyr::filter(faireCat.osaDeGrad == 'Osa Ectopic') %>%
1694567344842:#  GRanges()
1694567344877:## load bws
1694567344905:#TODO - cleanup - move matrices?
1694567344923:bws <- get_bws(dplyr::bind_rows(cnr.ss, faire.wt.ssPool), 'id')
1694567371458:deg.bws <- get_bws(faire.ss %>% dplyr::filter(experiment == 'osaGFP deGrad FAIRE'), 'id')
1694567376334:#TODO move data to main project directory and fix path
1694567376346:#TODO merge reps?
1694567376358:#k27ac.bw <- rtracklayer::import.bw('~/mckay/h3k27ac_cnr/bigwig/yw-3LW-wing-ak27ac-pel-Rep1_dm6_trim_q5_dupsRemoved_allFrags_rpgcNorm_zNorm.bw')
1694567376370:#TODO put these notes in better place"
1694567376381:## K27ac data- yeast spikein norm pel data is generally lower in rep2 than rep1, this is not seen in znorm or drosYak norm data
1694567376393:## drosYak norm signal is "low" as in the absolute values are usually < 1, but the normalization between samples looks good, and the signal to noise still looks fine, not appreciably better or worse that znorm
1694567376405:## using pellet because only have 2 reps of pel, only 1 of sup - the sup rep looks really good though I think
1694567376417:## using large fragments only because all fractions/reps show poor signal in <120 bp frag split
1694567376435:#k27ac.bw <- rtracklayer::import.bw('~/mckay/H3K27ac_CnR/BigWig/yw-3LW-wing-ak27ac-pel-MEAN_dm6_trim_q5_dupsRemoved_150to700_rpgcNorm_zNorm.bw')
1694567376447:k27ac.1.bw <- rtracklayer::import.bw('BigWig/yw-3LW-wing-ak27ac-pel-Rep1_dm6_trim_q5_dupsRemoved_150to700_rpgcNorm_zNorm.bw')
1694567377002:k27ac.2.bw <- rtracklayer::import.bw('BigWig/yw-3LW-wing-ak27ac-pel-Rep2_dm6_trim_q5_dupsRemoved_150to700_rpgcNorm_zNorm.bw')
1694567377813:## functions
1694567377833:plot.frac <- function(x) {
1694567377846:lapply(unique(x$change), function(i) {
1694567377860:x %>%
1694567377873:dplyr::filter(change == i) %>%
1694567377886:ggplot(aes(fraction, change, fill = Osa.Bound)) +
1694567377900:geom_bar(stat = 'identity', width = 1) +
1694567377914:geom_text(aes(label = per), position = position_fill(vjust = 0.6),  size = 7, fontface = "bold") +
1694567377928:#geom_text(aes(label = per, position = position_stack(vjust = 0.5))) +
1694567377941:scale_fill_manual(values = c('grey80','#41f0ad'), name = 'Osa Bound') +
1694567377954:scale_y_discrete(position = 'right', ) +
1694567377967:xlab('Percent Bound by Osa') +
1694567377980:theme(legend.position = 'top',
1694567377993:legend.key.size = unit(1, 'cm'),
1694567378006:legend.text = element_text(size = 15),
1694567378020:legend.title = element_text(size = 20),
1694567378033:panel.background = element_blank(),
1694567378049:axis.text = element_blank(),
1694567378062:axis.title = element_blank(),
1694567378074:axis.ticks = element_blank(),
1694567378086:#           axis.text.y = element_text(size = 12),
1694567378098:panel.grid = element_blank()) +
1694567378111:NULL
1694567378124:fn = paste0('rPlots/3E_',i,'.png')
1694567378136:ggsave(fn, width = 6, height = 1.5, units = 'in', dpi = 300 )
1694567378148:})
1694567378160:}
1694567378179:## .bed out
1694567378191:osaPeaks %>%
1694567378204:data.frame() %>%
1694567378216:dplyr::select(seqnames, start, end) %>%
1694567378227:write.table('osaPeaks.bed', quote = F, col.names = F, row.names = F, sep = '\t')
1694567378379:osaPeaks.full %>%
1694567378393:data.frame() %>%
1694567378406:dplyr::select(seqnames, start, end) %>%
1694567378418:write.table('osaPeaks-full.bed', quote = F, col.names = F, row.names = F, sep = '\t')
1694567378511:peaks$cnr.df %>%
1694567378523:data.frame() %>%
1694567378537:dplyr::filter(yw.cnr) %>%
1694567378555:dplyr::select(seqnames, start, end) %>%
1694567378568:write.table('controlPeaks.bed', quote = F, col.names = F, row.names = F, sep = '\t')
1694567378603:#fairePeaks.osaDependent %>%
1694567378616:#  data.frame() %>%
1694567378629:#  dplyr::select(seqnames, start, end) %>%
1694567378642:#  write.table('osaDependent.bed', quote = F, col.names = F, row.names = F, sep = '\t')
1694567378654:#
1694567378666:#fairePeaks.osaEctopic %>%
1694567378679:#  data.frame() %>%
1694567378691:#  dplyr::select(seqnames, start, end) %>%
1694567378704:#  write.table('osaEctopic.bed', quote = F, col.names = F, row.names = F, sep = '\t')
1694567378758:#
1694567378788:## gviz
1694567378801:track.colors <- c("grey40","#D01C8B", "grey40","#D01C8B")
1694567378822:cnr.ss.browser <- cnr.ss %>% dplyr::mutate(color = track.colors)
1694567378876:mckay_enhancers <- read.table('bed/cloned_enhancers_dm6.bed', sep = '\t')
1694567378898:Delta_enhancers <- read.table('bed/cloned_Delta_enhancers.bed', sep = '\t')
1694567378923:espl_enhancers <- read.table('bed/espl_enhancers-merge.bed', sep = '\t')
1694567378955:enhancers <- dplyr::bind_rows(Delta_enhancers, espl_enhancers)
1694567378975:colnames(enhancers) <- c('seqnames', 'start','end','name')
1694567378993:enhancer.ranges <- GRanges(enhancers)
1694567379248:enhancertrack <- Gviz::AnnotationTrack(range = enhancer.ranges,
1694567379261:genome = 'dm6',
1694567379274:fill = '#18c708',
1694567379287:col = 'transparent',
1694567379301:background.title = 'white',
1694567379314:showTitle = F)
1694567379690:genetrack <- Gviz::GeneRegionTrack(range = dm6.TxDb, fill = 'grey80', showTitle = F, background.title = 'white', stacking = 'squish')
1694567384280:peakTrack <- Gviz::AnnotationTrack(range = osaPeaks.full,
1694567384293:genome = 'dm6',
1694567384307:fill = '#D01C8B',
1694567384320:col = 'transparent',
1694567384334:background.title = 'white',
1694567384347:showTitle = F )
1694567384784:#TODO - is osa.dependent annotation correct? using diffbind?
1694567384797:osaDep.peakTrack <- Gviz::AnnotationTrack(range = GRanges(peaks$faire.osaDeg.df %>% dplyr::filter(osa.dependent)),
1694567384811:#osaDep.peakTrack <- Gviz::AnnotationTrack(range = osaDeg.osaDep,
1694567384822:genome = 'dm6',
1694567384834:fill = '#469ae8',
1694567384846:col = 'transparent',
1694567384857:background.title = 'white',
1694567384869:showTitle = F)
1694567385155:hairless_peaks <- read.table('bed/hairless-dm6.bed', col.names = c('seqnames', 'start', 'end')) %>% GRanges()
1694567385226:hTrack <- Gviz::AnnotationTrack(range = hairless_peaks,
1694567385239:genome = 'dm6',
1694567385252:fill = '#2ad4c3',
1694567385264:col = 'transparent',
1694567385277:background.title = 'white',
1694567385290:showTitle = F)
1694567385455:spacer <- Gviz::AnnotationTrack(background.title = 'white')
1694567385927:## matrices for heatmaps
1694567385946:mats <- purrr::map(bws, ~{
1694567385959:normalizeToMatrix(., osaPeaks, value_column = 'score', keep = c(0.01, 0.99), extend = 2000)
1694567385970:})
1694567474271:names(mats) <- names(bws)
1694567490109:#TODO - best way to generate replicate average signal tracks
1694567490122:#TODO - functionalize givz plotting -- see SLN e93 gof repo - wrote series of functions for browser shot plotting
1694567490142:#track.colors <- RColorBrewer::brewer.pal(n = 4, "PiYG")
1694567490161:faire.wt.browser <- faire.wt.ssPool %>%
1694567490172:#dplyr::filter(grepl('3LW',time)) %>%
1694567490185:dplyr::mutate(color = WTFAIRE.colors)
1694567490233:faire.wt.tracks <- get_cnr_tracks(faire.wt.browser, ylim = c(0,15))
1694567490610:faire.wt.tracks <- c(faire.wt.tracks$wt_3LW,
1694567490624:faire.wt.tracks$wt_6h,
1694567490648:faire.wt.tracks$wt_18h,
1694567490676:faire.wt.tracks$wt_24h,
1694567490692:faire.wt.tracks$wt_36h,
1694567490705:faire.wt.tracks$wt_44h)
1694567490725:brdisc.at <- Gviz::AnnotationTrack(range = brD, genome = 'dm6', name = 'brDisc', fill = '#e858a5', col = 'transparent', background.title = 'white', showTitle = F )
1694567490878:axis <- Gviz::GenomeAxisTrack(scale = 10000)
1694567490977:png('rPlots/1B.png', width = 4, height = 6, res = 300, units = 'in')
1694567491077:Gviz::plotTracks(c(axis,faire.wt.tracks, brdisc.at, genetrack), chromosome = seqnames(brD) %>% as.character(),
1694567491091:from = start(brD + 10000),
1694567491105:to = end(brD + 10000),
1694567491118:cex.axis = 0.3,
1694567491131:cex.title = 0.5,
1694567491147:title.width = 1,
1694567491193:innerMargin = 10)
1694567500095:dev.off()
1694567522452:Gviz::plotTracks(c(axis,faire.wt.tracks, brdisc.at, genetrack), chromosome = seqnames(brD) %>% as.character(),
1694567522464:from = start(brD + 10000),
1694567522475:to = end(brD + 10000),
1694567522485:cex.axis = 0.3,
1694567522496:cex.title = 0.5,
1694567522506:title.width = 1,
1694567522516:innerMargin = 10)
1694567599870:fig1b <- Gviz::plotTracks(c(axis,faire.wt.tracks, brdisc.at, genetrack), chromosome = seqnames(brD) %>% as.character(),
1694567599881:from = start(brD + 10000),
1694567599891:to = end(brD + 10000),
1694567599903:cex.axis = 0.3,
1694567599913:cex.title = 0.5,
1694567599924:title.width = 1,
1694567599935:innerMargin = 10)
1694567609619:#TODO - best way to generate replicate average signal tracks
1694567609634:#TODO - functionalize givz plotting -- see SLN e93 gof repo - wrote series of functions for browser shot plotting
1694567609653:#track.colors <- RColorBrewer::brewer.pal(n = 4, "PiYG")
1694567609671:faire.wt.browser <- faire.wt.ssPool %>%
1694567609684:#dplyr::filter(grepl('3LW',time)) %>%
1694567609697:dplyr::mutate(color = WTFAIRE.colors)
1694567609728:faire.wt.tracks <- get_cnr_tracks(faire.wt.browser, ylim = c(0,15))
1694567609869:faire.wt.tracks <- c(faire.wt.tracks$wt_3LW,
1694567609881:faire.wt.tracks$wt_6h,
1694567609894:faire.wt.tracks$wt_18h,
1694567609906:faire.wt.tracks$wt_24h,
1694567609919:faire.wt.tracks$wt_36h,
1694567609932:faire.wt.tracks$wt_44h)
1694567609953:brdisc.at <- Gviz::AnnotationTrack(range = brD, genome = 'dm6', name = 'brDisc', fill = '#e858a5', col = 'transparent', background.title = 'white', showTitle = F )
1694567610117:axis <- Gviz::GenomeAxisTrack(scale = 10000)
1694567610199:fig1b <- Gviz::plotTracks(c(axis,faire.wt.tracks, brdisc.at, genetrack), chromosome = seqnames(brD) %>% as.character(),
1694567610290:from = start(brD + 10000),
1694567610303:to = end(brD + 10000),
1694567610316:cex.axis = 0.3,
1694567610329:cex.title = 0.5,
1694567610341:title.width = 1,
1694567610354:innerMargin = 10)
1694567613605:png('rPlots/1B.png', width = 4, height = 6, res = 300, units = 'in')
1694567613621:fig1b
1694567613879:dev.off()
1694567639461:png('rPlots/1B.png', width = 4, height = 6, res = 300, units = 'in')
1694567639473:fig1b
1694567639773:dev.off()
1694567661466:fig1b
1694567668841:fig1b
1694567764199:plot(fig1b)
1694567795937:fig1b
1694567814316:Gviz::plotTracks(fig1b)
1694567872158:#TODO - best way to generate replicate average signal tracks
1694567872172:#TODO - functionalize givz plotting -- see SLN e93 gof repo - wrote series of functions for browser shot plotting
1694567872192:#track.colors <- RColorBrewer::brewer.pal(n = 4, "PiYG")
1694567872211:faire.wt.browser <- faire.wt.ssPool %>%
1694567872224:#dplyr::filter(grepl('3LW',time)) %>%
1694567872236:dplyr::mutate(color = WTFAIRE.colors)
1694567872265:faire.wt.tracks <- get_cnr_tracks(faire.wt.browser, ylim = c(0,15))
1694567872401:faire.wt.tracks <- c(faire.wt.tracks$wt_3LW,
1694567872414:faire.wt.tracks$wt_6h,
1694567872426:faire.wt.tracks$wt_18h,
1694567872439:faire.wt.tracks$wt_24h,
1694567872452:faire.wt.tracks$wt_36h,
1694567872464:faire.wt.tracks$wt_44h)
1694567872484:brdisc.at <- Gviz::AnnotationTrack(range = brD, genome = 'dm6', name = 'brDisc', fill = '#e858a5', col = 'transparent', background.title = 'white', showTitle = F )
1694567872644:axis <- Gviz::GenomeAxisTrack(scale = 10000)
1694567872739:png('rPlots/1B.png', width = 4, height = 6, res = 300, units = 'in')
1694567872753:Gviz::plotTracks(c(axis,faire.wt.tracks, brdisc.at, genetrack), chromosome = seqnames(brD) %>% as.character(),
1694567872765:from = start(brD + 10000),
1694567872778:to = end(brD + 10000),
1694567872790:cex.axis = 0.3,
1694567872803:cex.title = 0.5,
1694567872815:title.width = 1,
1694567872831:innerMargin = 10)
1694567875505:dev.off()
1694567883113:# chr2L:12,575,166-12,591,435 - locus
1694567883126:#chr2L 12580391  12581350 - enhancer
1694567883139:nubv <- data.frame('seqnames' = 'chr2L',
1694567883159:'start' = 12580391,
1694567883174:'end' = 12581350) %>%
1694567883194:GRanges()
1694567883251:faire.wt.ssPool
1694567883290:#TODO - best way to generate replicate average signal tracks
1694567883314:#TODO - functionalize givz plotting -- see SLN e93 gof repo - wrote series of functions for browser shot plotting
1694567883333:#track.colors <- RColorBrewer::brewer.pal(n = 4, "PiYG")
1694567883355:faire.wt.browser <- faire.wt.ssPool %>%
1694567883368:#dplyr::filter(grepl('3LW',time)) %>%
1694567883381:dplyr::mutate(color = WTFAIRE.colors)
1694567883414:faire.wt.tracks <- get_cnr_tracks(faire.wt.browser, ylim = c(0,10))
1694567883551:faire.wt.tracks <- c(faire.wt.tracks$wt_3LW,
1694567883564:faire.wt.tracks$wt_6h,
1694567883578:faire.wt.tracks$wt_18h,
1694567883728:faire.wt.tracks$wt_24h,
1694567883786:faire.wt.tracks$wt_36h,
1694567883799:faire.wt.tracks$wt_44h)
1694567883820:nubv.ant <- Gviz::AnnotationTrack(range = nubv, genome = 'dm6', name = 'nubVein', fill = '#e858a5', col = 'transparent', background.title = 'white', showTitle = F )
1694567884601:axis <- Gviz::GenomeAxisTrack(scale = 10000)
1694567884832:png('rPlots/nubv.png', width = 6, height = 6, res = 300, units = 'in')
1694567884847:Gviz::plotTracks(c(axis,faire.wt.tracks, nubv.ant, genetrack), chromosome = seqnames(nubv) %>% as.character(),
1694567884860:from = start(nubv+5000),
1694567884873:to = end(nubv+10000),
1694567884885:cex.axis = 0.3,
1694567884897:cex.title = 0.5,
1694567884909:title.width = 1,
1694567884928:innerMargin = 10)
1694567887350:dev.off()
1694567892479:replicate_sheet <- read.csv('../rnaiScreen_replicate_wings.csv') %>%
1694567892493:dplyr::mutate(replicate = paste(symbol, line, date, drop, sep = '_'))
1695314338973:library(magrittr)
1695314339008:library(ggplot2)
1695314339071:#library(ggrepel)
1695314339081:library(GenomicRanges)
1695314339298:library(org.Dm.eg.db)
1695314339575:library(AnnotationDbi)
1695314339593:library(EnrichedHeatmap)
1695314339689:library(ComplexHeatmap)
1695314339706:#library(GO.db)
1695314339723:#library(patchwork)
1695314339739:source('../scripts/utils.R')
1695314339754:source('../scripts/peakUtils.R') #TODO move/rewrite getPeakData from NystLib to utils.R
1695314339855:## load data
1695314339874:load('../rData/sheets.rda')
1695314339995:load('../rData/peaks.rda')
1695314347695:load('../rData/rnaiScreen.rda')
1695314347793:ON.genes.validated <- read.table('../Data/on-genes-IDvalidation.txt', header = T) %>%
1695314347805:dplyr::rename(Geneid = submitted_item,
1695314347814:Validated = validated_id,
1695314347825:Symbol = current_symbol)
1695314347931:## there are 2 'FlyFactor' FBgn codes that are updated two more than 1 unique 'Validated' FBgns in `fbgn.validated`
1695314347941:# FBgn0051782 -- CG31782 in flyfactor - old annotation? no present in Flybase, maybe split into three differen pseudogene annos now
1695314347951:# FBgn0050420 -- is only Atf-2 in flyfactor db
1695314347962:fbgn.validated <- read.table('../Data/fbgn_validated.txt', header = F, sep = '\t')
1695314347984:colnames(fbgn.validated) <- c('FlyFactor', 'Validated', 'Symbol')
1695314347997:fbgn.validated %<>%
1695314348007:dplyr::filter(FlyFactor != 'FBgn0051782') %>% #drop this FBgn, problematic update to multiple new FBgns of pseudogenes
1695314348017:dplyr::filter(Validated != 'FBgn0265182') # drop this Validated FBgn, which is an incorrectly updated from FBgn0050420
1695314348067:## global variables
1695314348093:###
1695314348110:# assign global variables
1695314348122:###
1695314348140:dm6 <- BSgenome.Dmelanogaster.UCSC.dm6::BSgenome.Dmelanogaster.UCSC.dm6
1695314348244:#dm3 <- BSgenome.Dmelanogaster.UCSC.dm3::BSgenome.Dmelanogaster.UCSC.dm3
1695314348254:dm6.TxDb <- TxDb.Dmelanogaster.UCSC.dm6.ensGene::TxDb.Dmelanogaster.UCSC.dm6.ensGene
1695314348386:dm6.promoters <- ChIPseeker::getPromoters(dm6.TxDb, upstream = 500, downstream = 100)
1695314351587:dm6.genes <- GenomicFeatures::genes(dm6.TxDb)
1695314353126:brD <- data.frame('seqnames' = 'chrX',
1695314353137:'start' = 1565708,
1695314353146:'end' = 1567401) %>%
1695314353156:GenomicRanges::GRanges()
1695314353221:shn <- data.frame('seqnames' = 'chr2R',
1695314353232:'start' = 11159086,
1695314353242:'end' = 11217394) %>%
1695314353252:GRanges()
1695314353318:sbb <- data.frame('seqnames' = 'chr2R',
1695314353330:'start' = 18278198,
1695314353341:'end' = 18357296) %>%
1695314353352:GRanges()
1695314353425:# Dl
1695314353436:#chr3R:19,265,389-19,350,508
1695314353446:Dl <- data.frame('seqnames' = 'chr3R',
1695314353457:'start' = 19265389,
1695314353645:'end' = 19350508) %>%
1695314353654:GRanges()
1695314353723:# E(spl)-c
1695314353733:#chr3R:25,980,255-26,065,374
1695314353743:espl <- data.frame('seqnames' = 'chr3R',
1695314353753:'start' = 25980255,
1695314353762:'end' = 26065374) %>%
1695314353771:GRanges()
1695314353828:# ac/sc
1695314353838:#chrX:365,344-402,061
1695314353848:acsc <- data.frame('seqnames' = 'chrX',
1695314353859:'start' = 365344,
1695314353870:'end' = 402061) %>%
1695314353880:GRanges()
1695314353938:# serrate
1695314353948:#chr3R:27,167,731-27,227,610
1695314353959:ser <- data.frame('seqnames' = 'chr3R',
1695314353969:'start' = 27167731,
1695314353978:'end' = 27227610) %>%
1695314353988:GRanges()
1695314354051:# notch
1695314354065:#chrX:3,093,887-3,206,341
1695314354079:notch <- data.frame('seqnames' = 'chrX',
1695314354091:'start' = 3093887,
1695314354104:'end' = 3206341) %>%
1695314354119:GRanges()
1695314354175:###
1695314354195:# nubbin
1695314354209:#chr2L:12,542,935-12,696,192
1695314354222:nub <- data.frame('seqnames' = 'chr2L',
1695314354234:'start' = 12542935,
1695314354247:'end' = 12696192) %>%
1695314354260:GRanges()
1695314354312:# enhancers
1695314354325:###
1695314354343:redFly_enhancers <- read.table('../bed/all_Dmel_CRM-sorted-merged.bed', sep = '\t')
1695314354397:colnames(redFly_enhancers) <- c('seqnames', 'start','end')
1695314354415:redFly_enhancers.ranges <- GRanges(redFly_enhancers)
1695314354509:## memes setup
1695314354522:###
1695314354536:# meme db
1695314354549:###
1695314354561:#TODO - so clunky...
1695314354574:# loading in the fly factor database, drop out a couple of problematic fbgn
1695314354587:# then use the fbgn.validated lookup table for fly factor to update all the old ids to correct ids
1695314354599:# then filter on the on gene list -- which has to go through a similar process of id validation
1695314354612:# gross
1695314354625:meme_db <- universalmotif::read_meme('../Data/fly_factor_survey.meme') %>%
1695314354638:universalmotif::to_df() %>%
1695314354651:dplyr::group_by(name) %>%
1695314354664:dplyr::filter(!grepl('FBgn0051782|FBgn0265182', name)) %>%  #drop this FBgn, problematic update to multiple new FBgns of pseudogenes
1695314354677:dplyr::mutate(basename = stringr::str_split_fixed(name, '_', n = 2)[[1]],
1695314354691:fbgn.validated = fbgn.validated[fbgn.validated$FlyFactor == basename,]$Validated)
1695314355640:meme_db_on <- meme_db %>%
1695314355655:dplyr::filter(fbgn.validated %in% ON.genes.validated$Validated)
1695314358372:options(meme_db = universalmotif::to_list(meme_db_on, extrainfo = F))
1695314358433:## colors
1695314358447:viridis.hex <- c("#440154","#3b528b","#21918c","#5ec962","#5ec962","#fde725")
1695314358462:cbPalette <- c("#999999", "#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7")
1695314358477:cbPalette.4 <- c("#D81B60","#1E88E5","#FFC107","#004D40")
1695314358492:cbPalette.ibm <- c('#332288','#117733','#44AA99','#88CCEE','#DDCC77','#CC6677','#AA4499','#882255')
1695314358515:## browser
1695314358529:WTFAIRE.colors <- c("grey10","grey20","grey30","grey40","grey50","grey60")
1695314358552:## peak subsets
1695314358566:osaPeaks <- peaks$cnr.df %>%
1695314358579:dplyr::filter(osa.cnr & !yw.cnr) %>%
1695314358593:GRanges() %>%
1695314358606:resize(width = 1, fix = "center")
1695314358737:osaPeaks.full <- peaks$cnr.df %>%
1695314358758:dplyr::filter(osa.cnr & !yw.cnr) %>%
1695314358772:GRanges(seqlengths = seqlengths(dm6))
1695314358866:osaPeaks.enhancers.full <- osaPeaks.full %>%
1695314358880:data.frame() %>%
1695314358893:dplyr::filter(anno.new %in% c('Distal Intergenic', 'Intron')) %>%
1695314358907:GRanges()
1695314359069:# uses rep1 summit coordinates
1695314359083:osaPeaks.summits <- subsetByOverlaps(cnr.summits, osaPeaks.full)
1695314359199:osaPeaks.faire.summits <- subsetByOverlaps(faire.wt.3LW.summits, osaPeaks.full)
1695314359299:fairePeaks.wt <- peaks$faire.wt.df %>%
1695314359311:#  dplyr::filter(assay == 'faire' & experiment == 'WT FAIRE Wing Timecourse') %>%
1695314359323:GRanges() %>%
1695314359335:resize(width = 1, fix = "center")
1695314359680:#redundant... but used in a couple chunks for motif analysis
1695314359693:fairePeaks.wt.full <- peaks$faire.wt.df %>%
1695314359707:dplyr::filter(assay == 'faire'  & experiment == 'WT FAIRE Wing Timecourse')
1695314361013:#DONE - remove the peakCat ? since now using log2fold change for these categories...
1695314361026:# switched to using osaDeg.qF which is a peak set derived from diffbind, that has been subset using iranges by intersect
1695314361039:# with quality filtered peak calls in peaks$faire.osaDeg.df
1695314361052:osaDeg.center <- osaDeg.qF %>%
1695314361065:GRanges() %>%
1695314361078:resize(width = 1, fix = "center")
1695314361235:# rotund peaks
1695314361249:rn.peaks <- peaks$rn.df %>%
1695314361263:GRanges()
1695314361327:rn.distal <- rn.peaks %>%
1695314361341:dplyr::filter(anno.new %in% c('Distal Intergenic', 'Intron')) %>%
1695314361355:GRanges()
1695314361970:# genomic 500bp
1695314361989:dm6.500bp <- peaks$dm6.500bp %>%
1695314362002:GRanges() %>%
1695314362016:resize(width = 1, fix = 'center')
1695314363494:#fairePeaks.osaDependent <- fairePeaks.deg %>%
1695314363507:#  data.frame() %>%
1695314363520:#  dplyr::filter(faireCat.osaDeGrad == 'Osa Dependent') %>%
1695314363533:#  GRanges()
1695314363546:#
1695314363559:#fairePeaks.osaIndependent <- fairePeaks.deg %>%
1695314363573:#  data.frame() %>%
1695314363587:#  dplyr::filter(faireCat.osaDeGrad == 'Osa Independent') %>%
1695314363600:#  GRanges()
1695314363613:#
1695314363626:#fairePeaks.osaEctopic <- fairePeaks.deg %>%
1695314363640:#  data.frame() %>%
1695314363653:#  dplyr::filter(faireCat.osaDeGrad == 'Osa Ectopic') %>%
1695314363666:#  GRanges()
1695314363705:## load bws
1695314363735:#TODO - cleanup - move matrices?
1695314363755:bws <- get_bws(dplyr::bind_rows(cnr.ss, faire.wt.ssPool), 'id')
1695314404493:cnr.ss
1695314485895:getwd()
1695314488928:ls
1695314494255:list()
1695314498658:getwd()
1695314523805:cnr.ss
1695314574512:get_bws
1695314597029:bws <- get_bws(dplyr::bind_rows(cnr.ss, faire.wt.ssPool), 'id')
1695314829007:library(magrittr)
1695314829017:library(ggplot2)
1695314829028:#library(ggrepel)
1695314829039:library(GenomicRanges)
1695314829056:library(org.Dm.eg.db)
1695314829067:library(AnnotationDbi)
1695314829084:library(EnrichedHeatmap)
1695314829095:library(ComplexHeatmap)
1695314829112:#library(GO.db)
1695314829129:#library(patchwork)
1695314829147:source('../scripts/utils.R')
1695314929157:library(magrittr)
1695314929171:library(ggplot2)
1695314929184:#library(ggrepel)
1695314929194:library(GenomicRanges)
1695314929213:library(org.Dm.eg.db)
1695314929225:library(AnnotationDbi)
1695314929243:library(EnrichedHeatmap)
1695314929254:library(ComplexHeatmap)
1695314929273:#library(GO.db)
1695314929290:#library(patchwork)
1695314929309:source('scripts/utils.R')
1695314929333:source('scripts/peakUtils.R') #TODO move/rewrite getPeakData from NystLib to utils.R
1695314929364:## load data
1695314929382:load('rData/sheets.rda')
1695314929462:load('rData/peaks.rda')
1695314934552:load('rData/rnaiScreen.rda')
1695314934669:ON.genes.validated <- read.table('Data/on-genes-IDvalidation.txt', header = T) %>%
1695314934681:dplyr::rename(Geneid = submitted_item,
1695314934694:Validated = validated_id,
1695314934705:Symbol = current_symbol)
1695314934749:## there are 2 'FlyFactor' FBgn codes that are updated two more than 1 unique 'Validated' FBgns in `fbgn.validated`
1695314934760:# FBgn0051782 -- CG31782 in flyfactor - old annotation? no present in Flybase, maybe split into three differen pseudogene annos now
1695314934772:# FBgn0050420 -- is only Atf-2 in flyfactor db
1695314934784:fbgn.validated <- read.table('Data/fbgn_validated.txt', header = F, sep = '\t')
1695314934802:colnames(fbgn.validated) <- c('FlyFactor', 'Validated', 'Symbol')
1695314934818:fbgn.validated %<>%
1695314934830:dplyr::filter(FlyFactor != 'FBgn0051782') %>% #drop this FBgn, problematic update to multiple new FBgns of pseudogenes
1695314934841:dplyr::filter(Validated != 'FBgn0265182') # drop this Validated FBgn, which is an incorrectly updated from FBgn0050420
1695314934870:## global variables
1695314934883:###
1695314934894:# assign global variables
1695314934905:###
1695314934924:dm6 <- BSgenome.Dmelanogaster.UCSC.dm6::BSgenome.Dmelanogaster.UCSC.dm6
1695314934936:#dm3 <- BSgenome.Dmelanogaster.UCSC.dm3::BSgenome.Dmelanogaster.UCSC.dm3
1695314934948:dm6.TxDb <- TxDb.Dmelanogaster.UCSC.dm6.ensGene::TxDb.Dmelanogaster.UCSC.dm6.ensGene
1695314934967:dm6.promoters <- ChIPseeker::getPromoters(dm6.TxDb, upstream = 500, downstream = 100)
1695314936715:dm6.genes <- GenomicFeatures::genes(dm6.TxDb)
1695314937294:brD <- data.frame('seqnames' = 'chrX',
1695314937306:'start' = 1565708,
1695314937322:'end' = 1567401) %>%
1695314937334:GenomicRanges::GRanges()
1695314937401:shn <- data.frame('seqnames' = 'chr2R',
1695314937413:'start' = 11159086,
1695314937426:'end' = 11217394) %>%
1695314937440:GRanges()
1695314937574:sbb <- data.frame('seqnames' = 'chr2R',
1695314937587:'start' = 18278198,
1695314937598:'end' = 18357296) %>%
1695314937610:GRanges()
1695314937675:# Dl
1695314937706:#chr3R:19,265,389-19,350,508
1695314937722:Dl <- data.frame('seqnames' = 'chr3R',
1695314937734:'start' = 19265389,
1695314937745:'end' = 19350508) %>%
1695314937758:GRanges()
1695314937832:# E(spl)-c
1695314937843:#chr3R:25,980,255-26,065,374
1695314937854:espl <- data.frame('seqnames' = 'chr3R',
1695314937865:'start' = 25980255,
1695314937876:'end' = 26065374) %>%
1695314937886:GRanges()
1695314937949:# ac/sc
1695314937962:#chrX:365,344-402,061
1695314937975:acsc <- data.frame('seqnames' = 'chrX',
1695314937987:'start' = 365344,
1695314937999:'end' = 402061) %>%
1695314938010:GRanges()
1695314938075:# serrate
1695314938087:#chr3R:27,167,731-27,227,610
1695314938099:ser <- data.frame('seqnames' = 'chr3R',
1695314938111:'start' = 27167731,
1695314938123:'end' = 27227610) %>%
1695314938134:GRanges()
1695314938208:# notch
1695314938222:#chrX:3,093,887-3,206,341
1695314938233:notch <- data.frame('seqnames' = 'chrX',
1695314938245:'start' = 3093887,
1695314938256:'end' = 3206341) %>%
1695314938268:GRanges()
1695314938326:###
1695314938346:# nubbin
1695314938357:#chr2L:12,542,935-12,696,192
1695314938369:nub <- data.frame('seqnames' = 'chr2L',
1695314938380:'start' = 12542935,
1695314938392:'end' = 12696192) %>%
1695314938404:GRanges()
1695314938459:# enhancers
1695314938471:###
1695314938491:redFly_enhancers <- read.table('bed/all_Dmel_CRM-sorted-merged.bed', sep = '\t')
1695314938534:colnames(redFly_enhancers) <- c('seqnames', 'start','end')
1695314938550:redFly_enhancers.ranges <- GRanges(redFly_enhancers)
1695314938663:## memes setup
1695314938675:###
1695314938687:# meme db
1695314938699:###
1695314938710:#TODO - so clunky...
1695314938722:# loading in the fly factor database, drop out a couple of problematic fbgn
1695314938735:# then use the fbgn.validated lookup table for fly factor to update all the old ids to correct ids
1695314938748:# then filter on the on gene list -- which has to go through a similar process of id validation
1695314938759:# gross
1695314938771:meme_db <- universalmotif::read_meme('Data/fly_factor_survey.meme') %>%
1695314938783:universalmotif::to_df() %>%
1695314938794:dplyr::group_by(name) %>%
1695314938806:dplyr::filter(!grepl('FBgn0051782|FBgn0265182', name)) %>%  #drop this FBgn, problematic update to multiple new FBgns of pseudogenes
1695314938817:dplyr::mutate(basename = stringr::str_split_fixed(name, '_', n = 2)[[1]],
1695314938829:fbgn.validated = fbgn.validated[fbgn.validated$FlyFactor == basename,]$Validated)
1695314939465:meme_db_on <- meme_db %>%
1695314940256:dplyr::filter(fbgn.validated %in% ON.genes.validated$Validated)
1695314940326:options(meme_db = universalmotif::to_list(meme_db_on, extrainfo = F))
1695314940391:## colors
1695314940405:viridis.hex <- c("#440154","#3b528b","#21918c","#5ec962","#5ec962","#fde725")
1695314940421:cbPalette <- c("#999999", "#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7")
1695314940436:cbPalette.4 <- c("#D81B60","#1E88E5","#FFC107","#004D40")
1695314940452:cbPalette.ibm <- c('#332288','#117733','#44AA99','#88CCEE','#DDCC77','#CC6677','#AA4499','#882255')
1695314940475:## browser
1695314940489:WTFAIRE.colors <- c("grey10","grey20","grey30","grey40","grey50","grey60")
1695314940512:## peak subsets
1695314940547:osaPeaks <- peaks$cnr.df %>%
1695314940564:dplyr::filter(osa.cnr & !yw.cnr) %>%
1695314940577:GRanges() %>%
1695314940590:resize(width = 1, fix = "center")
1695314940708:osaPeaks.full <- peaks$cnr.df %>%
1695314940722:dplyr::filter(osa.cnr & !yw.cnr) %>%
1695314940736:GRanges(seqlengths = seqlengths(dm6))
1695314940833:osaPeaks.enhancers.full <- osaPeaks.full %>%
1695314940848:data.frame() %>%
1695314940862:dplyr::filter(anno.new %in% c('Distal Intergenic', 'Intron')) %>%
1695314940876:GRanges()
1695314941035:# uses rep1 summit coordinates
1695314941049:osaPeaks.summits <- subsetByOverlaps(cnr.summits, osaPeaks.full)
1695314941115:osaPeaks.faire.summits <- subsetByOverlaps(faire.wt.3LW.summits, osaPeaks.full)
1695314941201:fairePeaks.wt <- peaks$faire.wt.df %>%
1695314941364:#  dplyr::filter(assay == 'faire' & experiment == 'WT FAIRE Wing Timecourse') %>%
1695314941378:GRanges() %>%
1695314941393:resize(width = 1, fix = "center")
1695314941595:#redundant... but used in a couple chunks for motif analysis
1695314941610:fairePeaks.wt.full <- peaks$faire.wt.df %>%
1695314941624:dplyr::filter(assay == 'faire'  & experiment == 'WT FAIRE Wing Timecourse')
1695314941927:#DONE - remove the peakCat ? since now using log2fold change for these categories...
1695314941940:# switched to using osaDeg.qF which is a peak set derived from diffbind, that has been subset using iranges by intersect
1695314941953:# with quality filtered peak calls in peaks$faire.osaDeg.df
1695314941967:osaDeg.center <- osaDeg.qF %>%
1695314941981:GRanges() %>%
1695314941997:resize(width = 1, fix = "center")
1695314942089:# rotund peaks
1695314942104:rn.peaks <- peaks$rn.df %>%
1695314942120:GRanges()
1695314942169:rn.distal <- rn.peaks %>%
1695314942183:dplyr::filter(anno.new %in% c('Distal Intergenic', 'Intron')) %>%
1695314942198:GRanges()
1695314942326:# genomic 500bp
1695314942347:dm6.500bp <- peaks$dm6.500bp %>%
1695314942360:GRanges() %>%
1695314942373:resize(width = 1, fix = 'center')
1695314942867:#fairePeaks.osaDependent <- fairePeaks.deg %>%
1695314942887:#  data.frame() %>%
1695314942904:#  dplyr::filter(faireCat.osaDeGrad == 'Osa Dependent') %>%
1695314942920:#  GRanges()
1695314942936:#
1695314942953:#fairePeaks.osaIndependent <- fairePeaks.deg %>%
1695314942968:#  data.frame() %>%
1695314942984:#  dplyr::filter(faireCat.osaDeGrad == 'Osa Independent') %>%
1695314943001:#  GRanges()
1695314943016:#
1695314943031:#fairePeaks.osaEctopic <- fairePeaks.deg %>%
1695314943045:#  data.frame() %>%
1695314943059:#  dplyr::filter(faireCat.osaDeGrad == 'Osa Ectopic') %>%
1695314943073:#  GRanges()
1695314943115:## load bws
1695314943151:#TODO - cleanup - move matrices?
1695314943172:bws <- get_bws(dplyr::bind_rows(cnr.ss, faire.wt.ssPool), 'id')
1695314988453:deg.bws <- get_bws(faire.ss %>% dplyr::filter(experiment == 'osaGFP deGrad FAIRE'), 'id')
1695314992441:#TODO move data to main project directory and fix path
1695314992455:#TODO merge reps?
1695314992467:#k27ac.bw <- rtracklayer::import.bw('~/mckay/h3k27ac_cnr/bigwig/yw-3LW-wing-ak27ac-pel-Rep1_dm6_trim_q5_dupsRemoved_allFrags_rpgcNorm_zNorm.bw')
1695314992479:#TODO put these notes in better place"
1695314992491:## K27ac data- yeast spikein norm pel data is generally lower in rep2 than rep1, this is not seen in znorm or drosYak norm data
1695314992503:## drosYak norm signal is "low" as in the absolute values are usually < 1, but the normalization between samples looks good, and the signal to noise still looks fine, not appreciably better or worse that znorm
1695314992515:## using pellet because only have 2 reps of pel, only 1 of sup - the sup rep looks really good though I think
1695314992528:## using large fragments only because all fractions/reps show poor signal in <120 bp frag split
1695314992548:#k27ac.bw <- rtracklayer::import.bw('~/mckay/H3K27ac_CnR/BigWig/yw-3LW-wing-ak27ac-pel-MEAN_dm6_trim_q5_dupsRemoved_150to700_rpgcNorm_zNorm.bw')
1695314992560:k27ac.1.bw <- rtracklayer::import.bw('BigWig/yw-3LW-wing-ak27ac-pel-Rep1_dm6_trim_q5_dupsRemoved_150to700_rpgcNorm_zNorm.bw')
1695314993101:k27ac.2.bw <- rtracklayer::import.bw('BigWig/yw-3LW-wing-ak27ac-pel-Rep2_dm6_trim_q5_dupsRemoved_150to700_rpgcNorm_zNorm.bw')
1695314994049:## functions
1695314994068:plot.frac <- function(x) {
1695314994081:lapply(unique(x$change), function(i) {
1695314994093:x %>%
1695314994106:dplyr::filter(change == i) %>%
1695314994118:ggplot(aes(fraction, change, fill = Osa.Bound)) +
1695314994131:geom_bar(stat = 'identity', width = 1) +
1695314994143:geom_text(aes(label = per), position = position_fill(vjust = 0.6),  size = 7, fontface = "bold") +
1695314994155:#geom_text(aes(label = per, position = position_stack(vjust = 0.5))) +
1695314994168:scale_fill_manual(values = c('grey80','#41f0ad'), name = 'Osa Bound') +
1695314994180:scale_y_discrete(position = 'right', ) +
1695314994194:xlab('Percent Bound by Osa') +
1695314994206:theme(legend.position = 'top',
1695314994219:legend.key.size = unit(1, 'cm'),
1695314994231:legend.text = element_text(size = 15),
1695314994244:legend.title = element_text(size = 20),
1695314994256:panel.background = element_blank(),
1695314994269:axis.text = element_blank(),
1695314994283:axis.title = element_blank(),
1695314994296:axis.ticks = element_blank(),
1695314994309:#           axis.text.y = element_text(size = 12),
1695314994322:panel.grid = element_blank()) +
1695314994334:NULL
1695314994347:fn = paste0('rPlots/3E_',i,'.png')
1695314994360:ggsave(fn, width = 6, height = 1.5, units = 'in', dpi = 300 )
1695314994372:})
1695314994385:}
1695314994406:## .bed out
1695314994417:osaPeaks %>%
1695314994430:data.frame() %>%
1695314994443:dplyr::select(seqnames, start, end) %>%
1695314994458:write.table('osaPeaks.bed', quote = F, col.names = F, row.names = F, sep = '\t')
1695314994559:osaPeaks.full %>%
1695314995587:data.frame() %>%
1695314995601:dplyr::select(seqnames, start, end) %>%
1695314995615:write.table('osaPeaks-full.bed', quote = F, col.names = F, row.names = F, sep = '\t')
1695314995711:peaks$cnr.df %>%
1695314995725:data.frame() %>%
1695314995739:dplyr::filter(yw.cnr) %>%
1695314995752:dplyr::select(seqnames, start, end) %>%
1695314996746:write.table('controlPeaks.bed', quote = F, col.names = F, row.names = F, sep = '\t')
1695314996780:#fairePeaks.osaDependent %>%
1695314996793:#  data.frame() %>%
1695314996806:#  dplyr::select(seqnames, start, end) %>%
1695314996818:#  write.table('osaDependent.bed', quote = F, col.names = F, row.names = F, sep = '\t')
1695314996831:#
1695314996844:#fairePeaks.osaEctopic %>%
1695314996857:#  data.frame() %>%
1695314996870:#  dplyr::select(seqnames, start, end) %>%
1695314996882:#  write.table('osaEctopic.bed', quote = F, col.names = F, row.names = F, sep = '\t')
1695314996896:#
1695314996933:## gviz
1695314996946:track.colors <- c("grey40","#D01C8B", "grey40","#D01C8B")
1695314996967:cnr.ss.browser <- cnr.ss %>% dplyr::mutate(color = track.colors)
1695314997016:mckay_enhancers <- read.table('bed/cloned_enhancers_dm6.bed', sep = '\t')
1695314997041:Delta_enhancers <- read.table('bed/cloned_Delta_enhancers.bed', sep = '\t')
1695314997062:espl_enhancers <- read.table('bed/espl_enhancers-merge.bed', sep = '\t')
1695314997090:enhancers <- dplyr::bind_rows(Delta_enhancers, espl_enhancers)
1695314997108:colnames(enhancers) <- c('seqnames', 'start','end','name')
1695314997127:enhancer.ranges <- GRanges(enhancers)
1695314997192:enhancertrack <- Gviz::AnnotationTrack(range = enhancer.ranges,
1695314997206:genome = 'dm6',
1695314997220:fill = '#18c708',
1695314997234:col = 'transparent',
1695314997246:background.title = 'white',
1695314997259:showTitle = F)
1695314997632:genetrack <- Gviz::GeneRegionTrack(range = dm6.TxDb, fill = 'grey80', showTitle = F, background.title = 'white', stacking = 'squish')
1695315002632:peakTrack <- Gviz::AnnotationTrack(range = osaPeaks.full,
1695315002644:genome = 'dm6',
1695315002656:fill = '#D01C8B',
1695315002668:col = 'transparent',
1695315002680:background.title = 'white',
1695315002692:showTitle = F )
1695315003132:#TODO - is osa.dependent annotation correct? using diffbind?
1695315003144:osaDep.peakTrack <- Gviz::AnnotationTrack(range = GRanges(peaks$faire.osaDeg.df %>% dplyr::filter(osa.dependent)),
1695315003156:#osaDep.peakTrack <- Gviz::AnnotationTrack(range = osaDeg.osaDep,
1695315003170:genome = 'dm6',
1695315003182:fill = '#469ae8',
1695315003194:col = 'transparent',
1695315003207:background.title = 'white',
1695315003220:showTitle = F)
1695315003509:hairless_peaks <- read.table('bed/hairless-dm6.bed', col.names = c('seqnames', 'start', 'end')) %>% GRanges()
1695315003588:hTrack <- Gviz::AnnotationTrack(range = hairless_peaks,
1695315003602:genome = 'dm6',
1695315003614:fill = '#2ad4c3',
1695315003626:col = 'transparent',
1695315003638:background.title = 'white',
1695315003651:showTitle = F)
1695315003812:spacer <- Gviz::AnnotationTrack(background.title = 'white')
1695315004240:## matrices for heatmaps
1695315004260:mats <- purrr::map(bws, ~{
1695315004274:normalizeToMatrix(., osaPeaks, value_column = 'score', keep = c(0.01, 0.99), extend = 2000)
1695315004286:})
1695315106945:names(mats) <- names(bws)
1695315835356:dlD <- read.csv('Data/Dl-D_quant.csv') %>%
1695315835369:dplyr::mutate(sampleID = paste(rnai,img,sep='.'))
1695315835408:dlD.ratio <- dlD %>%
1695315835420:dplyr::group_by(sampleID,rnai) %>%
1695315835432:dplyr::summarise(ratio = mean[side == 'a']/mean[side == 'p'])
1695315835628:osa_dlD <- dlD.ratio[dlD.ratio$rnai == 'osa',]$ratio
1695315835646:luc_dlD <- dlD.ratio[dlD.ratio$rnai == 'luc',]$ratio
1695315835671:t.test(osa_dlD, luc_dlD, paired = F)
1695315835784:dlD.ratio %>%
1695315835796:ggplot(aes(rnai, ratio)) +
1695315835808:geom_boxplot(aes(fill = rnai)) +
1695315835820:geom_point(position = position_jitter(width = 0.08)) +
1695315835832:scale_fill_manual(values = c('grey60','#CC0066'), name = 'RNAi') +
1695315835843:#annotate(geom = 'segment', x = 1, xend = 2, y = 1.5, yend = 1.5) +
1695315835857:#annotate(geom = 'text', x = 1.5, y = 1.51, label = '***') +
1695315835900:ylab('Dl-D A/P Ratio') +
1695315835913:theme(axis.title.x = element_blank(),
1695315835925:axis.text.x = element_blank(),
1695315835937:axis.title.y = element_text(size = 12),
1695315835950:axis.text.y = element_text(size = 12))
1695315837369:ggsave('rPlots/6D.png', width = 3, height = 4, dpi = 300)
1695315909667:dl_quant2 <- read.csv('Data/antiDelta_quant.csv') %>%
1695315909681:dplyr::mutate(sampleID = paste(date,genotype,img,sep='.'))
1695315909718:dl_quant_ratio <- dl_quant2 %>%
1695315909729:dplyr::group_by(sampleID,genotype) %>%
1695315909741:dplyr::summarise(ratio = mean[side == 'a']/mean[side == 'p'])
1695315909962:osa_dl <- dl_quant_ratio[dl_quant_ratio$genotype == 'osa',]$ratio
1695315909982:lexA_dl <- dl_quant_ratio[dl_quant_ratio$genotype == 'lexA',]$ratio
1695315910011:t.test(osa_dl, lexA_dl, paired = F)
1695315910120:dl_quant_ratio %>%
1695315910132:ggplot(aes(genotype, ratio)) +
1695315910145:geom_boxplot(aes(fill = genotype)) +
1695315910157:geom_point(position = position_jitter(width = 0.08)) +
1695315910170:scale_fill_manual(values = c('grey60','#CC0066'), name = 'RNAi') +
1695315910182:annotate(geom = 'segment', x = 1, xend = 2, y = 1.5, yend = 1.5) +
1695315910195:annotate(geom = 'text', x = 1.5, y = 1.51, label = '***') +
1695315910208:ylab('Dl A/P Ratio') +
1695315910221:theme(axis.title.x = element_blank(),
1695315910233:axis.text.x = element_blank(),
1695315910246:axis.title.y = element_text(size = 12),
1695315910259:axis.text.y = element_text(size = 12),
1695315910273:panel.background = element_rect(fill = "#d5e1e3"))
1695315910605:ggsave('rPlots/6F.png', width = 3, height = 4, dpi = 300)
1695315912048:dl_quant_ratio %>%
1695315912062:dplyr::filter(genotype == 'osa')
1695315926375:dl_quant2 <- read.csv('Data/antiDelta_quant.csv') %>%
1695315926388:dplyr::mutate(sampleID = paste(date,genotype,img,sep='.'))
1695315926421:dl_quant_ratio <- dl_quant2 %>%
1695315926434:dplyr::group_by(sampleID,genotype) %>%
1695315926446:dplyr::summarise(ratio = mean[side == 'a']/mean[side == 'p'])
1695315926645:osa_dl <- dl_quant_ratio[dl_quant_ratio$genotype == 'osa',]$ratio
1695315926664:lexA_dl <- dl_quant_ratio[dl_quant_ratio$genotype == 'lexA',]$ratio
1695315926689:t.test(osa_dl, lexA_dl, paired = F)
1695315926794:dl_quant_ratio %>%
1695315926808:ggplot(aes(genotype, ratio)) +
1695315926821:geom_boxplot(aes(fill = genotype)) +
1695315926834:geom_point(position = position_jitter(width = 0.08)) +
1695315926847:scale_fill_manual(values = c('grey60','#CC0066'), name = 'RNAi') +
1695315926861:annotate(geom = 'segment', x = 1, xend = 2, y = 1.5, yend = 1.5) +
1695315926874:annotate(geom = 'text', x = 1.5, y = 1.51, label = '***') +
1695315926887:ylab('Dl A/P Ratio') +
1695315926900:theme(axis.title.x = element_blank(),
1695315926914:axis.text.x = element_blank(),
1695315926929:axis.title.y = element_text(size = 12),
1695315926942:axis.text.y = element_text(size = 12))
1695315927222:ggsave('rPlots/6F.png', width = 3, height = 4, dpi = 300)
1695315928792:dl_quant_ratio %>%
1695315928805:dplyr::filter(genotype == 'osa')
1695316220279:# Dl pouch
1695316220290:#chr3R	19310086	19311243	Delta_D-gal4
1695316220300:dlpouch <- data.frame('seqnames' = 'chr3R',
1695316220311:'start' = 19310086,
1695316220322:'end' = 19311243)
1695316304384:enhancers <- dplyr::bind_rows(Delta_enhancers, espl_enhancers, dlpouch)
1695316305844:colnames(enhancers) <- c('seqnames', 'start','end','name')
1695316306595:enhancer.ranges <- GRanges(enhancers)
1695316370896:# Dl pouch
1695316370907:#chr3R	19310086	19311243	Delta_D-gal4
1695316370919:dlpouch <- data.frame('seqnames' = 'chr3R',
1695316370930:'start' = 19310086,
1695316370940:'end' = 19311243,
1695316370951:'name' = 'Dl-pouch')
1695316380623:enhancers <- dplyr::bind_rows(Delta_enhancers, espl_enhancers, dlpouch)
1695316381569:colnames(enhancers) <- c('seqnames', 'start','end','name')
1695316382503:enhancer.ranges <- GRanges(enhancers)
1695316396337:enhancers
1695316467653:# Dl pouch
1695316467664:#chr3R	19310086	19311243	Delta_D-gal4
1695316467676:dlpouch <- data.frame('seqnames' = 'chr3R',
1695316467688:'start' = 19310086,
1695316467698:'end' = 19311243) %>%
1695316467709:GRanges()
1695316477934:enhancers <- dplyr::bind_rows(Delta_enhancers, espl_enhancers, dlpouch)
1695316519983:Delta_enhancers
1695316539707:enhancers <- dplyr::bind_rows(Delta_enhancers, espl_enhancers)
1695316542015:colnames(enhancers) <- c('seqnames', 'start','end','name')
1695316543165:enhancer.ranges <- GRanges(enhancers)
1695316596073:dlpouch.track <- Gviz::AnnotationTrack(range = dlpouch,
1695316596084:genome = 'dm6',
1695316596095:fill = '#18c708',
1695316596106:col = 'transparent',
1695316596117:background.title = 'white',
1695316596127:showTitle = F)
1695316635347:library(magrittr)
1695316635364:library(ggplot2)
1695316635383:#library(ggrepel)
1695316635397:library(GenomicRanges)
1695316635416:library(org.Dm.eg.db)
1695316635428:library(AnnotationDbi)
1695316635448:library(EnrichedHeatmap)
1695316635462:library(ComplexHeatmap)
1695316635481:#library(GO.db)
1695316635500:#library(patchwork)
1695316635521:source('scripts/utils.R')
1695316635555:source('scripts/peakUtils.R') #TODO move/rewrite getPeakData from NystLib to utils.R
1695316635589:## load data
1695316635609:load('rData/sheets.rda')
1695316635733:load('rData/peaks.rda')
1695316639042:load('rData/rnaiScreen.rda')
1695316639138:ON.genes.validated <- read.table('Data/on-genes-IDvalidation.txt', header = T) %>%
1695316639155:dplyr::rename(Geneid = submitted_item,
1695316639168:Validated = validated_id,
1695316639182:Symbol = current_symbol)
1695316639228:## there are 2 'FlyFactor' FBgn codes that are updated two more than 1 unique 'Validated' FBgns in `fbgn.validated`
1695316639241:# FBgn0051782 -- CG31782 in flyfactor - old annotation? no present in Flybase, maybe split into three differen pseudogene annos now
1695316639253:# FBgn0050420 -- is only Atf-2 in flyfactor db
1695316639266:fbgn.validated <- read.table('Data/fbgn_validated.txt', header = F, sep = '\t')
1695316639286:colnames(fbgn.validated) <- c('FlyFactor', 'Validated', 'Symbol')
1695316639305:fbgn.validated %<>%
1695316639318:dplyr::filter(FlyFactor != 'FBgn0051782') %>% #drop this FBgn, problematic update to multiple new FBgns of pseudogenes
1695316639331:dplyr::filter(Validated != 'FBgn0265182') # drop this Validated FBgn, which is an incorrectly updated from FBgn0050420
1695316639361:## global variables
1695316639374:###
1695316639387:# assign global variables
1695316639403:###
1695316639428:dm6 <- BSgenome.Dmelanogaster.UCSC.dm6::BSgenome.Dmelanogaster.UCSC.dm6
1695316639441:#dm3 <- BSgenome.Dmelanogaster.UCSC.dm3::BSgenome.Dmelanogaster.UCSC.dm3
1695316639454:dm6.TxDb <- TxDb.Dmelanogaster.UCSC.dm6.ensGene::TxDb.Dmelanogaster.UCSC.dm6.ensGene
1695316639475:dm6.promoters <- ChIPseeker::getPromoters(dm6.TxDb, upstream = 500, downstream = 100)
1695316639567:dm6.genes <- GenomicFeatures::genes(dm6.TxDb)
1695316640289:brD <- data.frame('seqnames' = 'chrX',
1695316640303:'start' = 1565708,
1695316640315:'end' = 1567401) %>%
1695316640328:GenomicRanges::GRanges()
1695316640403:shn <- data.frame('seqnames' = 'chr2R',
1695316640416:'start' = 11159086,
1695316640429:'end' = 11217394) %>%
1695316640441:GRanges()
1695316640504:sbb <- data.frame('seqnames' = 'chr2R',
1695316640516:'start' = 18278198,
1695316640529:'end' = 18357296) %>%
1695316640544:GRanges()
1695316640607:# Dl
1695316640620:#chr3R:19,265,389-19,350,508
1695316640633:Dl <- data.frame('seqnames' = 'chr3R',
1695316640645:'start' = 19265389,
1695316640658:'end' = 19350508) %>%
1695316640671:GRanges()
1695316640733:# Dl pouch
1695316640747:#chr3R	19310086	19311243	Delta_D-gal4
1695316640759:dlpouch <- data.frame('seqnames' = 'chr3R',
1695316640772:'start' = 19310086,
1695316640790:'end' = 19311243) %>%
1695316640803:GRanges()
1695316640870:# E(spl)-c
1695316640883:#chr3R:25,980,255-26,065,374
1695316640896:espl <- data.frame('seqnames' = 'chr3R',
1695316640909:'start' = 25980255,
1695316640924:'end' = 26065374) %>%
1695316640937:GRanges()
1695316641010:# ac/sc
1695316641023:#chrX:365,344-402,061
1695316641036:acsc <- data.frame('seqnames' = 'chrX',
1695316641049:'start' = 365344,
1695316641062:'end' = 402061) %>%
1695316641074:GRanges()
1695316641138:# serrate
1695316641152:#chr3R:27,167,731-27,227,610
1695316641165:ser <- data.frame('seqnames' = 'chr3R',
1695316641178:'start' = 27167731,
1695316641191:'end' = 27227610) %>%
1695316641204:GRanges()
1695316641268:# notch
1695316641281:#chrX:3,093,887-3,206,341
1695316641294:notch <- data.frame('seqnames' = 'chrX',
1695316641306:'start' = 3093887,
1695316641320:'end' = 3206341) %>%
1695316641333:GRanges()
1695316641394:###
1695316641413:# nubbin
1695316641425:#chr2L:12,542,935-12,696,192
1695316641438:nub <- data.frame('seqnames' = 'chr2L',
1695316641450:'start' = 12542935,
1695316641462:'end' = 12696192) %>%
1695316641475:GRanges()
1695316641535:# enhancers
1695316641548:###
1695316641568:redFly_enhancers <- read.table('bed/all_Dmel_CRM-sorted-merged.bed', sep = '\t')
1695316641618:colnames(redFly_enhancers) <- c('seqnames', 'start','end')
1695316641636:redFly_enhancers.ranges <- GRanges(redFly_enhancers)
1695316641732:## memes setup
1695316641744:###
1695316641757:# meme db
1695316641770:###
1695316641782:#TODO - so clunky...
1695316641795:# loading in the fly factor database, drop out a couple of problematic fbgn
1695316641807:# then use the fbgn.validated lookup table for fly factor to update all the old ids to correct ids
1695316641820:# then filter on the on gene list -- which has to go through a similar process of id validation
1695316641832:# gross
1695316641846:meme_db <- universalmotif::read_meme('Data/fly_factor_survey.meme') %>%
1695316641858:universalmotif::to_df() %>%
1695316641870:dplyr::group_by(name) %>%
1695316641883:dplyr::filter(!grepl('FBgn0051782|FBgn0265182', name)) %>%  #drop this FBgn, problematic update to multiple new FBgns of pseudogenes
1695316641895:dplyr::mutate(basename = stringr::str_split_fixed(name, '_', n = 2)[[1]],
1695316641907:fbgn.validated = fbgn.validated[fbgn.validated$FlyFactor == basename,]$Validated)
1695316642645:meme_db_on <- meme_db %>%
1695316642658:dplyr::filter(fbgn.validated %in% ON.genes.validated$Validated)
1695316642749:options(meme_db = universalmotif::to_list(meme_db_on, extrainfo = F))
1695316642807:## colors
1695316642823:viridis.hex <- c("#440154","#3b528b","#21918c","#5ec962","#5ec962","#fde725")
1695316642838:cbPalette <- c("#999999", "#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7")
1695316642854:cbPalette.4 <- c("#D81B60","#1E88E5","#FFC107","#004D40")
1695316642870:cbPalette.ibm <- c('#332288','#117733','#44AA99','#88CCEE','#DDCC77','#CC6677','#AA4499','#882255')
1695316642893:## browser
1695316642905:WTFAIRE.colors <- c("grey10","grey20","grey30","grey40","grey50","grey60")
1695316642926:## peak subsets
1695316642939:osaPeaks <- peaks$cnr.df %>%
1695316642952:dplyr::filter(osa.cnr & !yw.cnr) %>%
1695316642965:GRanges() %>%
1695316642978:resize(width = 1, fix = "center")
1695316643309:osaPeaks.full <- peaks$cnr.df %>%
1695316643323:dplyr::filter(osa.cnr & !yw.cnr) %>%
1695316643336:GRanges(seqlengths = seqlengths(dm6))
1695316643507:osaPeaks.enhancers.full <- osaPeaks.full %>%
1695316643523:data.frame() %>%
1695316643536:dplyr::filter(anno.new %in% c('Distal Intergenic', 'Intron')) %>%
1695316643548:GRanges()
1695316643731:# uses rep1 summit coordinates
1695316643744:osaPeaks.summits <- subsetByOverlaps(cnr.summits, osaPeaks.full)
1695316643829:osaPeaks.faire.summits <- subsetByOverlaps(faire.wt.3LW.summits, osaPeaks.full)
1695316643926:fairePeaks.wt <- peaks$faire.wt.df %>%
1695316643939:#  dplyr::filter(assay == 'faire' & experiment == 'WT FAIRE Wing Timecourse') %>%
1695316643952:GRanges() %>%
1695316643965:resize(width = 1, fix = "center")
1695316644123:#redundant... but used in a couple chunks for motif analysis
1695316644148:fairePeaks.wt.full <- peaks$faire.wt.df %>%
1695316644161:dplyr::filter(assay == 'faire'  & experiment == 'WT FAIRE Wing Timecourse')
1695316644466:#DONE - remove the peakCat ? since now using log2fold change for these categories...
1695316644479:# switched to using osaDeg.qF which is a peak set derived from diffbind, that has been subset using iranges by intersect
1695316644492:# with quality filtered peak calls in peaks$faire.osaDeg.df
1695316644505:osaDeg.center <- osaDeg.qF %>%
1695316644519:GRanges() %>%
1695316644534:resize(width = 1, fix = "center")
1695316644625:# rotund peaks
1695316644639:rn.peaks <- peaks$rn.df %>%
1695316644654:GRanges()
1695316644702:rn.distal <- rn.peaks %>%
1695316644715:dplyr::filter(anno.new %in% c('Distal Intergenic', 'Intron')) %>%
1695316644728:GRanges()
1695316644880:# genomic 500bp
1695316644900:dm6.500bp <- peaks$dm6.500bp %>%
1695316644913:GRanges() %>%
1695316644926:resize(width = 1, fix = 'center')
1695316645327:#fairePeaks.osaDependent <- fairePeaks.deg %>%
1695316645341:#  data.frame() %>%
1695316645354:#  dplyr::filter(faireCat.osaDeGrad == 'Osa Dependent') %>%
1695316645367:#  GRanges()
1695316645381:#
1695316645394:#fairePeaks.osaIndependent <- fairePeaks.deg %>%
1695316645407:#  data.frame() %>%
1695316645420:#  dplyr::filter(faireCat.osaDeGrad == 'Osa Independent') %>%
1695316645433:#  GRanges()
1695316645446:#
1695316645460:#fairePeaks.osaEctopic <- fairePeaks.deg %>%
1695316645473:#  data.frame() %>%
1695316645486:#  dplyr::filter(faireCat.osaDeGrad == 'Osa Ectopic') %>%
1695316645499:#  GRanges()
1695316645536:## load bws
1695316645588:#TODO - cleanup - move matrices?
1695316645609:bws <- get_bws(dplyr::bind_rows(cnr.ss, faire.wt.ssPool), 'id')
1695316735727:deg.bws <- get_bws(faire.ss %>% dplyr::filter(experiment == 'osaGFP deGrad FAIRE'), 'id')
1695316740132:#TODO move data to main project directory and fix path
1695316740149:#TODO merge reps?
1695316740163:#k27ac.bw <- rtracklayer::import.bw('~/mckay/h3k27ac_cnr/bigwig/yw-3LW-wing-ak27ac-pel-Rep1_dm6_trim_q5_dupsRemoved_allFrags_rpgcNorm_zNorm.bw')
1695316740179:#TODO put these notes in better place"
1695316740194:## K27ac data- yeast spikein norm pel data is generally lower in rep2 than rep1, this is not seen in znorm or drosYak norm data
1695316740210:## drosYak norm signal is "low" as in the absolute values are usually < 1, but the normalization between samples looks good, and the signal to noise still looks fine, not appreciably better or worse that znorm
1695316740225:## using pellet because only have 2 reps of pel, only 1 of sup - the sup rep looks really good though I think
1695316740241:## using large fragments only because all fractions/reps show poor signal in <120 bp frag split
1695316740264:#k27ac.bw <- rtracklayer::import.bw('~/mckay/H3K27ac_CnR/BigWig/yw-3LW-wing-ak27ac-pel-MEAN_dm6_trim_q5_dupsRemoved_150to700_rpgcNorm_zNorm.bw')
1695316740278:k27ac.1.bw <- rtracklayer::import.bw('BigWig/yw-3LW-wing-ak27ac-pel-Rep1_dm6_trim_q5_dupsRemoved_150to700_rpgcNorm_zNorm.bw')
1695316741604:k27ac.2.bw <- rtracklayer::import.bw('BigWig/yw-3LW-wing-ak27ac-pel-Rep2_dm6_trim_q5_dupsRemoved_150to700_rpgcNorm_zNorm.bw')
1695316743798:## functions
1695316743825:plot.frac <- function(x) {
1695316743845:lapply(unique(x$change), function(i) {
1695316743860:x %>%
1695316743875:dplyr::filter(change == i) %>%
1695316743891:ggplot(aes(fraction, change, fill = Osa.Bound)) +
1695316743905:geom_bar(stat = 'identity', width = 1) +
1695316743921:geom_text(aes(label = per), position = position_fill(vjust = 0.6),  size = 7, fontface = "bold") +
1695316743936:#geom_text(aes(label = per, position = position_stack(vjust = 0.5))) +
1695316743951:scale_fill_manual(values = c('grey80','#41f0ad'), name = 'Osa Bound') +
1695316743970:scale_y_discrete(position = 'right', ) +
1695316743984:xlab('Percent Bound by Osa') +
1695316743999:theme(legend.position = 'top',
1695316744015:legend.key.size = unit(1, 'cm'),
1695316744032:legend.text = element_text(size = 15),
1695316744046:legend.title = element_text(size = 20),
1695316744060:panel.background = element_blank(),
1695316744083:axis.text = element_blank(),
1695316744099:axis.title = element_blank(),
1695316744113:axis.ticks = element_blank(),
1695316744129:#           axis.text.y = element_text(size = 12),
1695316744144:panel.grid = element_blank()) +
1695316744187:NULL
1695316744214:fn = paste0('rPlots/3E_',i,'.png')
1695316744228:ggsave(fn, width = 6, height = 1.5, units = 'in', dpi = 300 )
1695316744244:})
1695316744259:}
1695316744285:## .bed out
1695316744300:osaPeaks %>%
1695316744316:data.frame() %>%
1695316744331:dplyr::select(seqnames, start, end) %>%
1695316744347:write.table('osaPeaks.bed', quote = F, col.names = F, row.names = F, sep = '\t')
1695316744542:osaPeaks.full %>%
1695316744570:data.frame() %>%
1695316744596:dplyr::select(seqnames, start, end) %>%
1695316744611:write.table('osaPeaks-full.bed', quote = F, col.names = F, row.names = F, sep = '\t')
1695316744720:peaks$cnr.df %>%
1695316744732:data.frame() %>%
1695316744745:dplyr::filter(yw.cnr) %>%
1695316744758:dplyr::select(seqnames, start, end) %>%
1695316744772:write.table('controlPeaks.bed', quote = F, col.names = F, row.names = F, sep = '\t')
1695316744819:#fairePeaks.osaDependent %>%
1695316744835:#  data.frame() %>%
1695316744853:#  dplyr::select(seqnames, start, end) %>%
1695316744866:#  write.table('osaDependent.bed', quote = F, col.names = F, row.names = F, sep = '\t')
1695316744879:#
1695316744893:#fairePeaks.osaEctopic %>%
1695316744908:#  data.frame() %>%
1695316744921:#  dplyr::select(seqnames, start, end) %>%
1695316744935:#  write.table('osaEctopic.bed', quote = F, col.names = F, row.names = F, sep = '\t')
1695316744949:#
1695316744982:## gviz
1695316744997:track.colors <- c("grey40","#D01C8B", "grey40","#D01C8B")
1695316745020:cnr.ss.browser <- cnr.ss %>% dplyr::mutate(color = track.colors)
1695316745080:mckay_enhancers <- read.table('bed/cloned_enhancers_dm6.bed', sep = '\t')
1695316745107:Delta_enhancers <- read.table('bed/cloned_Delta_enhancers.bed', sep = '\t')
1695316745130:espl_enhancers <- read.table('bed/espl_enhancers-merge.bed', sep = '\t')
1695316745159:enhancers <- dplyr::bind_rows(Delta_enhancers, espl_enhancers)
1695316745179:colnames(enhancers) <- c('seqnames', 'start','end','name')
1695316745198:enhancer.ranges <- GRanges(enhancers)
1695316745269:enhancertrack <- Gviz::AnnotationTrack(range = enhancer.ranges,
1695316745286:genome = 'dm6',
1695316745302:fill = '#18c708',
1695316745320:col = 'transparent',
1695316745341:background.title = 'white',
1695316745376:showTitle = F)
1695316745586:dlpouch.track <- Gviz::AnnotationTrack(range = dlpouch,
1695316745598:genome = 'dm6',
1695316745612:fill = '#18c708',
1695316745626:col = 'transparent',
1695316745640:background.title = 'white',
1695316745654:showTitle = F)
1695316745907:genetrack <- Gviz::GeneRegionTrack(range = dm6.TxDb, fill = 'grey80', showTitle = F, background.title = 'white', stacking = 'squish')
1695316752518:peakTrack <- Gviz::AnnotationTrack(range = osaPeaks.full,
1695316752534:genome = 'dm6',
1695316752550:fill = '#D01C8B',
1695316752566:col = 'transparent',
1695316752583:background.title = 'white',
1695316752600:showTitle = F )
1695316753047:#TODO - is osa.dependent annotation correct? using diffbind?
1695316753060:osaDep.peakTrack <- Gviz::AnnotationTrack(range = GRanges(peaks$faire.osaDeg.df %>% dplyr::filter(osa.dependent)),
1695316753074:#osaDep.peakTrack <- Gviz::AnnotationTrack(range = osaDeg.osaDep,
1695316753086:genome = 'dm6',
1695316753100:fill = '#469ae8',
1695316753113:col = 'transparent',
1695316753126:background.title = 'white',
1695316753140:showTitle = F)
1695316753446:hairless_peaks <- read.table('bed/hairless-dm6.bed', col.names = c('seqnames', 'start', 'end')) %>% GRanges()
1695316753512:hTrack <- Gviz::AnnotationTrack(range = hairless_peaks,
1695316753528:genome = 'dm6',
1695316753542:fill = '#2ad4c3',
1695316753556:col = 'transparent',
1695316753569:background.title = 'white',
1695316753583:showTitle = F)
1695316753753:spacer <- Gviz::AnnotationTrack(background.title = 'white')
1695316753898:## matrices for heatmaps
1695316753918:mats <- purrr::map(bws, ~{
1695316753931:normalizeToMatrix(., osaPeaks, value_column = 'score', keep = c(0.01, 0.99), extend = 2000)
1695316753944:})
1695316856981:names(mats) <- names(bws)
1695316857052:track.colors <- c("grey40","#D01C8B", "grey40","#D01C8B")
1695316857073:cnr.ss.browser <- cnr.ss %>%
1695316857087:dplyr::mutate(color = track.colors)
1695316857134:axis <- Gviz::GenomeAxisTrack(scale = 10000)
1695316857223:faire.3lw.track <- get_cnr_track('BigWig/wt_3LW_dm6_trim_q5_sorted_dupsRemoved_POOLED_rpgcNorm_zNorm.bw',
1695316857237:ylim = c(0,10),
1695316857250:fill = 'black',
1695316857264:col = 'transparent')
1695316857570:cnr.tracks <- get_cnr_tracks(cnr.ss.browser, ylim = c(0,50))
1695316857710:cnr.tracks <- list(cnr.tracks$osaGFP.rep1, cnr.tracks$osaGFP.rep2, cnr.tracks$yw.rep1, cnr.tracks$yw.rep2)
1695316857725:names(cnr.tracks) <- c('osaGFP.rep1', 'osaGFP.rep2', 'yw.rep1', 'yw.rep2')
1695316857745:png('rPlots/6B.png', width = 5, height = 4, res = 300, units = 'in')
1695316857759:Gviz::plotTracks(c(axis,
1695316857771:cnr.tracks,
1695316857784:faire.3lw.track,
1695316857797:spacer,
1695316857811:dlpouch.track,
1695316857827:spacer,
1695316857840:genetrack), chromosome = seqnames(Dl) %>% as.character(),
1695316857854:from = start(Dl-3000),
1695316857869:to = end(Dl-1000),
1695316857882:cex.axis = 0.3,
1695316857897:cex.title = 0.5,
1695316857909:title.width = 1,
1695316857924:innerMargin = 10)
1695316866251:dev.off()
1695316916586:Gviz::plotTracks(c(axis,
1695316916597:cnr.tracks,
1695316916608:faire.3lw.track,
1695316916619:spacer,
1695316916629:dlpouch.track,
1695316916640:spacer,
1695316916652:genetrack), chromosome = seqnames(Dl) %>% as.character(),
1695316916662:from = start(Dl-40000),
1695316916673:to = end(Dl-10000),
1695316916684:cex.axis = 0.3,
1695316916695:cex.title = 0.5,
1695316916707:title.width = 1,
1695316916718:innerMargin = 10)
1695316929211:Gviz::plotTracks(c(axis,
1695316929223:cnr.tracks,
1695316929234:faire.3lw.track,
1695316929245:spacer,
1695316929256:dlpouch.track,
1695316929266:spacer,
1695316929278:genetrack), chromosome = seqnames(Dl) %>% as.character(),
1695316929289:from = start(Dl-40000),
1695316929301:to = end(Dl-20000),
1695316929312:cex.axis = 0.3,
1695316929323:cex.title = 0.5,
1695316929334:title.width = 1,
1695316929345:innerMargin = 10)
1695316937124:Gviz::plotTracks(c(axis,
1695316937135:cnr.tracks,
1695316937147:faire.3lw.track,
1695316937159:spacer,
1695316937169:dlpouch.track,
1695316937180:spacer,
1695316937192:genetrack), chromosome = seqnames(Dl) %>% as.character(),
1695316937202:from = start(Dl-40000),
1695316937214:to = end(Dl-30000),
1695316937225:cex.axis = 0.3,
1695316937236:cex.title = 0.5,
1695316937247:title.width = 1,
1695316937258:innerMargin = 10)
1695316948250:Gviz::plotTracks(c(axis,
1695316948260:cnr.tracks,
1695316948271:faire.3lw.track,
1695316948281:spacer,
1695316948292:dlpouch.track,
1695316948302:spacer,
1695316948313:genetrack), chromosome = seqnames(Dl) %>% as.character(),
1695316948324:from = start(Dl-40000),
1695316948337:to = end(Dl-40000),
1695316948348:cex.axis = 0.3,
1695316948360:cex.title = 0.5,
1695316948371:title.width = 1,
1695316948382:innerMargin = 10)
1695316967911:axis <- Gviz::GenomeAxisTrack(scale = 2000)
1695316970269:track.colors <- c("grey40","#D01C8B", "grey40","#D01C8B")
1695316970290:cnr.ss.browser <- cnr.ss %>%
1695316970303:dplyr::mutate(color = track.colors)
1695316970353:axis <- Gviz::GenomeAxisTrack(scale = 2000)
1695316971098:faire.3lw.track <- get_cnr_track('BigWig/wt_3LW_dm6_trim_q5_sorted_dupsRemoved_POOLED_rpgcNorm_zNorm.bw',
1695316971114:ylim = c(0,10),
1695316971126:fill = 'black',
1695316971139:col = 'transparent')
1695316971265:cnr.tracks <- get_cnr_tracks(cnr.ss.browser, ylim = c(0,50))
1695316971397:cnr.tracks <- list(cnr.tracks$osaGFP.rep1, cnr.tracks$osaGFP.rep2, cnr.tracks$yw.rep1, cnr.tracks$yw.rep2)
1695316971413:names(cnr.tracks) <- c('osaGFP.rep1', 'osaGFP.rep2', 'yw.rep1', 'yw.rep2')
1695316971433:png('rPlots/6B.png', width = 5, height = 4, res = 300, units = 'in')
1695316971455:Gviz::plotTracks(c(axis,
1695316971467:cnr.tracks,
1695316971479:faire.3lw.track,
1695316971492:spacer,
1695316971504:dlpouch.track,
1695316971516:spacer,
1695316971528:genetrack), chromosome = seqnames(Dl) %>% as.character(),
1695316971540:from = start(Dl-40000),
1695316971552:to = end(Dl-40000),
1695316971564:cex.axis = 0.3,
1695316971576:cex.title = 0.5,
1695316971588:title.width = 1,
1695316971601:innerMargin = 10)
1695316974054:dev.off()
1695316980688:Gviz::plotTracks(c(axis,
1695316980699:cnr.tracks,
1695316980709:faire.3lw.track,
1695316980720:spacer,
1695316980731:dlpouch.track,
1695316980741:spacer,
1695316980752:genetrack), chromosome = seqnames(Dl) %>% as.character(),
1695316980763:from = start(Dl-40000),
1695316980774:to = end(Dl-30000),
1695316980785:cex.axis = 0.3,
1695316980796:cex.title = 0.5,
1695316980807:title.width = 1,
1695316980820:innerMargin = 10)
1695316992763:Gviz::plotTracks(c(axis,
1695316992775:cnr.tracks,
1695316992786:faire.3lw.track,
1695316992797:spacer,
1695316992808:dlpouch.track,
1695316992819:spacer,
1695316992829:genetrack), chromosome = seqnames(Dl) %>% as.character(),
1695316992841:from = start(Dl-40000),
1695316992852:to = end(Dl-34000),
1695316992864:cex.axis = 0.3,
1695316992875:cex.title = 0.5,
1695316992886:title.width = 1,
1695316992898:innerMargin = 10)
1695317013115:faire.3lw.track <- get_cnr_track('BigWig/wt_3LW_dm6_trim_q5_sorted_dupsRemoved_POOLED_rpgcNorm_zNorm.bw',
1695317013127:ylim = c(0,15),
1695317013138:fill = 'black',
1695317013148:col = 'transparent')
1695317015191:track.colors <- c("grey40","#D01C8B", "grey40","#D01C8B")
1695317015211:cnr.ss.browser <- cnr.ss %>%
1695317015224:dplyr::mutate(color = track.colors)
1695317015271:axis <- Gviz::GenomeAxisTrack(scale = 2000)
1695317015357:faire.3lw.track <- get_cnr_track('BigWig/wt_3LW_dm6_trim_q5_sorted_dupsRemoved_POOLED_rpgcNorm_zNorm.bw',
1695317015371:ylim = c(0,15),
1695317015386:fill = 'black',
1695317015401:col = 'transparent')
1695317015590:cnr.tracks <- get_cnr_tracks(cnr.ss.browser, ylim = c(0,50))
1695317015702:cnr.tracks <- list(cnr.tracks$osaGFP.rep1, cnr.tracks$osaGFP.rep2, cnr.tracks$yw.rep1, cnr.tracks$yw.rep2)
1695317015716:names(cnr.tracks) <- c('osaGFP.rep1', 'osaGFP.rep2', 'yw.rep1', 'yw.rep2')
1695317015738:png('rPlots/6B.png', width = 5, height = 4, res = 300, units = 'in')
1695317015753:Gviz::plotTracks(c(axis,
1695317015766:cnr.tracks,
1695317015779:faire.3lw.track,
1695317015792:spacer,
1695317015806:dlpouch.track,
1695317015818:spacer,
1695317015831:genetrack), chromosome = seqnames(Dl) %>% as.character(),
1695317015843:from = start(Dl-40000),
1695317015856:to = end(Dl-34000),
1695317015869:cex.axis = 0.3,
1695317015881:cex.title = 0.5,
1695317015894:title.width = 1,
1695317015910:innerMargin = 10)
1695317018246:dev.off()
1695317037360:cnr.tracks <- get_cnr_tracks(cnr.ss.browser, ylim = c(0,45))
1695317037987:track.colors <- c("grey40","#D01C8B", "grey40","#D01C8B")
1695317038012:cnr.ss.browser <- cnr.ss %>%
1695317038027:dplyr::mutate(color = track.colors)
1695317038079:axis <- Gviz::GenomeAxisTrack(scale = 2000)
1695317038171:faire.3lw.track <- get_cnr_track('BigWig/wt_3LW_dm6_trim_q5_sorted_dupsRemoved_POOLED_rpgcNorm_zNorm.bw',
1695317038183:ylim = c(0,15),
1695317038197:fill = 'black',
1695317038212:col = 'transparent')
1695317038345:cnr.tracks <- get_cnr_tracks(cnr.ss.browser, ylim = c(0,45))
1695317038482:cnr.tracks <- list(cnr.tracks$osaGFP.rep1, cnr.tracks$osaGFP.rep2, cnr.tracks$yw.rep1, cnr.tracks$yw.rep2)
1695317038496:names(cnr.tracks) <- c('osaGFP.rep1', 'osaGFP.rep2', 'yw.rep1', 'yw.rep2')
1695317038519:png('rPlots/6B.png', width = 5, height = 4, res = 300, units = 'in')
1695317038533:Gviz::plotTracks(c(axis,
1695317038547:cnr.tracks,
1695317038562:faire.3lw.track,
1695317038577:spacer,
1695317038592:dlpouch.track,
1695317038606:spacer,
1695317038621:genetrack), chromosome = seqnames(Dl) %>% as.character(),
1695317038638:from = start(Dl-40000),
1695317038653:to = end(Dl-34000),
1695317039321:cex.axis = 0.3,
1695317039334:cex.title = 0.5,
1695317039347:title.width = 1,
1695317039360:innerMargin = 10)
1695317041837:dev.off()
1695317057266:track.colors <- c("grey40","#D01C8B", "grey40","#D01C8B")
1695317057287:cnr.ss.browser <- cnr.ss %>%
1695317057300:dplyr::mutate(color = track.colors)
1695317057350:axis <- Gviz::GenomeAxisTrack(scale = 2000)
1695317057438:faire.3lw.track <- get_cnr_track('BigWig/wt_3LW_dm6_trim_q5_sorted_dupsRemoved_POOLED_rpgcNorm_zNorm.bw',
1695317057452:ylim = c(0,15),
1695317057467:fill = 'black',
1695317057481:col = 'transparent')
1695317057604:cnr.tracks <- get_cnr_tracks(cnr.ss.browser, ylim = c(0,50))
1695317057726:cnr.tracks <- list(cnr.tracks$osaGFP.rep1, cnr.tracks$osaGFP.rep2, cnr.tracks$yw.rep1, cnr.tracks$yw.rep2)
1695317057739:names(cnr.tracks) <- c('osaGFP.rep1', 'osaGFP.rep2', 'yw.rep1', 'yw.rep2')
1695317057760:png('rPlots/6B.png', width = 5, height = 4, res = 300, units = 'in')
1695317057775:Gviz::plotTracks(c(axis,
1695317057788:cnr.tracks,
1695317057801:faire.3lw.track,
1695317057814:spacer,
1695317057827:dlpouch.track,
1695317057839:spacer,
1695317057851:genetrack), chromosome = seqnames(Dl) %>% as.character(),
1695317057864:from = start(Dl-40000),
1695317057876:to = end(Dl-34000),
1695317057888:cex.axis = 0.3,
1695317057901:cex.title = 0.5,
1695317057915:title.width = 1,
1695317057927:innerMargin = 10)
1695317061317:dev.off()
1695405164159:library(magrittr)
1695405164198:library(ggplot2)
1695405164560:#library(ggrepel)
1695405164579:library(GenomicRanges)
1695405164947:library(org.Dm.eg.db)
1695405166578:library(AnnotationDbi)
1695405166598:library(EnrichedHeatmap)
1695405166929:library(ComplexHeatmap)
1695405166949:#library(GO.db)
1695405166968:#library(patchwork)
1695405166986:source('scripts/utils.R')
1695405167016:source('scripts/peakUtils.R') #TODO move/rewrite getPeakData from NystLib to utils.R
1695405167414:## load data
1695405167433:load('rData/sheets.rda')
1695405167671:load('rData/peaks.rda')
1695405174004:load('rData/rnaiScreen.rda')
1695405174098:ON.genes.validated <- read.table('Data/on-genes-IDvalidation.txt', header = T) %>%
1695405174108:dplyr::rename(Geneid = submitted_item,
1695405174120:Validated = validated_id,
1695405174132:Symbol = current_symbol)
1695405174237:## there are 2 'FlyFactor' FBgn codes that are updated two more than 1 unique 'Validated' FBgns in `fbgn.validated`
1695405174247:# FBgn0051782 -- CG31782 in flyfactor - old annotation? no present in Flybase, maybe split into three differen pseudogene annos now
1695405174258:# FBgn0050420 -- is only Atf-2 in flyfactor db
1695405174268:fbgn.validated <- read.table('Data/fbgn_validated.txt', header = F, sep = '\t')
1695405174287:colnames(fbgn.validated) <- c('FlyFactor', 'Validated', 'Symbol')
1695405174301:fbgn.validated %<>%
1695405174311:dplyr::filter(FlyFactor != 'FBgn0051782') %>% #drop this FBgn, problematic update to multiple new FBgns of pseudogenes
1695405174321:dplyr::filter(Validated != 'FBgn0265182') # drop this Validated FBgn, which is an incorrectly updated from FBgn0050420
1695405174379:## global variables
1695405174407:###
1695405174430:# assign global variables
1695405174445:###
1695405174464:dm6 <- BSgenome.Dmelanogaster.UCSC.dm6::BSgenome.Dmelanogaster.UCSC.dm6
1695405174544:#dm3 <- BSgenome.Dmelanogaster.UCSC.dm3::BSgenome.Dmelanogaster.UCSC.dm3
1695405174554:dm6.TxDb <- TxDb.Dmelanogaster.UCSC.dm6.ensGene::TxDb.Dmelanogaster.UCSC.dm6.ensGene
1695405174675:dm6.promoters <- ChIPseeker::getPromoters(dm6.TxDb, upstream = 500, downstream = 100)
1695405175936:dm6.genes <- GenomicFeatures::genes(dm6.TxDb)
1695405178054:brD <- data.frame('seqnames' = 'chrX',
1695405178064:'start' = 1565708,
1695405178074:'end' = 1567401) %>%
1695405178085:GenomicRanges::GRanges()
1695405178151:shn <- data.frame('seqnames' = 'chr2R',
1695405178162:'start' = 11159086,
1695405178173:'end' = 11217394) %>%
1695405178184:GRanges()
1695405178245:sbb <- data.frame('seqnames' = 'chr2R',
1695405178256:'start' = 18278198,
1695405178267:'end' = 18357296) %>%
1695405178277:GRanges()
1695405178337:# Dl
1695405178362:#chr3R:19,265,389-19,350,508
1695405178379:Dl <- data.frame('seqnames' = 'chr3R',
1695405178392:'start' = 19265389,
1695405178402:'end' = 19350508) %>%
1695405178412:GRanges()
1695405178474:# Dl pouch
1695405178485:#chr3R	19310086	19311243	Delta_D-gal4
1695405178495:dlpouch <- data.frame('seqnames' = 'chr3R',
1695405178505:'start' = 19310086,
1695405178515:'end' = 19311243) %>%
1695405178525:GRanges()
1695405178581:# E(spl)-c
1695405178591:#chr3R:25,980,255-26,065,374
1695405178601:espl <- data.frame('seqnames' = 'chr3R',
1695405178611:'start' = 25980255,
1695405178621:'end' = 26065374) %>%
1695405178632:GRanges()
1695405178688:# ac/sc
1695405178698:#chrX:365,344-402,061
1695405178707:acsc <- data.frame('seqnames' = 'chrX',
1695405178716:'start' = 365344,
1695405178727:'end' = 402061) %>%
1695405178737:GRanges()
1695405178795:# serrate
1695405178805:#chr3R:27,167,731-27,227,610
1695405178816:ser <- data.frame('seqnames' = 'chr3R',
1695405178826:'start' = 27167731,
1695405178836:'end' = 27227610) %>%
1695405178846:GRanges()
1695405178904:# notch
1695405178914:#chrX:3,093,887-3,206,341
1695405178924:notch <- data.frame('seqnames' = 'chrX',
1695405178935:'start' = 3093887,
1695405178944:'end' = 3206341) %>%
1695405178955:GRanges()
1695405179012:###
1695405179029:# nubbin
1695405179040:#chr2L:12,542,935-12,696,192
1695405179050:nub <- data.frame('seqnames' = 'chr2L',
1695405179060:'start' = 12542935,
1695405179071:'end' = 12696192) %>%
1695405179081:GRanges()
1695405179134:# enhancers
1695405179144:###
1695405179163:redFly_enhancers <- read.table('bed/all_Dmel_CRM-sorted-merged.bed', sep = '\t')
1695405179212:colnames(redFly_enhancers) <- c('seqnames', 'start','end')
1695405179226:redFly_enhancers.ranges <- GRanges(redFly_enhancers)
1695405179451:## memes setup
1695405179461:###
1695405179471:# meme db
1695405179482:###
1695405179492:#TODO - so clunky...
1695405179503:# loading in the fly factor database, drop out a couple of problematic fbgn
1695405179513:# then use the fbgn.validated lookup table for fly factor to update all the old ids to correct ids
1695405179523:# then filter on the on gene list -- which has to go through a similar process of id validation
1695405179533:# gross
1695405179543:meme_db <- universalmotif::read_meme('Data/fly_factor_survey.meme') %>%
1695405179553:universalmotif::to_df() %>%
1695405179563:dplyr::group_by(name) %>%
1695405179573:dplyr::filter(!grepl('FBgn0051782|FBgn0265182', name)) %>%  #drop this FBgn, problematic update to multiple new FBgns of pseudogenes
1695405179584:dplyr::mutate(basename = stringr::str_split_fixed(name, '_', n = 2)[[1]],
1695405179595:fbgn.validated = fbgn.validated[fbgn.validated$FlyFactor == basename,]$Validated)
1695405180299:meme_db_on <- meme_db %>%
1695405180312:dplyr::filter(fbgn.validated %in% ON.genes.validated$Validated)
1695405180373:options(meme_db = universalmotif::to_list(meme_db_on, extrainfo = F))
1695405180434:## colors
1695405180447:viridis.hex <- c("#440154","#3b528b","#21918c","#5ec962","#5ec962","#fde725")
1695405180461:cbPalette <- c("#999999", "#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7")
1695405180475:cbPalette.4 <- c("#D81B60","#1E88E5","#FFC107","#004D40")
1695405180489:cbPalette.ibm <- c('#332288','#117733','#44AA99','#88CCEE','#DDCC77','#CC6677','#AA4499','#882255')
1695405180510:## browser
1695405180522:WTFAIRE.colors <- c("grey10","grey20","grey30","grey40","grey50","grey60")
1695405180543:## peak subsets
1695405180555:osaPeaks <- peaks$cnr.df %>%
1695405180567:dplyr::filter(osa.cnr & !yw.cnr) %>%
1695405180579:GRanges() %>%
1695405180591:resize(width = 1, fix = "center")
1695405180805:osaPeaks.full <- peaks$cnr.df %>%
1695405180817:dplyr::filter(osa.cnr & !yw.cnr) %>%
1695405180829:GRanges(seqlengths = seqlengths(dm6))
1695405181033:osaPeaks.enhancers.full <- osaPeaks.full %>%
1695405181046:data.frame() %>%
1695405181058:dplyr::filter(anno.new %in% c('Distal Intergenic', 'Intron')) %>%
1695405181070:GRanges()
1695405181407:# uses rep1 summit coordinates
1695405181419:osaPeaks.summits <- subsetByOverlaps(cnr.summits, osaPeaks.full)
1695405181814:osaPeaks.faire.summits <- subsetByOverlaps(faire.wt.3LW.summits, osaPeaks.full)
1695405181991:fairePeaks.wt <- peaks$faire.wt.df %>%
1695405182003:#  dplyr::filter(assay == 'faire' & experiment == 'WT FAIRE Wing Timecourse') %>%
1695405182015:GRanges() %>%
1695405182028:resize(width = 1, fix = "center")
1695405182791:#redundant... but used in a couple chunks for motif analysis
1695405182805:fairePeaks.wt.full <- peaks$faire.wt.df %>%
1695405182819:dplyr::filter(assay == 'faire'  & experiment == 'WT FAIRE Wing Timecourse')
1695405184916:#DONE - remove the peakCat ? since now using log2fold change for these categories...
1695405184929:# switched to using osaDeg.qF which is a peak set derived from diffbind, that has been subset using iranges by intersect
1695405184941:# with quality filtered peak calls in peaks$faire.osaDeg.df
1695405184953:osaDeg.center <- osaDeg.qF %>%
1695405184966:GRanges() %>%
1695405184979:resize(width = 1, fix = "center")
1695405185112:# rotund peaks
1695405185125:rn.peaks <- peaks$rn.df %>%
1695405185139:GRanges()
1695405185186:rn.distal <- rn.peaks %>%
1695405185200:dplyr::filter(anno.new %in% c('Distal Intergenic', 'Intron')) %>%
1695405185213:GRanges()
1695405185407:# genomic 500bp
1695405185426:dm6.500bp <- peaks$dm6.500bp %>%
1695405185439:GRanges() %>%
1695405185452:resize(width = 1, fix = 'center')
1695405186617:#fairePeaks.osaDependent <- fairePeaks.deg %>%
1695405186629:#  data.frame() %>%
1695405186642:#  dplyr::filter(faireCat.osaDeGrad == 'Osa Dependent') %>%
1695405186654:#  GRanges()
1695405186667:#
1695405186762:#fairePeaks.osaIndependent <- fairePeaks.deg %>%
1695405186798:#  data.frame() %>%
1695405186811:#  dplyr::filter(faireCat.osaDeGrad == 'Osa Independent') %>%
1695405186825:#  GRanges()
1695405186836:#
1695405186849:#fairePeaks.osaEctopic <- fairePeaks.deg %>%
1695405186862:#  data.frame() %>%
1695405186875:#  dplyr::filter(faireCat.osaDeGrad == 'Osa Ectopic') %>%
1695405186888:#  GRanges()
1695405186924:## load bws
1695405186953:#TODO - cleanup - move matrices?
1695405186972:bws <- get_bws(dplyr::bind_rows(cnr.ss, faire.wt.ssPool), 'id')
1695405228926:deg.bws <- get_bws(faire.ss %>% dplyr::filter(experiment == 'osaGFP deGrad FAIRE'), 'id')
1695405233959:#TODO move data to main project directory and fix path
1695405233971:#TODO merge reps?
1695405233983:#k27ac.bw <- rtracklayer::import.bw('~/mckay/h3k27ac_cnr/bigwig/yw-3LW-wing-ak27ac-pel-Rep1_dm6_trim_q5_dupsRemoved_allFrags_rpgcNorm_zNorm.bw')
1695405233996:#TODO put these notes in better place"
1695405234009:## K27ac data- yeast spikein norm pel data is generally lower in rep2 than rep1, this is not seen in znorm or drosYak norm data
1695405234022:## drosYak norm signal is "low" as in the absolute values are usually < 1, but the normalization between samples looks good, and the signal to noise still looks fine, not appreciably better or worse that znorm
1695405234034:## using pellet because only have 2 reps of pel, only 1 of sup - the sup rep looks really good though I think
1695405234047:## using large fragments only because all fractions/reps show poor signal in <120 bp frag split
1695405234066:#k27ac.bw <- rtracklayer::import.bw('~/mckay/H3K27ac_CnR/BigWig/yw-3LW-wing-ak27ac-pel-MEAN_dm6_trim_q5_dupsRemoved_150to700_rpgcNorm_zNorm.bw')
1695405234080:k27ac.1.bw <- rtracklayer::import.bw('BigWig/yw-3LW-wing-ak27ac-pel-Rep1_dm6_trim_q5_dupsRemoved_150to700_rpgcNorm_zNorm.bw')
1695405234816:k27ac.2.bw <- rtracklayer::import.bw('BigWig/yw-3LW-wing-ak27ac-pel-Rep2_dm6_trim_q5_dupsRemoved_150to700_rpgcNorm_zNorm.bw')
1695405235881:## functions
1695405235901:plot.frac <- function(x) {
1695405235915:lapply(unique(x$change), function(i) {
1695405235929:x %>%
1695405235943:dplyr::filter(change == i) %>%
1695405235958:ggplot(aes(fraction, change, fill = Osa.Bound)) +
1695405236976:geom_bar(stat = 'identity', width = 1) +
1695405236992:geom_text(aes(label = per), position = position_fill(vjust = 0.6),  size = 7, fontface = "bold") +
1695405237006:#geom_text(aes(label = per, position = position_stack(vjust = 0.5))) +
1695405237019:scale_fill_manual(values = c('grey80','#41f0ad'), name = 'Osa Bound') +
1695405237034:scale_y_discrete(position = 'right', ) +
1695405237047:xlab('Percent Bound by Osa') +
1695405237061:theme(legend.position = 'top',
1695405237076:legend.key.size = unit(1, 'cm'),
1695405237088:legend.text = element_text(size = 15),
1695405237103:legend.title = element_text(size = 20),
1695405237118:panel.background = element_blank(),
1695405237132:axis.text = element_blank(),
1695405237146:axis.title = element_blank(),
1695405237160:axis.ticks = element_blank(),
1695405237173:#           axis.text.y = element_text(size = 12),
1695405237187:panel.grid = element_blank()) +
1695405237201:NULL
1695405237214:fn = paste0('rPlots/3E_',i,'.png')
1695405237228:ggsave(fn, width = 6, height = 1.5, units = 'in', dpi = 300 )
1695405237243:})
1695405237257:}
1695405237279:## .bed out
1695405237292:osaPeaks %>%
1695405237306:data.frame() %>%
1695405237320:dplyr::select(seqnames, start, end) %>%
1695405237333:write.table('osaPeaks.bed', quote = F, col.names = F, row.names = F, sep = '\t')
1695405237444:osaPeaks.full %>%
1695405237459:data.frame() %>%
1695405237475:dplyr::select(seqnames, start, end) %>%
1695405237490:write.table('osaPeaks-full.bed', quote = F, col.names = F, row.names = F, sep = '\t')
1695405237592:peaks$cnr.df %>%
1695405237606:data.frame() %>%
1695405237621:dplyr::filter(yw.cnr) %>%
1695405237635:dplyr::select(seqnames, start, end) %>%
1695405237649:write.table('controlPeaks.bed', quote = F, col.names = F, row.names = F, sep = '\t')
1695405237690:#fairePeaks.osaDependent %>%
1695405237704:#  data.frame() %>%
1695405237717:#  dplyr::select(seqnames, start, end) %>%
1695405237731:#  write.table('osaDependent.bed', quote = F, col.names = F, row.names = F, sep = '\t')
1695405237767:#
1695405237782:#fairePeaks.osaEctopic %>%
1695405237795:#  data.frame() %>%
1695405237809:#  dplyr::select(seqnames, start, end) %>%
1695405237823:#  write.table('osaEctopic.bed', quote = F, col.names = F, row.names = F, sep = '\t')
1695405237836:#
1695405237868:## gviz
1695405237882:track.colors <- c("grey40","#D01C8B", "grey40","#D01C8B")
1695405237904:cnr.ss.browser <- cnr.ss %>% dplyr::mutate(color = track.colors)
1695405237957:mckay_enhancers <- read.table('bed/cloned_enhancers_dm6.bed', sep = '\t')
1695405237982:Delta_enhancers <- read.table('bed/cloned_Delta_enhancers.bed', sep = '\t')
1695405238007:espl_enhancers <- read.table('bed/espl_enhancers-merge.bed', sep = '\t')
1695405238039:enhancers <- dplyr::bind_rows(Delta_enhancers, espl_enhancers)
1695405238057:colnames(enhancers) <- c('seqnames', 'start','end','name')
1695405238077:enhancer.ranges <- GRanges(enhancers)
1695405238153:enhancertrack <- Gviz::AnnotationTrack(range = enhancer.ranges,
1695405238167:genome = 'dm6',
1695405238182:fill = '#18c708',
1695405238196:col = 'transparent',
1695405238211:background.title = 'white',
1695405238225:showTitle = F)
1695405238671:dlpouch.track <- Gviz::AnnotationTrack(range = dlpouch,
1695405238688:genome = 'dm6',
1695405238702:fill = '#18c708',
1695405238716:col = 'transparent',
1695405238731:background.title = 'white',
1695405238745:showTitle = F)
1695405239000:genetrack <- Gviz::GeneRegionTrack(range = dm6.TxDb, fill = 'grey80', showTitle = F, background.title = 'white', stacking = 'squish')
1695405243785:peakTrack <- Gviz::AnnotationTrack(range = osaPeaks.full,
1695405243798:genome = 'dm6',
1695405243810:fill = '#D01C8B',
1695405243823:col = 'transparent',
1695405243835:background.title = 'white',
1695405243849:showTitle = F )
1695405244274:#TODO - is osa.dependent annotation correct? using diffbind?
1695405244286:osaDep.peakTrack <- Gviz::AnnotationTrack(range = GRanges(peaks$faire.osaDeg.df %>% dplyr::filter(osa.dependent)),
1695405244298:#osaDep.peakTrack <- Gviz::AnnotationTrack(range = osaDeg.osaDep,
1695405244312:genome = 'dm6',
1695405244325:fill = '#469ae8',
1695405244339:col = 'transparent',
1695405244353:background.title = 'white',
1695405244366:showTitle = F)
1695405244643:hairless_peaks <- read.table('bed/hairless-dm6.bed', col.names = c('seqnames', 'start', 'end')) %>% GRanges()
1695405245450:hTrack <- Gviz::AnnotationTrack(range = hairless_peaks,
1695405245485:genome = 'dm6',
1695405245522:fill = '#2ad4c3',
1695405245542:col = 'transparent',
1695405245557:background.title = 'white',
1695405245585:showTitle = F)
1695405245772:spacer <- Gviz::AnnotationTrack(background.title = 'white')
1695405246207:## matrices for heatmaps
1695405246228:mats <- purrr::map(bws, ~{
1695405246242:normalizeToMatrix(., osaPeaks, value_column = 'score', keep = c(0.01, 0.99), extend = 2000)
1695405246255:})
1695405348141:names(mats) <- names(bws)
1695405348409:track.colors <- c("#50c42d","#469ae8","grey70","grey60","grey50", 'grey40')
1695405348432:deg.ss.browser <- faire.osaDeGrad.ssPool %>%
1695405348446:dplyr::bind_rows(., faire.wt.ssPool[faire.wt.ssPool$grp == 'wt.3LW' |
1695405348460:faire.wt.ssPool$grp == 'wt.24h' |
1695405348473:faire.wt.ssPool$grp == 'wt.36h' |
1695405348487:faire.wt.ssPool$grp == 'wt.44h',]) %>%
1695405348500:dplyr::mutate(color = track.colors)
1695405348545:cnr.tracks <- get_cnr_tracks(cnr.ss.browser, ylim = c(0,20))
1695405348864:cnr.tracks <- list(cnr.tracks$osaGFP.rep1,
1695405348878:cnr.tracks$osaGFP.rep2,
1695405348893:peakTrack,
1695405348908:cnr.tracks$yw.rep1,
1695405348923:cnr.tracks$yw.rep2)
1695405348958:deg.tracks <- get_cnr_tracks(deg.ss.browser, ylim = c(0,13))
1695405349111:deg.tracks <- c(deg.tracks$wt_3LW,
1695405349124:deg.tracks$wt_24h,
1695405349138:deg.tracks$wt_36h,
1695405349154:deg.tracks$wt_44h,
1695405349169:deg.tracks$osaGFP.deGrad_control_faire,
1695405349182:deg.tracks$osaGFP.deGrad_nubG4_faire)
1695405349204:axis <- Gviz::GenomeAxisTrack(scale = 2000)
1695405349295:#e74
1695405349308:#png('rPlots/3F-e74.png', width = 4, height = 4, res = 300, units = 'in')
1695405349322:Gviz::plotTracks(c(axis,
1695405349335:deg.tracks,
1695405349348:spacer,
1695405349361:spacer,
1695405349394:cnr.tracks,
1695405349432:spacer,
1695405349450:spacer,
1695405349465:osaDep.peakTrack,
1695405349478:spacer,
1695405349491:spacer,
1695405349505:genetrack),
1695405349519:chromosome = seqnames(e74) %>% as.character(),
1695405349532:from = start(e74),
1695405349545:to = end(e74),
1695405349558:cex.axis = 0.3,
1695405349571:cex.title = 0.5,
1695405349585:title.width = 1,
1695405349599:innerMargin = 10)
1695405394063:e74 <- data.frame(seqnames = 'chr3L',
1695405394075:start = 17580414,
1695405394088:end = 17585073) %>%
1695405394099:GRanges()
1695405402913:#e74
1695405402925:#png('rPlots/3F-e74.png', width = 4, height = 4, res = 300, units = 'in')
1695405402937:Gviz::plotTracks(c(axis,
1695405402949:deg.tracks,
1695405402961:spacer,
1695405402972:spacer,
1695405402982:cnr.tracks,
1695405402993:spacer,
1695405403005:spacer,
1695405403018:osaDep.peakTrack,
1695405403031:spacer,
1695405403043:spacer,
1695405403055:genetrack),
1695405403067:chromosome = seqnames(e74) %>% as.character(),
1695405403078:from = start(e74),
1695405403090:to = end(e74),
1695405403102:cex.axis = 0.3,
1695405403112:cex.title = 0.5,
1695405403124:title.width = 1,
1695405403135:innerMargin = 10)
1695405450462:#e74
1695405450474:#png('rPlots/3F-e74.png', width = 4, height = 4, res = 300, units = 'in')
1695405450486:Gviz::plotTracks(c(axis,
1695405450496:deg.tracks,
1695405450507:spacer,
1695405450518:spacer,
1695405450529:cnr.tracks,
1695405450541:spacer,
1695405450552:spacer,
1695405450563:osaDep.peakTrack,
1695405450574:spacer,
1695405450584:spacer,
1695405450595:genetrack),
1695405450605:chromosome = seqnames(e74) %>% as.character(),
1695405450616:from = start(e74+2000),
1695405450627:to = end(e74+2000),
1695405450637:cex.axis = 0.3,
1695405450648:cex.title = 0.5,
1695405450659:title.width = 1,
1695405450670:innerMargin = 10)
1695405466986:#e74
1695405466998:#png('rPlots/3F-e74.png', width = 4, height = 4, res = 300, units = 'in')
1695405467009:Gviz::plotTracks(c(axis,
1695405467020:deg.tracks,
1695405467031:spacer,
1695405467042:spacer,
1695405467053:cnr.tracks,
1695405467064:spacer,
1695405467075:spacer,
1695405467085:osaDep.peakTrack,
1695405468102:spacer,
1695405468172:spacer,
1695405468183:genetrack),
1695405468195:chromosome = seqnames(e74) %>% as.character(),
1695405468206:from = start(e74+10000),
1695405468217:to = end(e74+10000),
1695405468228:cex.axis = 0.3,
1695405468240:cex.title = 0.5,
1695405468251:title.width = 1,
1695405468263:innerMargin = 10)
1695405536492:#e74
1695405536503:#png('rPlots/3F-e74.png', width = 4, height = 4, res = 300, units = 'in')
1695405536513:Gviz::plotTracks(c(axis,
1695405536524:deg.tracks,
1695405536535:spacer,
1695405536547:spacer,
1695405536559:cnr.tracks,
1695405536570:spacer,
1695405536581:spacer,
1695405536592:osaDep.peakTrack,
1695405536603:spacer,
1695405536631:spacer,
1695405536642:enhancertrack,
1695405536653:genetrack),
1695405536664:chromosome = seqnames(e74) %>% as.character(),
1695405536676:from = start(e74+10000),
1695405536688:to = end(e74+10000),
1695405536700:cex.axis = 0.3,
1695405536711:cex.title = 0.5,
1695405536722:title.width = 1,
1695405536733:innerMargin = 10)
1695405555775:#e74
1695405555787:#png('rPlots/3F-e74.png', width = 4, height = 4, res = 300, units = 'in')
1695405555798:Gviz::plotTracks(c(axis,
1695405555810:deg.tracks,
1695405555821:spacer,
1695405555833:spacer,
1695405555844:cnr.tracks,
1695405555855:spacer,
1695405555867:spacer,
1695405555878:osaDep.peakTrack,
1695405555891:spacer,
1695405555901:spacer,
1695405555912:enhancertrack,
1695405555924:genetrack),
1695405555934:chromosome = seqnames(e74) %>% as.character(),
1695405555946:from = start(e74+50000),
1695405555957:to = end(e74+50000),
1695405555971:cex.axis = 0.3,
1695405555985:cex.title = 0.5,
1695405555996:title.width = 1,
1695405556007:innerMargin = 10)
1695405678737:mckay_enhancers <- read.table('bed/cloned_enhancers_dm6.bed', sep = '\t')
1695405679705:Delta_enhancers <- read.table('bed/cloned_Delta_enhancers.bed', sep = '\t')
1695405680278:espl_enhancers <- read.table('bed/espl_enhancers-merge.bed', sep = '\t')
1695405680901:enhancers <- dplyr::bind_rows(Delta_enhancers, espl_enhancers)
1695405681547:colnames(enhancers) <- c('seqnames', 'start','end','name')
1695405682182:enhancer.ranges <- GRanges(enhancers)
1695405682854:enhancertrack <- Gviz::AnnotationTrack(range = enhancer.ranges,
1695405682866:genome = 'dm6',
1695405682877:fill = '#18c708',
1695405682888:col = 'transparent',
1695405682901:background.title = 'white',
1695405682912:showTitle = F)
1695405690317:#e74
1695405690328:#png('rPlots/3F-e74.png', width = 4, height = 4, res = 300, units = 'in')
1695405690339:Gviz::plotTracks(c(axis,
1695405690352:deg.tracks,
1695405690363:spacer,
1695405690374:spacer,
1695405690384:cnr.tracks,
1695405690395:spacer,
1695405690406:spacer,
1695405690417:osaDep.peakTrack,
1695405690429:spacer,
1695405690439:spacer,
1695405690450:enhancertrack,
1695405690460:genetrack),
1695405690470:chromosome = seqnames(e74) %>% as.character(),
1695405690481:from = start(e74+50000),
1695405690491:to = end(e74+50000),
1695405690501:cex.axis = 0.3,
1695405690512:cex.title = 0.5,
1695405690522:title.width = 1,
1695405690533:innerMargin = 10)
1695405780648:mckay_enhancers <- read.table('bed/cloned_enhancers_dm6.bed', sep = '\t')
1695405781639:Delta_enhancers <- read.table('bed/cloned_Delta_enhancers.bed', sep = '\t')
1695405782587:espl_enhancers <- read.table('bed/espl_enhancers-merge.bed', sep = '\t')
1695405783803:enhancers <- dplyr::bind_rows(Delta_enhancers, espl_enhancers)
1695405784757:colnames(enhancers) <- c('seqnames', 'start','end','name')
1695405785861:enhancer.ranges <- GRanges(enhancers)
1695405789005:enhancertrack <- Gviz::AnnotationTrack(range = enhancer.ranges,
1695405789018:genome = 'dm6',
1695405789029:fill = '#18c708',
1695405789040:col = 'transparent',
1695405789051:background.title = 'white',
1695405789061:showTitle = F)
1695405794564:enhancer.ranges
1695405814982:enhancers
1695405901910:mckay_enhancertrack <- Gviz::AnnotationTrack(range = mckay_enhancers,
1695405901921:genome = 'dm6',
1695405901933:fill = 'black',
1695405901944:col = 'transparent',
1695405901975:background.title = 'white',
1695405901988:showTitle = F)
1695405984000:mckay_enhancers <- read.table('bed/cloned_enhancers_dm6.bed', sep = '\t')
1695405984801:colnames(mckay_enhancers) <- c('seqnames', 'start','end','name')
1695405985560:mckay_enhancers %<>% GRanges()
1695406001514:mckay_enhancertrack <- Gviz::AnnotationTrack(range = mckay_enhancers,
1695406001536:genome = 'dm6',
1695406001548:fill = 'black',
1695406001559:col = 'transparent',
1695406001571:background.title = 'white',
1695406001582:showTitle = F)
1695406011953:#e74
1695406011964:#png('rPlots/3F-e74.png', width = 4, height = 4, res = 300, units = 'in')
1695406011975:Gviz::plotTracks(c(axis,
1695406011986:deg.tracks,
1695406011997:spacer,
1695406012009:spacer,
1695406012020:cnr.tracks,
1695406012035:spacer,
1695406012047:spacer,
1695406012059:osaDep.peakTrack,
1695406012071:spacer,
1695406012082:spacer,
1695406012093:mckay_enhancertrack,
1695406012105:genetrack),
1695406012117:chromosome = seqnames(e74) %>% as.character(),
1695406012128:from = start(e74+50000),
1695406012140:to = end(e74+50000),
1695406012152:cex.axis = 0.3,
1695406012164:cex.title = 0.5,
1695406012175:title.width = 1,
1695406012190:innerMargin = 10)
1695406213161:#e74
1695406213173:#png('rPlots/3F-e74.png', width = 4, height = 4, res = 300, units = 'in')
1695406213184:Gviz::plotTracks(c(axis,
1695406213195:deg.tracks,
1695406213207:spacer,
1695406213217:spacer,
1695406213230:cnr.tracks,
1695406213242:spacer,
1695406213256:spacer,
1695406213267:osaDep.peakTrack,
1695406213279:mckay_enhancertrack,
1695406213291:genetrack),
1695406213302:chromosome = seqnames(e74) %>% as.character(),
1695406213314:from = start(e74+50000),
1695406213325:to = end(e74+50000),
1695406213336:cex.axis = 0.3,
1695406213348:cex.title = 0.5,
1695406213359:title.width = 1,
1695406213370:innerMargin = 10)
1695406229134:#e74
1695406229145:#png('rPlots/3F-e74.png', width = 4, height = 4, res = 300, units = 'in')
1695406229156:Gviz::plotTracks(c(axis,
1695406229167:deg.tracks,
1695406229178:spacer,
1695406229190:spacer,
1695406229201:cnr.tracks,
1695406229212:spacer,
1695406229223:spacer,
1695406229234:osaDep.peakTrack,
1695406229247:mckay_enhancertrack,
1695406229257:genetrack),
1695406229268:chromosome = seqnames(e74) %>% as.character(),
1695406229279:from = start(e74+20000),
1695406229292:to = end(e74+50000),
1695406229302:cex.axis = 0.3,
1695406229315:cex.title = 0.5,
1695406229325:title.width = 1,
1695406229336:innerMargin = 10)
1695406252135:#e74
1695406252146:#png('rPlots/3F-e74.png', width = 4, height = 4, res = 300, units = 'in')
1695406252157:Gviz::plotTracks(c(axis,
1695406252168:deg.tracks,
1695406252179:spacer,
1695406252236:spacer,
1695406252249:cnr.tracks,
1695406252260:spacer,
1695406252272:spacer,
1695406252283:osaDep.peakTrack,
1695406252295:mckay_enhancertrack,
1695406252307:genetrack),
1695406252317:chromosome = seqnames(e74) %>% as.character(),
1695406252329:from = start(e74+30000),
1695406252340:to = end(e74+40000),
1695406252352:cex.axis = 0.3,
1695406252366:cex.title = 0.5,
1695406252378:title.width = 1,
1695406252390:innerMargin = 10)
1695406316042:track.colors <- c("#50c42d","#469ae8","grey70","grey60","grey50", 'grey40')
1695406316071:deg.ss.browser <- faire.osaDeGrad.ssPool %>%
1695406316083:dplyr::bind_rows(., faire.wt.ssPool[faire.wt.ssPool$grp == 'wt.3LW' |
1695406316095:faire.wt.ssPool$grp == 'wt.24h' |
1695406316108:faire.wt.ssPool$grp == 'wt.36h' |
1695406316120:faire.wt.ssPool$grp == 'wt.44h',]) %>%
1695406316133:dplyr::mutate(color = track.colors)
1695406316200:cnr.tracks <- get_cnr_tracks(cnr.ss.browser, ylim = c(0,20))
1695406316313:cnr.tracks <- list(cnr.tracks$osaGFP.rep1,
1695406316326:cnr.tracks$osaGFP.rep2,
1695406316340:# peakTrack,
1695406316354:cnr.tracks$yw.rep1,
1695406316367:cnr.tracks$yw.rep2)
1695406316545:deg.tracks <- get_cnr_tracks(deg.ss.browser, ylim = c(0,13))
1695406316707:deg.tracks <- c(deg.tracks$wt_3LW,
1695406316727:deg.tracks$wt_24h,
1695406316740:deg.tracks$wt_36h,
1695406316753:deg.tracks$wt_44h,
1695406316768:spacer,
1695406316780:deg.tracks$osaGFP.deGrad_control_faire,
1695406316793:deg.tracks$osaGFP.deGrad_nubG4_faire)
1695406316814:axis <- Gviz::GenomeAxisTrack(scale = 10000)
1695406316900:#e74
1695406316914:#png('rPlots/3F-e74.png', width = 4, height = 4, res = 300, units = 'in')
1695406316926:Gviz::plotTracks(c(axis,
1695406316940:deg.tracks,
1695406316953:spacer,
1695406316967:spacer,
1695406316981:cnr.tracks,
1695406316995:spacer,
1695406317009:spacer,
1695406317024:osaDep.peakTrack,
1695406317038:mckay_enhancertrack,
1695406317052:genetrack),
1695406317065:chromosome = seqnames(e74) %>% as.character(),
1695406317079:from = start(e74+30000),
1695406317092:to = end(e74+40000),
1695406317105:cex.axis = 0.3,
1695406317118:cex.title = 0.5,
1695406317133:title.width = 1,
1695406317147:innerMargin = 10)
1695406321647:#dev.off()
1695406344977:#e74
1695406344988:#png('rPlots/3F-e74.png', width = 4, height = 4, res = 300, units = 'in')
1695406344999:Gviz::plotTracks(c(axis,
1695406345011:deg.tracks,
1695406345022:spacer,
1695406345033:spacer,
1695406345048:cnr.tracks,
1695406345061:spacer,
1695406345074:spacer,
1695406345088:osaDep.peakTrack,
1695406345101:peakTrack,
1695406345114:mckay_enhancertrack,
1695406345125:genetrack),
1695406345136:chromosome = seqnames(e74) %>% as.character(),
1695406345148:from = start(e74+30000),
1695406345159:to = end(e74+40000),
1695406345170:cex.axis = 0.3,
1695406345180:cex.title = 0.5,
1695406345191:title.width = 1,
1695406345202:innerMargin = 10)
1695406376905:#e74
1695406376916:#png('rPlots/3F-e74.png', width = 4, height = 4, res = 300, units = 'in')
1695406376928:Gviz::plotTracks(c(axis,
1695406376939:deg.tracks,
1695406376998:spacer,
1695406377010:spacer,
1695406377024:cnr.tracks,
1695406377038:spacer,
1695406377051:spacer,
1695406377063:osaDep.peakTrack,
1695406377076:peakTrack,
1695406377087:mckay_enhancertrack,
1695406377098:genetrack),
1695406377111:chromosome = seqnames(e74) %>% as.character(),
1695406377123:from = start(e74+10000),
1695406377135:to = end(e74+40000),
1695406377146:cex.axis = 0.3,
1695406377157:cex.title = 0.5,
1695406377168:title.width = 1,
1695406377179:innerMargin = 10)
1695406388190:#e74
1695406388202:#png('rPlots/3F-e74.png', width = 4, height = 4, res = 300, units = 'in')
1695406388213:Gviz::plotTracks(c(axis,
1695406388224:deg.tracks,
1695406388235:spacer,
1695406388247:spacer,
1695406388259:cnr.tracks,
1695406388270:spacer,
1695406388283:spacer,
1695406388294:osaDep.peakTrack,
1695406388305:peakTrack,
1695406388316:mckay_enhancertrack,
1695406388327:genetrack),
1695406388338:chromosome = seqnames(e74) %>% as.character(),
1695406388349:from = start(e74+30000),
1695406388360:to = end(e74+20000),
1695406388371:cex.axis = 0.3,
1695406388382:cex.title = 0.5,
1695406388394:title.width = 1,
1695406388404:innerMargin = 10)
1695406412273:#e74
1695406412285:#png('rPlots/3F-e74.png', width = 4, height = 4, res = 300, units = 'in')
1695406412296:Gviz::plotTracks(c(axis,
1695406412308:deg.tracks,
1695406412318:spacer,
1695406412330:spacer,
1695406412342:cnr.tracks,
1695406412352:spacer,
1695406412363:spacer,
1695406412374:osaDep.peakTrack,
1695406412385:peakTrack,
1695406412396:mckay_enhancertrack,
1695406412408:genetrack),
1695406412419:chromosome = seqnames(e74) %>% as.character(),
1695406412430:from = start(e74+30000),
1695406412441:to = end(e74+10000),
1695406412452:cex.axis = 0.3,
1695406412462:cex.title = 0.5,
1695406412473:title.width = 1,
1695406412484:innerMargin = 10)
1695406426083:#e74
1695406426095:#png('rPlots/3F-e74.png', width = 4, height = 4, res = 300, units = 'in')
1695406426106:Gviz::plotTracks(c(axis,
1695406426117:deg.tracks,
1695406426128:spacer,
1695406426139:spacer,
1695406426149:cnr.tracks,
1695406426160:spacer,
1695406426171:spacer,
1695406426183:osaDep.peakTrack,
1695406426194:peakTrack,
1695406426204:mckay_enhancertrack,
1695406426215:genetrack),
1695406426225:chromosome = seqnames(e74) %>% as.character(),
1695406426237:from = start(e74+20000),
1695406426248:to = end(e74+10000),
1695406426258:cex.axis = 0.3,
1695406426270:cex.title = 0.5,
1695406426281:title.width = 1,
1695406426291:innerMargin = 10)
1695406445284:#e74
1695406445298:#png('rPlots/3F-e74.png', width = 4, height = 4, res = 300, units = 'in')
1695406445309:Gviz::plotTracks(c(axis,
1695406445320:deg.tracks,
1695406445331:spacer,
1695406445343:spacer,
1695406445354:cnr.tracks,
1695406445365:spacer,
1695406445375:spacer,
1695406445385:osaDep.peakTrack,
1695406445397:peakTrack,
1695406445407:mckay_enhancertrack,
1695406445418:genetrack),
1695406445429:chromosome = seqnames(e74) %>% as.character(),
1695406445440:from = start(e74+20000),
1695406445450:to = end(e74+5000),
1695406445462:cex.axis = 0.3,
1695406445474:cex.title = 0.5,
1695406445485:title.width = 1,
1695406445496:innerMargin = 10)
1695406498077:png('rPlots/S52-A.png', width = 4, height = 4, res = 300, units = 'in')
1695406498092:Gviz::plotTracks(c(axis,
1695406498104:deg.tracks,
1695406498115:spacer,
1695406498126:spacer,
1695406498138:cnr.tracks,
1695406498149:spacer,
1695406498160:spacer,
1695406498171:osaDep.peakTrack,
1695406498183:peakTrack,
1695406498196:mckay_enhancertrack,
1695406498208:spacer,
1695406498220:spacer,
1695406498231:genetrack),
1695406498242:chromosome = seqnames(e74) %>% as.character(),
1695406498275:from = start(e74+20000),
1695406498287:to = end(e74+5000),
1695406498299:cex.axis = 0.3,
1695406498310:cex.title = 0.5,
1695406498323:title.width = 1,
1695406498335:innerMargin = 10)
1695406503354:dev.off()
1695406544280:png('rPlots/S52-A.png', width = 4, height = 5, res = 300, units = 'in')
1695406544293:Gviz::plotTracks(c(axis,
1695406544304:deg.tracks,
1695406544316:spacer,
1695406544328:spacer,
1695406544345:cnr.tracks,
1695406544357:spacer,
1695406544368:spacer,
1695406544379:osaDep.peakTrack,
1695406544390:peakTrack,
1695406544400:mckay_enhancertrack,
1695406544411:spacer,
1695406544422:spacer,
1695406544433:genetrack),
1695406544444:chromosome = seqnames(e74) %>% as.character(),
1695406544454:from = start(e74+20000),
1695406544465:to = end(e74+5000),
1695406544476:cex.axis = 0.3,
1695406544487:cex.title = 0.5,
1695406544497:title.width = 1,
1695406544508:innerMargin = 10)
1695406550026:dev.off()
1695673696428:library(magrittr)
1695673696464:library(ggplot2)
1695673696539:#library(ggrepel)
1695673696553:library(GenomicRanges)
1695673696758:library(org.Dm.eg.db)
1695673696991:library(AnnotationDbi)
1695673697009:library(EnrichedHeatmap)
1695673697118:library(ComplexHeatmap)
1695673697135:#library(GO.db)
1695673697154:#library(patchwork)
1695673697170:source('scripts/utils.R')
1695673697186:source('scripts/peakUtils.R') #TODO move/rewrite getPeakData from NystLib to utils.R
1695673697282:## load data
1695673697301:load('rData/sheets.rda')
1695673697385:load('rData/peaks.rda')
1695673705019:load('rData/rnaiScreen.rda')
1695673705126:ON.genes.validated <- read.table('Data/on-genes-IDvalidation.txt', header = T) %>%
1695673705137:dplyr::rename(Geneid = submitted_item,
1695673705148:Validated = validated_id,
1695673705157:Symbol = current_symbol)
1695673705250:## there are 2 'FlyFactor' FBgn codes that are updated two more than 1 unique 'Validated' FBgns in `fbgn.validated`
1695673705261:# FBgn0051782 -- CG31782 in flyfactor - old annotation? no present in Flybase, maybe split into three differen pseudogene annos now
1695673705272:# FBgn0050420 -- is only Atf-2 in flyfactor db
1695673705282:fbgn.validated <- read.table('Data/fbgn_validated.txt', header = F, sep = '\t')
1695673705303:colnames(fbgn.validated) <- c('FlyFactor', 'Validated', 'Symbol')
1695673705318:fbgn.validated %<>%
1695673705328:dplyr::filter(FlyFactor != 'FBgn0051782') %>% #drop this FBgn, problematic update to multiple new FBgns of pseudogenes
1695673705337:dplyr::filter(Validated != 'FBgn0265182') # drop this Validated FBgn, which is an incorrectly updated from FBgn0050420
1695673705393:## global variables
1695673705404:###
1695673705416:# assign global variables
1695673705427:###
1695673705446:dm6 <- BSgenome.Dmelanogaster.UCSC.dm6::BSgenome.Dmelanogaster.UCSC.dm6
1695673705512:#dm3 <- BSgenome.Dmelanogaster.UCSC.dm3::BSgenome.Dmelanogaster.UCSC.dm3
1695673705525:dm6.TxDb <- TxDb.Dmelanogaster.UCSC.dm6.ensGene::TxDb.Dmelanogaster.UCSC.dm6.ensGene
1695673705654:dm6.promoters <- ChIPseeker::getPromoters(dm6.TxDb, upstream = 500, downstream = 100)
1695673708763:dm6.genes <- GenomicFeatures::genes(dm6.TxDb)
1695673709414:brD <- data.frame('seqnames' = 'chrX',
1695673709426:'start' = 1565708,
1695673709437:'end' = 1567401) %>%
1695673709450:GenomicRanges::GRanges()
1695673709529:shn <- data.frame('seqnames' = 'chr2R',
1695673709541:'start' = 11159086,
1695673709552:'end' = 11217394) %>%
1695673709566:GRanges()
1695673709632:sbb <- data.frame('seqnames' = 'chr2R',
1695673709643:'start' = 18278198,
1695673709653:'end' = 18357296) %>%
1695673709664:GRanges()
1695673709735:# Dl
1695673709746:#chr3R:19,265,389-19,350,508
1695673709757:Dl <- data.frame('seqnames' = 'chr3R',
1695673709769:'start' = 19265389,
1695673709780:'end' = 19350508) %>%
1695673709816:GRanges()
1695673709909:# Dl pouch
1695673709919:#chr3R	19310086	19311243	Delta_D-gal4
1695673709931:dlpouch <- data.frame('seqnames' = 'chr3R',
1695673709941:'start' = 19310086,
1695673709954:'end' = 19311243) %>%
1695673709965:GRanges()
1695673710067:# E(spl)-c
1695673710083:#chr3R:25,980,255-26,065,374
1695673710095:espl <- data.frame('seqnames' = 'chr3R',
1695673710106:'start' = 25980255,
1695673710116:'end' = 26065374) %>%
1695673710128:GRanges()
1695673710256:# ac/sc
1695673710269:#chrX:365,344-402,061
1695673710280:acsc <- data.frame('seqnames' = 'chrX',
1695673710292:'start' = 365344,
1695673710309:'end' = 402061) %>%
1695673710321:GRanges()
1695673710538:# serrate
1695673710549:#chr3R:27,167,731-27,227,610
1695673710559:ser <- data.frame('seqnames' = 'chr3R',
1695673710569:'start' = 27167731,
1695673710580:'end' = 27227610) %>%
1695673710591:GRanges()
1695673710821:# notch
1695673710832:#chrX:3,093,887-3,206,341
1695673710843:notch <- data.frame('seqnames' = 'chrX',
1695673710853:'start' = 3093887,
1695673710864:'end' = 3206341) %>%
1695673710888:GRanges()
1695673711100:###
1695673711119:# nubbin
1695673711132:#chr2L:12,542,935-12,696,192
1695673711144:nub <- data.frame('seqnames' = 'chr2L',
1695673711156:'start' = 12542935,
1695673711170:'end' = 12696192) %>%
1695673711184:GRanges()
1695673711457:# enhancers
1695673711472:###
1695673711491:redFly_enhancers <- read.table('bed/all_Dmel_CRM-sorted-merged.bed', sep = '\t')
1695673713326:colnames(redFly_enhancers) <- c('seqnames', 'start','end')
1695673713344:redFly_enhancers.ranges <- GRanges(redFly_enhancers)
1695673713473:## memes setup
1695673713488:###
1695673713502:# meme db
1695673713515:###
1695673713529:#TODO - so clunky...
1695673713543:# loading in the fly factor database, drop out a couple of problematic fbgn
1695673713556:# then use the fbgn.validated lookup table for fly factor to update all the old ids to correct ids
1695673713569:# then filter on the on gene list -- which has to go through a similar process of id validation
1695673713582:# gross
1695673713595:meme_db <- universalmotif::read_meme('Data/fly_factor_survey.meme') %>%
1695673713609:universalmotif::to_df() %>%
1695673713623:dplyr::group_by(name) %>%
1695673713636:dplyr::filter(!grepl('FBgn0051782|FBgn0265182', name)) %>%  #drop this FBgn, problematic update to multiple new FBgns of pseudogenes
1695673713652:dplyr::mutate(basename = stringr::str_split_fixed(name, '_', n = 2)[[1]],
1695673713666:fbgn.validated = fbgn.validated[fbgn.validated$FlyFactor == basename,]$Validated)
1695673714555:meme_db_on <- meme_db %>%
1695673714571:dplyr::filter(fbgn.validated %in% ON.genes.validated$Validated)
1695673714649:options(meme_db = universalmotif::to_list(meme_db_on, extrainfo = F))
1695673714722:## colors
1695673714737:viridis.hex <- c("#440154","#3b528b","#21918c","#5ec962","#5ec962","#fde725")
1695673714753:cbPalette <- c("#999999", "#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7")
1695673714770:cbPalette.4 <- c("#D81B60","#1E88E5","#FFC107","#004D40")
1695673714785:cbPalette.ibm <- c('#332288','#117733','#44AA99','#88CCEE','#DDCC77','#CC6677','#AA4499','#882255')
1695673714809:## browser
1695673714823:WTFAIRE.colors <- c("grey10","grey20","grey30","grey40","grey50","grey60")
1695673714846:## peak subsets
1695673714859:osaPeaks <- peaks$cnr.df %>%
1695673714872:dplyr::filter(osa.cnr & !yw.cnr) %>%
1695673714886:GRanges() %>%
1695673714901:resize(width = 1, fix = "center")
1695673715385:osaPeaks.full <- peaks$cnr.df %>%
1695673715400:dplyr::filter(osa.cnr & !yw.cnr) %>%
1695673715434:GRanges(seqlengths = seqlengths(dm6))
1695673716113:osaPeaks.enhancers.full <- osaPeaks.full %>%
1695673716128:data.frame() %>%
1695673716144:dplyr::filter(anno.new %in% c('Distal Intergenic', 'Intron')) %>%
1695673716158:GRanges()
1695673716765:# uses rep1 summit coordinates
1695673716779:osaPeaks.summits <- subsetByOverlaps(cnr.summits, osaPeaks.full)
1695673717504:osaPeaks.faire.summits <- subsetByOverlaps(faire.wt.3LW.summits, osaPeaks.full)
1695673717861:fairePeaks.wt <- peaks$faire.wt.df %>%
1695673717874:#  dplyr::filter(assay == 'faire' & experiment == 'WT FAIRE Wing Timecourse') %>%
1695673717893:GRanges() %>%
1695673717909:resize(width = 1, fix = "center")
1695673718978:#redundant... but used in a couple chunks for motif analysis
1695673718993:fairePeaks.wt.full <- peaks$faire.wt.df %>%
1695673719235:dplyr::filter(assay == 'faire'  & experiment == 'WT FAIRE Wing Timecourse')
1695673722066:#DONE - remove the peakCat ? since now using log2fold change for these categories...
1695673722079:# switched to using osaDeg.qF which is a peak set derived from diffbind, that has been subset using iranges by intersect
1695673722094:# with quality filtered peak calls in peaks$faire.osaDeg.df
1695673722107:osaDeg.center <- osaDeg.qF %>%
1695673722122:GRanges() %>%
1695673722135:resize(width = 1, fix = "center")
1695673722237:# rotund peaks
1695673722249:rn.peaks <- peaks$rn.df %>%
1695673722262:GRanges()
1695673722318:rn.distal <- rn.peaks %>%
1695673722334:dplyr::filter(anno.new %in% c('Distal Intergenic', 'Intron')) %>%
1695673722347:GRanges()
1695673722558:# genomic 500bp
1695673722581:dm6.500bp <- peaks$dm6.500bp %>%
1695673722594:GRanges() %>%
1695673722609:resize(width = 1, fix = 'center')
1695673724418:#fairePeaks.osaDependent <- fairePeaks.deg %>%
1695673724432:#  data.frame() %>%
1695673724445:#  dplyr::filter(faireCat.osaDeGrad == 'Osa Dependent') %>%
1695673724460:#  GRanges()
1695673724484:#
1695673724498:#fairePeaks.osaIndependent <- fairePeaks.deg %>%
1695673724512:#  data.frame() %>%
1695673724531:#  dplyr::filter(faireCat.osaDeGrad == 'Osa Independent') %>%
1695673724543:#  GRanges()
1695673724557:#
1695673724582:#fairePeaks.osaEctopic <- fairePeaks.deg %>%
1695673724606:#  data.frame() %>%
1695673724619:#  dplyr::filter(faireCat.osaDeGrad == 'Osa Ectopic') %>%
1695673724794:#  GRanges()
1695673724833:## load bws
1695673724863:#TODO - cleanup - move matrices?
1695673724883:bws <- get_bws(dplyr::bind_rows(cnr.ss, faire.wt.ssPool), 'id')
1695673769909:deg.bws <- get_bws(faire.ss %>% dplyr::filter(experiment == 'osaGFP deGrad FAIRE'), 'id')
1695673775024:#TODO move data to main project directory and fix path
1695673775038:#TODO merge reps?
1695673775052:#k27ac.bw <- rtracklayer::import.bw('~/mckay/h3k27ac_cnr/bigwig/yw-3LW-wing-ak27ac-pel-Rep1_dm6_trim_q5_dupsRemoved_allFrags_rpgcNorm_zNorm.bw')
1695673775064:#TODO put these notes in better place"
1695673775079:## K27ac data- yeast spikein norm pel data is generally lower in rep2 than rep1, this is not seen in znorm or drosYak norm data
1695673775093:## drosYak norm signal is "low" as in the absolute values are usually < 1, but the normalization between samples looks good, and the signal to noise still looks fine, not appreciably better or worse that znorm
1695673775107:## using pellet because only have 2 reps of pel, only 1 of sup - the sup rep looks really good though I think
1695673775121:## using large fragments only because all fractions/reps show poor signal in <120 bp frag split
1695673775144:#k27ac.bw <- rtracklayer::import.bw('~/mckay/H3K27ac_CnR/BigWig/yw-3LW-wing-ak27ac-pel-MEAN_dm6_trim_q5_dupsRemoved_150to700_rpgcNorm_zNorm.bw')
1695673775159:k27ac.1.bw <- rtracklayer::import.bw('BigWig/yw-3LW-wing-ak27ac-pel-Rep1_dm6_trim_q5_dupsRemoved_150to700_rpgcNorm_zNorm.bw')
1695673775717:k27ac.2.bw <- rtracklayer::import.bw('BigWig/yw-3LW-wing-ak27ac-pel-Rep2_dm6_trim_q5_dupsRemoved_150to700_rpgcNorm_zNorm.bw')
1695673776574:## functions
1695673776598:plot.frac <- function(x) {
1695673776613:lapply(unique(x$change), function(i) {
1695673776627:x %>%
1695673776641:dplyr::filter(change == i) %>%
1695673776657:ggplot(aes(fraction, change, fill = Osa.Bound)) +
1695673776671:geom_bar(stat = 'identity', width = 1) +
1695673776685:geom_text(aes(label = per), position = position_fill(vjust = 0.6),  size = 7, fontface = "bold") +
1695673776701:#geom_text(aes(label = per, position = position_stack(vjust = 0.5))) +
1695673776716:scale_fill_manual(values = c('grey80','#41f0ad'), name = 'Osa Bound') +
1695673776730:scale_y_discrete(position = 'right', ) +
1695673776751:xlab('Percent Bound by Osa') +
1695673776767:theme(legend.position = 'top',
1695673776781:legend.key.size = unit(1, 'cm'),
1695673776795:legend.text = element_text(size = 15),
1695673776808:legend.title = element_text(size = 20),
1695673776821:panel.background = element_blank(),
1695673776834:axis.text = element_blank(),
1695673776848:axis.title = element_blank(),
1695673776862:axis.ticks = element_blank(),
1695673776875:#           axis.text.y = element_text(size = 12),
1695673776890:panel.grid = element_blank()) +
1695673776904:NULL
1695673776919:fn = paste0('rPlots/3E_',i,'.png')
1695673776933:ggsave(fn, width = 6, height = 1.5, units = 'in', dpi = 300 )
1695673776948:})
1695673776961:}
1695673776985:## .bed out
1695673776998:osaPeaks %>%
1695673777013:data.frame() %>%
1695673777029:dplyr::select(seqnames, start, end) %>%
1695673777044:write.table('osaPeaks.bed', quote = F, col.names = F, row.names = F, sep = '\t')
1695673777148:osaPeaks.full %>%
1695673777162:data.frame() %>%
1695673777177:dplyr::select(seqnames, start, end) %>%
1695673777192:write.table('osaPeaks-full.bed', quote = F, col.names = F, row.names = F, sep = '\t')
1695673777335:peaks$cnr.df %>%
1695673777350:data.frame() %>%
1695673777363:dplyr::filter(yw.cnr) %>%
1695673777378:dplyr::select(seqnames, start, end) %>%
1695673777392:write.table('controlPeaks.bed', quote = F, col.names = F, row.names = F, sep = '\t')
1695673777431:#fairePeaks.osaDependent %>%
1695673777445:#  data.frame() %>%
1695673777476:#  dplyr::select(seqnames, start, end) %>%
1695673777507:#  write.table('osaDependent.bed', quote = F, col.names = F, row.names = F, sep = '\t')
1695673777535:#
1695673777551:#fairePeaks.osaEctopic %>%
1695673777564:#  data.frame() %>%
1695673777580:#  dplyr::select(seqnames, start, end) %>%
1695673777593:#  write.table('osaEctopic.bed', quote = F, col.names = F, row.names = F, sep = '\t')
1695673777610:#
1695673777647:## gviz
1695673777661:track.colors <- c("grey40","#D01C8B", "grey40","#D01C8B")
1695673777684:cnr.ss.browser <- cnr.ss %>% dplyr::mutate(color = track.colors)
1695673777736:mckay_enhancers <- read.table('bed/cloned_enhancers_dm6.bed', sep = '\t')
1695673777761:colnames(mckay_enhancers) <- c('seqnames', 'start','end','name')
1695673777780:mckay_enhancers %<>% GRanges()
1695673777836:mckay_enhancertrack <- Gviz::AnnotationTrack(range = mckay_enhancers,
1695673777850:genome = 'dm6',
1695673777863:fill = 'black',
1695673777878:col = 'transparent',
1695673777894:background.title = 'white',
1695673777908:showTitle = F)
1695673778303:Delta_enhancers <- read.table('bed/cloned_Delta_enhancers.bed', sep = '\t')
1695673778327:espl_enhancers <- read.table('bed/espl_enhancers-merge.bed', sep = '\t')
1695673778355:enhancers <- dplyr::bind_rows(Delta_enhancers, espl_enhancers)
1695673778372:colnames(enhancers) <- c('seqnames', 'start','end','name')
1695673778388:enhancer.ranges <- GRanges(enhancers)
1695673778448:enhancertrack <- Gviz::AnnotationTrack(range = enhancer.ranges,
1695673778462:genome = 'dm6',
1695673778477:fill = '#18c708',
1695673778489:col = 'transparent',
1695673778501:background.title = 'white',
1695673778514:showTitle = F)
1695673778743:dlpouch.track <- Gviz::AnnotationTrack(range = dlpouch,
1695673778757:genome = 'dm6',
1695673778770:fill = '#18c708',
1695673778783:col = 'transparent',
1695673778797:background.title = 'white',
1695673779201:showTitle = F)
1695673779379:genetrack <- Gviz::GeneRegionTrack(range = dm6.TxDb, fill = 'grey80', showTitle = F, background.title = 'white', stacking = 'squish')
1695673784324:peakTrack <- Gviz::AnnotationTrack(range = osaPeaks.full,
1695673784337:genome = 'dm6',
1695673784349:fill = '#D01C8B',
1695673784361:col = 'transparent',
1695673784374:background.title = 'white',
1695673784386:showTitle = F )
1695673784826:#TODO - is osa.dependent annotation correct? using diffbind?
1695673784839:osaDep.peakTrack <- Gviz::AnnotationTrack(range = GRanges(peaks$faire.osaDeg.df %>% dplyr::filter(osa.dependent)),
1695673784852:#osaDep.peakTrack <- Gviz::AnnotationTrack(range = osaDeg.osaDep,
1695673784864:genome = 'dm6',
1695673784877:fill = '#469ae8',
1695673784891:col = 'transparent',
1695673784904:background.title = 'white',
1695673784916:showTitle = F)
1695673785194:hairless_peaks <- read.table('bed/hairless-dm6.bed', col.names = c('seqnames', 'start', 'end')) %>% GRanges()
1695673785263:hTrack <- Gviz::AnnotationTrack(range = hairless_peaks,
1695673785277:genome = 'dm6',
1695673785290:fill = '#2ad4c3',
1695673785303:col = 'transparent',
1695673785316:background.title = 'white',
1695673785329:showTitle = F)
1695673785707:spacer <- Gviz::AnnotationTrack(background.title = 'white')
1695673786163:## matrices for heatmaps
1695673787136:mats <- purrr::map(bws, ~{
1695673787151:normalizeToMatrix(., osaPeaks, value_column = 'score', keep = c(0.01, 0.99), extend = 2000)
1695673787166:})
1695673888609:names(mats) <- names(bws)
1695742715604:faire.osaDeg.byGrp
1695742736351:osaDep.anno
1695742878337:osaPeaks.enhancers.full.bed
1695742928475:osaDep.anno %>%
1695742928487:dplyr::mutate(osaPeak = ifelse(GRanges(.) %over% osaPeaks.full, T, F))
1695743004494:osaDeg.qF %>%
1695743004506:data.frame() %>%
1695743004517:ggplot(aes(log2FoldChange, padj)) +
1695743004527:geom_point(color = ifelse(data.frame(osaDeg.qF)$padj <= 0.1, 'red','black')) +
1695743004538:theme(axis.title = element_text(size = 12),
1695743004550:axis.text = element_text(size = 12))
1695743095911:osaDeg.qF %>%
1695743095924:dplyr::mutate(osaPeak = ifelse(. %over% osaPeaks.full, T, F)) %>%
1695743097265:data.frame() %>%
1695743097286:ggplot(aes(log2FoldChange, padj)) +
1695743097297:geom_point(color = ifelse(data.frame(osaDeg.qF)$padj <= 0.1, 'red','black')) +
1695743097309:geom_point(color = ifelse(.$osaPeak, 'blue','black')) +
1695743097320:theme(axis.title = element_text(size = 12),
1695743097332:axis.text = element_text(size = 12))
1695743122611:osaDeg.qF %>%
1695743122623:dplyr::mutate(osaPeak = ifelse(GRanges(.) %over% osaPeaks.full, T, F)) %>%
1695743122635:data.frame() %>%
1695743122646:ggplot(aes(log2FoldChange, padj)) +
1695743122658:geom_point(color = ifelse(data.frame(osaDeg.qF)$padj <= 0.1, 'red','black')) +
1695743122671:geom_point(color = ifelse(.$osaPeak, 'blue','black')) +
1695743122684:theme(axis.title = element_text(size = 12),
1695743122695:axis.text = element_text(size = 12))
1695743163415:temp <- osaDeg.qF %>%
1695743163428:dplyr::mutate(osaPeak = ifelse(GRanges(.) %over% osaPeaks.full, T, F)) %>%
1695743163439:data.frame()
1695743171754:temp %>%
1695743171767:ggplot(aes(log2FoldChange, padj)) +
1695743171779:geom_point(color = ifelse(data.frame(osaDeg.qF)$padj <= 0.1, 'red','black')) +
1695743171791:geom_point(color = ifelse(.$osaPeak, 'blue','black')) +
1695743171803:theme(axis.title = element_text(size = 12),
1695743171815:axis.text = element_text(size = 12))
1695743177001:temp %>%
1695743177013:ggplot(aes(log2FoldChange, padj)) +
1695743177024:geom_point(color = ifelse(data.frame(osaDeg.qF)$padj <= 0.1, 'red','black')) +
1695743177036:geom_point(color = ifelse(temp$osaPeak, 'blue','black')) +
1695743177047:theme(axis.title = element_text(size = 12),
1695743177059:axis.text = element_text(size = 12))
1695743195071:temp %>%
1695743195082:ggplot(aes(log2FoldChange, padj)) +
1695743195094:geom_point(color = ifelse(data.frame(osaDeg.qF)$padj <= 0.1, 'red','black')) +
1695743195105:geom_point(color = ifelse(temp$osaPeak, 'red','black')) +
1695743195118:theme(axis.title = element_text(size = 12),
1695743195130:axis.text = element_text(size = 12))
1695743221539:temp %>%
1695743221553:ggplot(aes(log2FoldChange, padj)) +
1695743221564:geom_point(color = ifelse(data.frame(osaDeg.qF)$padj <= 0.1, 'red','black')) +
1695743221599:geom_point(color = ifelse(temp$osaPeak, 'red',NA)) +
1695743221614:theme(axis.title = element_text(size = 12),
1695743221625:axis.text = element_text(size = 12))
1695743233156:temp %>%
1695743233169:ggplot(aes(log2FoldChange, padj)) +
1695743233181:geom_point(color = ifelse(data.frame(osaDeg.qF)$padj <= 0.1, 'red','black')) +
1695743233193:geom_point(color = ifelse(temp$osaPeak, 'green',NA)) +
1695743233204:theme(axis.title = element_text(size = 12),
1695743233214:axis.text = element_text(size = 12))
1695743274025:temp
1695743411646:temp %>%
1695743411660:dplyr::select(osaDeg.control, osaDeg, osaPeak)
1695743419960:temp %>%
1695743419974:dplyr::select(osaDeg.control, osaDeg, osaPeak) %>%
1695743419987:dplyr::tally()
1695743431085:temp %>%
1695743431100:dplyr::select(osaDeg.control, osaDeg, osaPeak) %>%
1695743431111:dplyr::group_by(osaPeak) %>%
1695743431122:dplyr::tally()
1695743444165:temp %>%
1695743444177:dplyr::select(osaDeg.control, osaDeg, osaPeak) %>%
1695743444189:dplyr::group_by(osaPeak, osaDeg.control, osaDeg) %>%
1695743444201:dplyr::tally()
1695743467899:temp %>%
1695743467912:dplyr::select(osaDeg.control, osaDeg, osaPeak) %>%
1695743467923:dplyr::group_by(osaPeak, osaDeg.control, osaDeg) %>%
1695743467934:dplyr::tally() %>%
1695743467947:dplyr::mutate(fract = n / sum(n))
1695743484215:temp %>%
1695743484227:dplyr::select(osaDeg.control, osaDeg, osaPeak) %>%
1695743484239:dplyr::group_by(osaPeak, osaDeg.control, osaDeg) %>%
1695743484250:dplyr::tally() %>%
1695743484261:dplyr::summarise(fract = n / sum(n))
1695743493993:temp %>%
1695743494005:dplyr::select(osaDeg.control, osaDeg, osaPeak) %>%
1695743494017:dplyr::group_by(osaPeak, osaDeg.control, osaDeg) %>%
1695743494029:#  dplyr::tally() %>%
1695743494042:dplyr::summarise(fract = n / sum(n))
1695743507174:temp %>%
1695743507186:dplyr::select(osaDeg.control, osaDeg, osaPeak) %>%
1695743507199:dplyr::group_by(osaPeak, osaDeg.control, osaDeg) %>%
1695743507210:dplyr::tally() %>%
1695743507221:dplyr::mutate(fract = n / sum(n))
1695743523286:temp %>%
1695743523297:dplyr::select(osaDeg.control, osaDeg, osaPeak) %>%
1695743523309:dplyr::group_by(osaPeak, osaDeg.control, osaDeg) %>%
1695743523320:dplyr::tally() %>%
1695743523332:dplyr::ungroup() %>%
1695743523344:dplyr::mutate(fract = n / sum(n))
1695744440945:temp
1695744650396:temp %>%
1695744650412:dplyr::mutate(dep = ifelse(log2FoldChange <= -1), 'Osa-Dependent', 'Osa-Independent') %>%
1695744650425:dplyr::group_by(dep, osaPeak) %>%
1695744650439:dplyr::tally() %>%
1695744650453:dplyr::ungroup() %>%
1695744650489:dplyr::mutate(fract = n / sum(n))
1695744682808:temp %>%
1695744682821:dplyr::mutate(dep = ifelse(log2FoldChange <= -1, 'Osa-Dependent', 'Osa-Independent')) %>%
1695744682834:dplyr::group_by(dep, osaPeak) %>%
1695744682846:dplyr::tally() %>%
1695744682857:dplyr::ungroup() %>%
1695744682869:dplyr::mutate(fract = n / sum(n))
1695744779651:temp$log2FoldChange %>%
1695744779663:dplyr::filter(is.na())
1695744796611:temp %>%
1695744796624:dplyr::filter(is.na(log2FoldChange))
1695744862673:temp %>%
1695744862704:dplyr::group_by(seqnames) %>%
1695744862720:dplyr::tally()
1695746653881:library(magrittr)
1695746653900:library(ggplot2)
1695746653910:library(GenomicRanges)
1695746653918:library(org.Dm.eg.db)
1695746653927:library(AnnotationDbi)
1695746653936:message('sourcing utilities...')
1695746653965:source('scripts/GRanges_methods.R')
1695746654022:source('scripts/peakUtils.R') #TODO move/rewrite getPeakData from NystLib to utils.R
1695746654064:source('scripts/utils.R')
1695746654285:load('rData/sheets.rda')
1695746660812:dm6 <- BSgenome.Dmelanogaster.UCSC.dm6::BSgenome.Dmelanogaster.UCSC.dm6
1695746662401:dm6.TxDb <- TxDb.Dmelanogaster.UCSC.dm6.ensGene::TxDb.Dmelanogaster.UCSC.dm6.ensGene
1695746663837:#make 1kb bin whole genomic granges
1695746663845:dm6.500bp <- purrr::map(seqnames(dm6), function(x) {
1695746663853:if(x %in% c('chr2L', 'chr2R', 'chr3L', 'chr3R', 'chrX')){
1695746663860:lng <- length(dm6[[x]])
1695746663867:seqnames <- rep_len(x, lng/500)
1695746663875:start <- seq(0, lng-500, by = 500)
1695746663881:end <- seq(499, lng, by = 500)
1695746663889:df <- data.frame(seqnames, start, end)
1695746663895:}
1695746663904:}) %>% dplyr::bind_rows() %>% dplyr::mutate(assay = '500bp background')
1695746670677:##### load peaks #####
1695746670685:message('loading peak lists...')
1695746673202:### get CUT&RUN peaks
1695746673211:#TODO - error here with getPeakData when running from command line?
1695746673220:cnr.peaks <- getPeakData(cnr.ss, by = 'id', narrowPeak_colname = 'peak_allFrags')
1695747350832:cnr.byID <- cnr.peaks %>% GRanges() %>% split(., mcols(.)$id)
1695747356846:cnr.byGrp <- cnr.peaks %>% GRanges() %>% split(., mcols(.)$grp)
1695747359488:# just using rep 1 coordinates for now
1695747359498:cnr.summits.1 <- read.table('Peaks/osaGFP-3LW-wing-aGFP-CnR-sup-rep1_dm6_trim_q5_dupsRemoved_allFrags_summits.bed', sep = '\t') %>%
1695747359506:.[,1:3]
1695747360931:colnames(cnr.summits.1) <- c('seqnames', 'start','end')
1695747362832:cnr.summits <- GRanges(cnr.summits.1)
1695747365985:#filter cnr peaks by q val >= 10 and called in each replicate
1695747365995:#TODO - decide on filter cutoff -- 75% was pretty strict, only ~1000 osa specific peaks vs previous approach with no filtering that resulting in ~2700 specific peaks
1695747366004:cnr.byGrp <- lapply(cnr.byGrp, function(x) grp_qFilter(x, quantile = 0.5, operation = 'subsetByOverlaps'))
1695747367959:#make union cnr peak list
1695747367966:cnr.union <- cnr.byID %>%
1695747367974:unlist() %>%
1695747367982:reduce()
1695747373470:### get FAIRE peaks
1695747373477:faire.ss.WT <- faire.ss[faire.ss$experiment == 'WT FAIRE Wing Timecourse',]
1695747375579:faire.ss.osaDeg <- faire.ss[faire.ss$experiment == 'osaGFP deGrad FAIRE',]
1695747377504:faire.wt.peaks <- getPeakData(faire.ss.WT, by = 'id', narrowPeak_colname = 'peaks')
1695747397975:faire.wt.byID <- faire.wt.peaks %>% GRanges() %>% split(., mcols(.)$id) #split by replicates
1695747399691:faire.wt.byGrp <- faire.wt.peaks %>% GRanges() %>% split(., mcols(.)$grp) #split by pooled replicates
1695747457421:faire.osaDeg.peaks <- getPeakData(faire.ss.osaDeg, by = 'id', narrowPeak_colname = 'peaks')
1695747460378:faire.osaDeg.byID <- faire.osaDeg.peaks %>% GRanges() %>% split(., mcols(.)$id) #split by replicates
1695747569185:faire.osaDeg.byGrp <- faire.osaDeg.peaks %>% GRanges() %>% split(., mcols(.)$grp) #split by pooled replicates
1695747571845:#filter by replicate specific qValue and only peaks that intersect between replicates
1695747571852:faire.wt.byGrp <- lapply(faire.wt.byGrp, function(x) grp_qFilter(x, quantile = 0.75, operation = 'subsetByOverlaps', with_reduce = T))
1695747582773:faire.osaDeg.byGrp <- lapply(faire.osaDeg.byGrp, function(x) grp_qFilter(x, quantile = 0.5, operation = 'subsetByOverlaps', with_reduce = T))
1695747584324:faire.wt.3LW.summits <- read.table('Peaks/wt_3LW_dm6_trim_q5_sorted_dupsRemoved_POOLED_summits.bed', sep = '\t') %>%
1695747584331:.[,1:3]
1695747585212:colnames(faire.wt.3LW.summits) <- c('seqnames', 'start', 'end')
1695747587060:faire.wt.3LW.summits <- subsetByOverlaps(GRanges(faire.wt.3LW.summits), faire.wt.byGrp$wt.3LW)
1695747588257:#make union FAIRE peak list - includes any/all peak calls for all wt reps
1695747588265:faire.wt.union <- faire.wt.byID %>%
1695747588272:unlist() %>%
1695747588280:reduce()
1695747590495:faire.osaDeg.union <- faire.osaDeg.byID %>%
1695747590502:unlist() %>%
1695747590508:reduce()
1695747592344:### get Rotund peaks
1695747592352:rn.ss <- read.csv('sheets/Rotund-sampleSheet.tsv', sep = '\t')
1695747593820:rn.peak <- getPeakData(rn.ss, narrowPeak_colname = 'peakFile', by = 'grp')
1695747621471:rn.ss
1695747972217:rn.peak <- getPeakData(rn.ss, narrowPeak_colname = 'peakFile', by = 'grp')
1695747976539:rn.peak <- getPeakData(rn.ss, narrowPeak_colname = 'peakFile', by = 'grp')
1695747982481:### get Rotund peaks
1695747982490:rn.ss <- read.csv('sheets/Rotund-sampleSheet.tsv', sep = '\t')
1695747983755:rn.peak <- getPeakData(rn.ss, narrowPeak_colname = 'peakFile', by = 'grp')
1695748031530:### get Rotund peaks
1695748031537:rn.ss <- read.csv('sheets/Rotund-sampleSheet.tsv', sep = '\t')
1695748032475:rn.peak <- getPeakData(rn.ss, narrowPeak_colname = 'peakFile', by = 'grp')
1695748036474:rn.peak
