scale_fill_manual(values = c('#3494CE', 'grey60')) +
#  scale_color_manual(values = c('#DE4A47', '#9CBD36')) +
ylab('mean log2(zScore/zScore[3LW])') +
facet_wrap(~km.cluster, ncol = 2, nrow = 4)
ggsave('rPlots/3-draft_fraction_cluster.png', width = 3, height = 5)
#     ggplot(aes(stage,km.cluster, fill = mean))+
#geom_tile() +
plot.df %>%
dplyr::mutate(group = ifelse(km.cluster != 4, 'dynamic', 'static')) %>%
ggplot(aes(stage, y = mean, group = km.cluster))+
geom_ribbon(aes(ymin = mean - sd, ymax = mean+sd, x = stage, fill = group),
alpha = 0.3) +
geom_line() +
scale_fill_manual(values = c('#3494CE', 'grey60')) +
#  scale_color_manual(values = c('#DE4A47', '#9CBD36')) +
ylab('mean log2(zScore/zScore[3LW])') +
facet_wrap(~km.cluster, ncol = 2, nrow = 4) +
theme(legend.position = 'none')
ggsave('rPlots/3-draft_fraction_cluster.png', width = 3, height = 5)
#     ggplot(aes(stage,km.cluster, fill = mean))+
#geom_tile() +
plot.df %>%
dplyr::mutate(group = ifelse(km.cluster != 4, 'dynamic', 'static')) %>%
ggplot(aes(stage, y = mean, group = km.cluster))+
geom_ribbon(aes(ymin = mean - sd, ymax = mean+sd, x = stage, fill = group),
alpha = 0.3) +
geom_line() +
scale_fill_manual(values = c('#3494CE', 'grey40')) +
#  scale_color_manual(values = c('#DE4A47', '#9CBD36')) +
ylab('mean log2(zScore/zScore[3LW])') +
facet_wrap(~km.cluster, ncol = 2, nrow = 4) +
theme(legend.position = 'none')
ggsave('rPlots/3-draft_fraction_cluster.png', width = 3, height = 5)
#     ggplot(aes(stage,km.cluster, fill = mean))+
#geom_tile() +
plot.df %>%
dplyr::mutate(group = ifelse(km.cluster != 4, 'dynamic', 'static')) %>%
ggplot(aes(stage, y = mean, group = km.cluster))+
geom_ribbon(aes(ymin = mean - sd, ymax = mean+sd, x = stage, fill = group),
alpha = 0.3) +
geom_line() +
scale_fill_manual(values = c('#46AEDB', 'grey40')) +
#  scale_color_manual(values = c('#DE4A47', '#9CBD36')) +
ylab('mean log2(zScore/zScore[3LW])') +
facet_wrap(~km.cluster, ncol = 2, nrow = 4) +
theme(legend.position = 'none')
#     ggplot(aes(stage,km.cluster, fill = mean))+
#geom_tile() +
plot.df %>%
dplyr::mutate(group = ifelse(km.cluster != 4, 'dynamic', 'static')) %>%
ggplot(aes(stage, y = mean, group = km.cluster))+
geom_ribbon(aes(ymin = mean - sd, ymax = mean+sd, x = stage, fill = group),
alpha = 0.3) +
geom_line() +
scale_fill_manual(values = c('#46AEDB', 'grey40')) +
#  scale_color_manual(values = c('#DE4A47', '#9CBD36')) +
ylab('mean log2(zScore/zScore[3LW])') +
facet_wrap(~km.cluster, ncol = 2, nrow = 4) +
theme(legend.position = 'none')
ggsave('rPlots/3-draft_fraction_cluster.png', width = 3, height = 5)
#     ggplot(aes(stage,km.cluster, fill = mean))+
#geom_tile() +
plot.df %>%
dplyr::mutate(group = ifelse(km.cluster != 4, 'dynamic', 'static')) %>%
ggplot(aes(stage, y = mean, group = km.cluster))+
geom_ribbon(aes(ymin = mean - sd, ymax = mean+sd, x = stage, fill = group),
alpha = 0.5) +
geom_line() +
scale_fill_manual(values = c('#46AEDB', 'grey40')) +
#  scale_color_manual(values = c('#DE4A47', '#9CBD36')) +
ylab('mean log2(zScore/zScore[3LW])') +
facet_wrap(~km.cluster, ncol = 2, nrow = 4) +
theme(legend.position = 'none')
ggsave('rPlots/3-draft_fraction_cluster.png', width = 3, height = 5)
plot.df %>%
dplyr::ungroup() %>%
#dplyr::mutate(km.cluster = forcats::fct_rev(km.cluster)) %>%
dplyr::select(km.cluster, n, per) %>%
dplyr::distinct() %>%
dplyr::mutate(group = ifelse(km.cluster == '4', 'Static', 'Dynamic')) %>%
#dplyr::group_by(group)
#dplyr::summarise(sum = sum(per),
#                 n = n())
ggplot(aes('', y = per, fill = km.cluster, group = km.cluster)) +
geom_bar(stat = 'identity', position = 'stack', alpha = 0.5) +
#coord_polar(theta = 'y') +
geom_text(aes(y = per, x = 1.2, vjust = 1.2, label = paste0('(',round(per, digits = 1),'%)')), position = 'stack') +
geom_text(aes(y = per,  x = 0.8, vjust = 1.2, label = paste0('n=',n)), position = 'stack') +
scale_fill_manual(values = c(blues, 'grey60')) +
theme(axis.text = element_blank(),
axis.title = element_blank(),
axis.ticks = element_blank(),
legend.title = element_blank(),
legend.key.size = unit(0.5, 'cm'),
legend.position = 'bottom',
legend.direction = "horizontal",
#strip.background = element_blank(),
panel.background = element_blank(),
strip.text.x = element_blank(),
#panel.spacing.y = unit(1, 'lines'))
)
ggsave('rPlots/3-draft_fraction_cluster-pie.png', width = 2, height = 6)
plot.df %>%
dplyr::ungroup() %>%
#dplyr::mutate(km.cluster = forcats::fct_rev(km.cluster)) %>%
dplyr::select(km.cluster, n, per) %>%
dplyr::distinct() %>%
dplyr::mutate(group = ifelse(km.cluster == '4', 'Static', 'Dynamic')) %>%
#dplyr::group_by(group)
#dplyr::summarise(sum = sum(per),
#                 n = n())
ggplot(aes('', y = per, fill = km.cluster, group = km.cluster)) +
geom_bar(stat = 'identity', position = 'stack', alpha = 0.8) +
#coord_polar(theta = 'y') +
geom_text(aes(y = per, x = 1.2, vjust = 1.2, label = paste0('(',round(per, digits = 1),'%)')), position = 'stack') +
geom_text(aes(y = per,  x = 0.8, vjust = 1.2, label = paste0('n=',n)), position = 'stack') +
scale_fill_manual(values = c(blues, 'grey60')) +
theme(axis.text = element_blank(),
axis.title = element_blank(),
axis.ticks = element_blank(),
legend.title = element_blank(),
legend.key.size = unit(0.5, 'cm'),
legend.position = 'bottom',
legend.direction = "horizontal",
#strip.background = element_blank(),
panel.background = element_blank(),
strip.text.x = element_blank(),
#panel.spacing.y = unit(1, 'lines'))
)
ggsave('rPlots/3-draft_fraction_cluster-pie.png', width = 2, height = 6)
plot.df %>%
dplyr::ungroup() %>%
#dplyr::mutate(km.cluster = forcats::fct_rev(km.cluster)) %>%
dplyr::select(km.cluster, n, per) %>%
dplyr::distinct() %>%
dplyr::mutate(group = ifelse(km.cluster == '4', 'Static', 'Dynamic')) %>%
#dplyr::group_by(group)
#dplyr::summarise(sum = sum(per),
#                 n = n())
ggplot(aes('', y = per, fill = km.cluster, group = km.cluster)) +
geom_bar(stat = 'identity', position = 'stack', alpha = 0.8) +
#coord_polar(theta = 'y') +
geom_text(aes(y = per, x = 1.2, vjust = 1.2, label = paste0('(',round(per, digits = 1),'%)')), position = 'stack') +
geom_text(aes(y = per,  x = 0.8, vjust = 1.2, label = paste0('n=',n)), position = 'stack') +
scale_fill_manual(values = c(blues, 'grey60')) +
theme(axis.text = element_blank(),
axis.title = element_blank(),
axis.ticks = element_blank(),
legend.title = element_blank(),
legend.key.size = unit(0.5, 'cm'),
legend.position = 'none',
legend.direction = "horizontal",
#strip.background = element_blank(),
panel.background = element_blank(),
strip.text.x = element_blank(),
#panel.spacing.y = unit(1, 'lines'))
)
ggsave('rPlots/3-draft_fraction_cluster-pie.png', width = 2, height = 6)
plot.df %>%
dplyr::ungroup() %>%
#dplyr::mutate(km.cluster = forcats::fct_rev(km.cluster)) %>%
dplyr::select(km.cluster, n, per) %>%
dplyr::distinct() %>%
dplyr::mutate(group = ifelse(km.cluster == '4', 'Static', 'Dynamic')) %>%
#dplyr::group_by(group)
#dplyr::summarise(sum = sum(per),
#                 n = n())
ggplot(aes('', y = per, fill = km.cluster, group = km.cluster)) +
geom_bar(stat = 'identity', position = 'stack', alpha = 0.8, color = 'black') +
#coord_polar(theta = 'y') +
geom_text(aes(y = per, x = 1.2, vjust = 1.2, label = paste0('(',round(per, digits = 1),'%)')), position = 'stack') +
geom_text(aes(y = per,  x = 0.8, vjust = 1.2, label = paste0('n=',n)), position = 'stack') +
scale_fill_manual(values = c(blues, 'grey60')) +
theme(axis.text = element_blank(),
axis.title = element_blank(),
axis.ticks = element_blank(),
legend.title = element_blank(),
legend.key.size = unit(0.5, 'cm'),
legend.position = 'none',
legend.direction = "horizontal",
#strip.background = element_blank(),
panel.background = element_blank(),
strip.text.x = element_blank(),
#panel.spacing.y = unit(1, 'lines'))
)
ggsave('rPlots/3-draft_fraction_cluster-pie.png', width = 2, height = 6)
plot.df %>%
dplyr::ungroup() %>%
#dplyr::mutate(km.cluster = forcats::fct_rev(km.cluster)) %>%
dplyr::select(km.cluster, n, per) %>%
dplyr::distinct() %>%
dplyr::mutate(group = ifelse(km.cluster == '4', 'Static', 'Dynamic')) %>%
#dplyr::group_by(group)
#dplyr::summarise(sum = sum(per),
#                 n = n())
ggplot(aes('', y = per, fill = km.cluster, group = km.cluster)) +
geom_bar(stat = 'identity', position = 'stack', alpha = 0.8, color = 'black') +
#coord_polar(theta = 'y') +
geom_text(aes(y = per, x = 1.2, vjust = 1.3, label = paste0('(',round(per, digits = 1),'%)')), position = 'stack') +
geom_text(aes(y = per,  x = 0.8, vjust = 1.3, label = paste0('n=',n)), position = 'stack') +
scale_fill_manual(values = c(blues, 'grey60')) +
theme(axis.text = element_blank(),
axis.title = element_blank(),
axis.ticks = element_blank(),
legend.title = element_blank(),
legend.key.size = unit(0.5, 'cm'),
legend.position = 'none',
legend.direction = "horizontal",
#strip.background = element_blank(),
panel.background = element_blank(),
strip.text.x = element_blank(),
#panel.spacing.y = unit(1, 'lines'))
)
ggsave('rPlots/3-draft_fraction_cluster-pie.png', width = 2, height = 6)
plot.df %>%
dplyr::ungroup() %>%
#dplyr::mutate(km.cluster = forcats::fct_rev(km.cluster)) %>%
dplyr::select(km.cluster, n, per) %>%
dplyr::distinct() %>%
dplyr::mutate(group = ifelse(km.cluster == '4', 'Static', 'Dynamic')) %>%
#dplyr::group_by(group)
#dplyr::summarise(sum = sum(per),
#                 n = n())
ggplot(aes('', y = per, fill = km.cluster, group = km.cluster)) +
geom_bar(stat = 'identity', position = 'stack', alpha = 0.8, color = 'black') +
#coord_polar(theta = 'y') +
geom_text(aes(y = per, x = 1.2, vjust = 1.4, label = paste0('(',round(per, digits = 1),'%)')), position = 'stack') +
geom_text(aes(y = per,  x = 0.8, vjust = 1.4, label = paste0('n=',n)), position = 'stack') +
scale_fill_manual(values = c(blues, 'grey60')) +
theme(axis.text = element_blank(),
axis.title = element_blank(),
axis.ticks = element_blank(),
legend.title = element_blank(),
legend.key.size = unit(0.5, 'cm'),
legend.position = 'none',
legend.direction = "horizontal",
#strip.background = element_blank(),
panel.background = element_blank(),
strip.text.x = element_blank(),
#panel.spacing.y = unit(1, 'lines'))
)
ggsave('rPlots/3-draft_fraction_cluster-pie.png', width = 2, height = 6)
plot.df %>%
dplyr::ungroup() %>%
#dplyr::mutate(km.cluster = forcats::fct_rev(km.cluster)) %>%
dplyr::select(km.cluster, n, per) %>%
dplyr::distinct() %>%
dplyr::mutate(group = ifelse(km.cluster == '4', 'Static', 'Dynamic')) %>%
#dplyr::group_by(group)
#dplyr::summarise(sum = sum(per),
#                 n = n())
ggplot(aes('', y = per, fill = km.cluster, group = km.cluster)) +
geom_bar(stat = 'identity', position = 'stack', alpha = 0.8, color = 'black') +
#coord_polar(theta = 'y') +
geom_text(aes(y = per, x = 1.2, vjust = 1.5, label = paste0('(',round(per, digits = 1),'%)')), position = 'stack') +
geom_text(aes(y = per,  x = 0.8, vjust = 1.5, label = paste0('n=',n)), position = 'stack') +
scale_fill_manual(values = c(blues, 'grey60')) +
theme(axis.text = element_blank(),
axis.title = element_blank(),
axis.ticks = element_blank(),
legend.title = element_blank(),
legend.key.size = unit(0.5, 'cm'),
legend.position = 'none',
legend.direction = "horizontal",
#strip.background = element_blank(),
panel.background = element_blank(),
strip.text.x = element_blank(),
#panel.spacing.y = unit(1, 'lines'))
)
ggsave('rPlots/3-draft_fraction_cluster-pie.png', width = 2, height = 6)
plot.df %>%
dplyr::ungroup() %>%
#dplyr::mutate(km.cluster = forcats::fct_rev(km.cluster)) %>%
dplyr::select(km.cluster, n, per) %>%
dplyr::distinct() %>%
dplyr::mutate(group = ifelse(km.cluster == '4', 'Static', 'Dynamic')) %>%
#dplyr::group_by(group)
#dplyr::summarise(sum = sum(per),
#                 n = n())
ggplot(aes('', y = per, fill = km.cluster, group = km.cluster)) +
geom_bar(stat = 'identity', position = 'stack', alpha = 0.8, color = 'black') +
#coord_polar(theta = 'y') +
geom_text(aes(y = per, x = 1.2, vjust = 1.5, label = paste0('(',round(per, digits = 1),'%)')), position = 'stack') +
geom_text(aes(y = per,  x = 0.7, vjust = 1.5, label = paste0('n=',n)), position = 'stack') +
scale_fill_manual(values = c(blues, 'grey60')) +
theme(axis.text = element_blank(),
axis.title = element_blank(),
axis.ticks = element_blank(),
legend.title = element_blank(),
legend.key.size = unit(0.5, 'cm'),
legend.position = 'none',
legend.direction = "horizontal",
#strip.background = element_blank(),
panel.background = element_blank(),
strip.text.x = element_blank(),
#panel.spacing.y = unit(1, 'lines'))
)
ggsave('rPlots/3-draft_fraction_cluster-pie.png', width = 2, height = 6)
plot.df %>%
dplyr::ungroup() %>%
#dplyr::mutate(km.cluster = forcats::fct_rev(km.cluster)) %>%
dplyr::select(km.cluster, n, per) %>%
dplyr::distinct() %>%
dplyr::mutate(group = ifelse(km.cluster == '4', 'Static', 'Dynamic')) %>%
#dplyr::group_by(group)
#dplyr::summarise(sum = sum(per),
#                 n = n())
ggplot(aes('', y = per, fill = km.cluster, group = km.cluster)) +
geom_bar(stat = 'identity', position = 'stack', alpha = 0.8, color = 'black') +
#coord_polar(theta = 'y') +
geom_text(aes(y = per, x = 1.2, vjust = 1.5, label = paste0('(',round(per, digits = 1),'%)')), position = 'stack') +
geom_text(aes(y = per,  x = 0.75, vjust = 1.5, label = paste0('n=',n)), position = 'stack') +
scale_fill_manual(values = c(blues, 'grey60')) +
theme(axis.text = element_blank(),
axis.title = element_blank(),
axis.ticks = element_blank(),
legend.title = element_blank(),
legend.key.size = unit(0.5, 'cm'),
legend.position = 'none',
legend.direction = "horizontal",
#strip.background = element_blank(),
panel.background = element_blank(),
strip.text.x = element_blank(),
#panel.spacing.y = unit(1, 'lines'))
)
ggsave('rPlots/3-draft_fraction_cluster-pie.png', width = 2, height = 6)
osaPeaks.enhancers <- osaPeaks.enhancers.full %>%
data.frame() %>%
dplyr::filter(!WT.3LW & anno.new %in% c('Distal Intergenic','Intron')) %>%
GRanges()
osaPeaks.enhancers <- subsetByOverlaps(faire.wt.3LW.summits, osaPeaks.enhancers)
wt.3lw.mat <- normalizeToMatrix(bws$wt_3LW, osaPeaks.enhancers, value_column = 'score', keep = c(0.01, 0.99), extend = 2000)
osaPeaks.enhancers <- osaPeaks.enhancers.full %>%
data.frame() %>%
dplyr::filter(!WT.3LW & anno.new %in% c('Distal Intergenic','Intron')) %>%
GRanges()
osaPeaks.enhancers <- osaPeaks.enhancers.full %>%
data.frame() %>%
dplyr::filter(!WT.3LW & anno.new %in% c('Distal Intergenic','Intron')) %>%
GRanges()
osaPeaks.enhancers <- subsetByOverlaps(faire.wt.3LW.summits, osaPeaks.enhancers)
wt.3lw.mat <- normalizeToMatrix(bws$wt_3LW, osaPeaks.enhancers, value_column = 'score', keep = c(0.01, 0.99), extend = 2000)
bws$wt_3LW
osaPeaks.enhancers
osaPeaks.enhancers <- osaPeaks.full %>%
data.frame() %>%
dplyr::filter(!WT.3LW & anno.new %in% c('Distal Intergenic','Intron')) %>%
GRanges()
osaPeaks.enhancers
osaPeaks.enhancers <- osaPeaks.full %>%
data.frame() %>%
dplyr::filter(!WT.3LW & anno.new %in% c('Distal Intergenic','Intron')) %>%
GRanges()
osaPeaks.enhancers <- subsetByOverlaps(faire.wt.3LW.summits, osaPeaks.enhancers)
wt.3lw.mat <- normalizeToMatrix(bws$wt_3LW, osaPeaks.enhancers, value_column = 'score', keep = c(0.01, 0.99), extend = 2000)
osaPeaks.enhancers
osaPeaks.enhancers <- osaPeaks %>%
data.frame() %>%
dplyr::filter(anno.new %in% c('Distal Intergenic','Intron')) %>%
GRanges()
#osaPeaks.enhancers <- subsetByOverlaps(faire.wt.3LW.summits, osaPeaks.enhancers)
wt.3lw.mat <- normalizeToMatrix(bws$wt_3LW, osaPeaks.enhancers, value_column = 'score', keep = c(0.01, 0.99), extend = 2000)
osa.1.mat <- normalizeToMatrix(bws$osaGFP.rep1, osaPeaks.enhancers, value_column = 'score', keep = c(0.01, 0.99), extend = 2000)
osa.2.mat <- normalizeToMatrix(bws$osaGFP.rep2, osaPeaks.enhancers, value_column = 'score', keep = c(0.01, 0.99), extend = 2000)
k27ac.mat <- normalizeToMatrix(k27ac.bw, osaPeaks.enhancers,
value_column = 'score',
keep = c(0.01, 0.99),
extend = 2000)
fig3d.mats <- list(wt.3lw.mat, osa.1.mat, osa.2.mat, k27ac.mat)
names(fig3d.mats) <- c('WT_3LW', 'Osa Rep1', 'Osa Rep2', 'K27ac')
common_min = min(c(osa.1.mat, osa.2.mat))
common_max = max(c(osa.1.mat, osa.2.mat))
col_fun = circlize::colorRamp2(seq(common_min, common_max, length.out = 6), viridis.hex)
groups <- ifelse(osaPeaks.enhancers$WT.3LW, "Open", "Closed")
lgd = Legend(at = c("closed", "open"), legend_gp = gpar(fill = c('#fc5d63','#87d674')))
l3.count <- osaPeaks.enhancers %>%
data.frame() %>%
dplyr::group_by(osa.cnr, WT.3LW) %>%
dplyr::count() %>%
dplyr::mutate(WT_FAIRE_3LW = ifelse(WT.3LW, 'Open','Closed'),
n = as.character(n)) %>%
.$n
#
names(l3.count) = unique(groups)
fig3d.hms <- EnrichedHeatmap(fig3d.mats$WT_3LW,
axis_name = c(-2,0,+2),
pos_line = F,
column_title = '3LW-FAIRE',
col = viridis.hex,
width = unit(0.5, 'in'),
left_annotation = c(rowAnnotation(textbox = anno_textbox(groups,
as.list(l3.count),
side = 'left',
background_gp = gpar(fill = NA, col = NA),
gp = gpar(col = 'black'),
padding = unit(0, 'mm')))),
#rowAnnotation(groups = anno_block(gp = gpar(fill = c('#fc5d63','#87d674')), show_name = F))),
top_annotation = HeatmapAnnotation(lines = anno_enriched(gp = gpar(col = c('#fc5d63','#87d674')),
ylim = c(0,6),
axis = F,
axis_param = list(side = 'left'))),
row_title = NULL,
name = 'FAIRE zScore') +
EnrichedHeatmap(fig3d.mats$`Osa Rep1`,
axis_name = c(-2,0,+2),
pos_line = F,
column_title = 'Osa.1',
col = col_fun,
name = 'Osa zScore',
width = unit(0.5,'in'),
top_annotation = HeatmapAnnotation(lines = anno_enriched(gp = gpar(col = c('#fc5d63','#87d674')),
ylim = c(0,6.8),
axis = F))) +
EnrichedHeatmap(fig3d.mats$`Osa Rep2`,
axis_name = c(-2,0,+2),
pos_line = F,
column_title = 'Osa.2',
col = col_fun,
show_heatmap_legend = F,
width = unit(0.5,'in'),
top_annotation = HeatmapAnnotation(lines = anno_enriched(gp = gpar(col = c('#fc5d63','#87d674')),
ylim = c(0,6.8),
# axis_param = list(side = 'right'))),
axis = F))) +
EnrichedHeatmap(fig3d.mats$K27ac,
axis_name = c(-5,0,+5),
pos_line = F,
column_title = 'K27ac',
#col = col_fun,
col = circlize::colorRamp2(seq(0, 2.5, length.out = 6), viridis.hex),
name = 'H3K27ac zScore',
#show_heatmap_legend = F,
width = unit(0.5,'in'),
top_annotation = HeatmapAnnotation(lines = anno_enriched(gp = gpar(col = c('#fc5d63','#87d674')),
ylim = c(0,2.2),
axis = F,
axis_param = list(side = 'right'))))
png('rPlots/3H.png', width = 5, heigh = 4, units = 'in', res = 300)
ComplexHeatmap::draw(fig3d.hms,
row_split = groups,
annotation_legend_list = list(lgd),
row_title = NULL,
heatmap_legend_side = "right",
merge_legend = T)
dev.off()
#TODO - best way to generate replicate average signal tracks
#TODO - functionalize givz plotting -- see SLN e93 gof repo - wrote series of functions for browser shot plotting
#track.colors <- RColorBrewer::brewer.pal(n = 4, "PiYG")
#track.colors <- c("#B8E186","#F1B6DA", "#4DAC26","#D01C8B")
track.colors <- c("grey40","#D01C8B", "grey40","#D01C8B")
cnr.ss.browser <- cnr.ss %>%
dplyr::mutate(color = track.colors)
k27ac.track <- get_cnr_track('../../H3K27ac_CnR/BigWig/yw-3LW-wing-ak27ac-pel-MEAN_dm6_trim_q5_dupsRemoved_150to700_rpgcNorm_zNorm.bw',
ylim = c(0,3),
fill = 'black',
col = 'transparent')
faire.3lw.track <- get_cnr_track('BigWig/wt_3LW_dm6_trim_q5_sorted_dupsRemoved_POOLED_rpgcNorm_zNorm.bw',
ylim = c(0,20),
fill = 'black',
col = 'transparent')
cnr.tracks <- get_cnr_tracks(cnr.ss.browser, ylim = c(0,12))
cnr.tracks <- list(cnr.tracks$osaGFP.rep1, cnr.tracks$osaGFP.rep2, peakTrack, cnr.tracks$yw.rep1, cnr.tracks$yw.rep2)
names(cnr.tracks) <- c('osaGFP.rep1', 'osaGFP.rep2', 'osaPeaks', 'yw.rep1', 'yw.rep2')
brdisc.at <- Gviz::AnnotationTrack(range = brD, genome = 'dm6', name = 'brDisc', fill = 'grey', col = 'transparent', background.title = 'white', showTitle = F )
axis <- Gviz::GenomeAxisTrack(scale = 1000)
png('rPlots/3D.png', width = 4, height = 4, res = 300, units = 'in')
Gviz::plotTracks(c(axis, cnr.tracks,
k27ac.track,
faire.3lw.track,
brdisc.at), chromosome = seqnames(brD) %>% as.character(),
from = start(brD + 1000),
to = end(brD + 1000),
cex.axis = 0.3,
cex.title = 0.5,
title.width = 1,
innerMargin = 10)
k27ac.track <- get_cnr_track('../../H3K27ac_CnR/BigWig/yw-3LW-wing-ak27ac-pel-MEAN_dm6_trim_q5_dupsRemoved_150to700_rpgcNorm_zNorm.bw',
ylim = c(0,3),
fill = 'black',
col = 'transparent')
k27ac.track
#TODO - best way to generate replicate average signal tracks
#TODO - functionalize givz plotting -- see SLN e93 gof repo - wrote series of functions for browser shot plotting
#track.colors <- RColorBrewer::brewer.pal(n = 4, "PiYG")
#track.colors <- c("#B8E186","#F1B6DA", "#4DAC26","#D01C8B")
track.colors <- c("grey40","#D01C8B", "grey40","#D01C8B")
cnr.ss.browser <- cnr.ss %>%
dplyr::mutate(color = track.colors)
k27ac.track <- get_cnr_track('../../H3K27ac_CnR/BigWig/yw-3LW-wing-ak27ac-pel-MEAN_dm6_trim_q5_dupsRemoved_150to700_rpgcNorm_zNorm.bw',
ylim = c(0,3),
fill = 'black',
col = 'transparent')
faire.3lw.track <- get_cnr_track('BigWig/wt_3LW_dm6_trim_q5_sorted_dupsRemoved_POOLED_rpgcNorm_zNorm.bw',
ylim = c(0,20),
fill = 'black',
col = 'transparent')
cnr.tracks <- get_cnr_tracks(cnr.ss.browser, ylim = c(0,12))
cnr.tracks <- list(cnr.tracks$osaGFP.rep1, cnr.tracks$osaGFP.rep2, peakTrack, cnr.tracks$yw.rep1, cnr.tracks$yw.rep2)
names(cnr.tracks) <- c('osaGFP.rep1', 'osaGFP.rep2', 'osaPeaks', 'yw.rep1', 'yw.rep2')
brdisc.at <- Gviz::AnnotationTrack(range = brD, genome = 'dm6', name = 'brDisc', fill = 'grey', col = 'transparent', background.title = 'white', showTitle = F )
axis <- Gviz::GenomeAxisTrack(scale = 1000)
png('rPlots/3D.png', width = 4, height = 4, res = 300, units = 'in')
Gviz::plotTracks(c(axis, cnr.tracks,
k27ac.track,
faire.3lw.track,
brdisc.at), chromosome = seqnames(brD) %>% as.character(),
from = start(brD + 1000),
to = end(brD + 1000),
cex.axis = 0.3,
cex.title = 0.5,
title.width = 1,
innerMargin = 10)
