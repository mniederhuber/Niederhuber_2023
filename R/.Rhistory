lexA_dl <- dl_quant_ratio[dl_quant_ratio$genotype == 'lexA',]$ratio
t.test(osa_dl, lexA_dl, paired = F)
dl_quant_ratio %>%
ggplot(aes(genotype, ratio)) +
geom_boxplot(aes(fill = genotype)) +
geom_point(position = position_jitter(width = 0.08)) +
scale_fill_manual(values = c('grey60','#CC0066'), name = 'RNAi') +
annotate(geom = 'segment', x = 1, xend = 2, y = 1.5, yend = 1.5) +
annotate(geom = 'text', x = 1.5, y = 1.51, label = '***') +
ylab('Dl A/P Ratio') +
theme(axis.title.x = element_blank(),
axis.text.x = element_blank(),
axis.title.y = element_text(size = 12),
axis.text.y = element_text(size = 12))
ggsave('rPlots/6D.png', width = 3, height = 4, dpi = 300)
dl_quant_ratio %>%
dplyr::filter(genotype == 'osa')
dl_quant_ratio %>%
ggplot(aes(genotype, ratio)) +
geom_boxplot(aes(fill = genotype)) +
geom_point(position = position_jitter(width = 0.08)) +
scale_fill_manual(values = c('grey60','#CC0066'), name = 'RNAi') +
annotate(geom = 'segment', x = 1, xend = 2, y = 1.5, yend = 1.5) +
annotate(geom = 'text', x = 1.5, y = 1.51, label = '***') +
ylab('Dl A/P Ratio') +
theme(axis.title.x = element_blank(),
axis.text.x = element_blank(),
axis.title.y = element_text(size = 12),
axis.text.y = element_text(size = 12),
plot.background = element_rect(fill = "#b5e2f5"))
dl_quant_ratio %>%
ggplot(aes(genotype, ratio)) +
geom_boxplot(aes(fill = genotype)) +
geom_point(position = position_jitter(width = 0.08)) +
scale_fill_manual(values = c('grey60','#CC0066'), name = 'RNAi') +
annotate(geom = 'segment', x = 1, xend = 2, y = 1.5, yend = 1.5) +
annotate(geom = 'text', x = 1.5, y = 1.51, label = '***') +
ylab('Dl A/P Ratio') +
theme(axis.title.x = element_blank(),
axis.text.x = element_blank(),
axis.title.y = element_text(size = 12),
axis.text.y = element_text(size = 12),
panel.background = element_rect(fill = "#b5e2f5"))
dl_quant_ratio %>%
ggplot(aes(genotype, ratio)) +
geom_boxplot(aes(fill = genotype)) +
geom_point(position = position_jitter(width = 0.08)) +
scale_fill_manual(values = c('grey60','#CC0066'), name = 'RNAi') +
annotate(geom = 'segment', x = 1, xend = 2, y = 1.5, yend = 1.5) +
annotate(geom = 'text', x = 1.5, y = 1.51, label = '***') +
ylab('Dl A/P Ratio') +
theme(axis.title.x = element_blank(),
axis.text.x = element_blank(),
axis.title.y = element_text(size = 12),
axis.text.y = element_text(size = 12),
panel.background = element_rect(fill = "#cbe8f5"))
dl_quant_ratio %>%
ggplot(aes(genotype, ratio)) +
geom_boxplot(aes(fill = genotype)) +
geom_point(position = position_jitter(width = 0.08)) +
scale_fill_manual(values = c('grey60','#CC0066'), name = 'RNAi') +
annotate(geom = 'segment', x = 1, xend = 2, y = 1.5, yend = 1.5) +
annotate(geom = 'text', x = 1.5, y = 1.51, label = '***') +
ylab('Dl A/P Ratio') +
theme(axis.title.x = element_blank(),
axis.text.x = element_blank(),
axis.title.y = element_text(size = 12),
axis.text.y = element_text(size = 12),
panel.background = element_rect(fill = "#dcf2fc"))
dl_quant_ratio %>%
ggplot(aes(genotype, ratio)) +
geom_boxplot(aes(fill = genotype)) +
geom_point(position = position_jitter(width = 0.08)) +
scale_fill_manual(values = c('grey60','#CC0066'), name = 'RNAi') +
annotate(geom = 'segment', x = 1, xend = 2, y = 1.5, yend = 1.5) +
annotate(geom = 'text', x = 1.5, y = 1.51, label = '***') +
ylab('Dl A/P Ratio') +
theme(axis.title.x = element_blank(),
axis.text.x = element_blank(),
axis.title.y = element_text(size = 12),
axis.text.y = element_text(size = 12),
panel.background = element_rect(fill = "#c3d6de"))
dl_quant_ratio %>%
ggplot(aes(genotype, ratio)) +
geom_boxplot(aes(fill = genotype)) +
geom_point(position = position_jitter(width = 0.08)) +
scale_fill_manual(values = c('grey60','#CC0066'), name = 'RNAi') +
annotate(geom = 'segment', x = 1, xend = 2, y = 1.5, yend = 1.5) +
annotate(geom = 'text', x = 1.5, y = 1.51, label = '***') +
ylab('Dl A/P Ratio') +
theme(axis.title.x = element_blank(),
axis.text.x = element_blank(),
axis.title.y = element_text(size = 12),
axis.text.y = element_text(size = 12),
panel.background = element_rect(fill = "#cad3db"))
ggsave('rPlots/6D.png', width = 3, height = 4, dpi = 300)
dl_quant_ratio %>%
ggplot(aes(genotype, ratio)) +
geom_boxplot(aes(fill = genotype)) +
geom_point(position = position_jitter(width = 0.08)) +
scale_fill_manual(values = c('grey60','#CC0066'), name = 'RNAi') +
annotate(geom = 'segment', x = 1, xend = 2, y = 1.5, yend = 1.5) +
annotate(geom = 'text', x = 1.5, y = 1.51, label = '***') +
ylab('Dl A/P Ratio') +
theme(axis.title.x = element_blank(),
axis.text.x = element_blank(),
axis.title.y = element_text(size = 12),
axis.text.y = element_text(size = 12),
panel.background = element_rect(fill = "#e0fcff"))
ggsave('rPlots/6D.png', width = 3, height = 4, dpi = 300)
dl_quant_ratio %>%
ggplot(aes(genotype, ratio)) +
geom_boxplot(aes(fill = genotype)) +
geom_point(position = position_jitter(width = 0.08)) +
scale_fill_manual(values = c('grey60','#CC0066'), name = 'RNAi') +
annotate(geom = 'segment', x = 1, xend = 2, y = 1.5, yend = 1.5) +
annotate(geom = 'text', x = 1.5, y = 1.51, label = '***') +
ylab('Dl A/P Ratio') +
theme(axis.title.x = element_blank(),
axis.text.x = element_blank(),
axis.title.y = element_text(size = 12),
axis.text.y = element_text(size = 12),
panel.background = element_rect(fill = "#bccfd1"))
dl_quant_ratio %>%
ggplot(aes(genotype, ratio)) +
geom_boxplot(aes(fill = genotype)) +
geom_point(position = position_jitter(width = 0.08)) +
scale_fill_manual(values = c('grey60','#CC0066'), name = 'RNAi') +
annotate(geom = 'segment', x = 1, xend = 2, y = 1.5, yend = 1.5) +
annotate(geom = 'text', x = 1.5, y = 1.51, label = '***') +
ylab('Dl A/P Ratio') +
theme(axis.title.x = element_blank(),
axis.text.x = element_blank(),
axis.title.y = element_text(size = 12),
axis.text.y = element_text(size = 12),
panel.background = element_rect(fill = "#537a51"))
dl_quant_ratio %>%
ggplot(aes(genotype, ratio)) +
geom_boxplot(aes(fill = genotype)) +
geom_point(position = position_jitter(width = 0.08)) +
scale_fill_manual(values = c('grey60','#CC0066'), name = 'RNAi') +
annotate(geom = 'segment', x = 1, xend = 2, y = 1.5, yend = 1.5) +
annotate(geom = 'text', x = 1.5, y = 1.51, label = '***') +
ylab('Dl A/P Ratio') +
theme(axis.title.x = element_blank(),
axis.text.x = element_blank(),
axis.title.y = element_text(size = 12),
axis.text.y = element_text(size = 12),
panel.background = element_rect(fill = "#d5e1e3"))
ggsave('rPlots/6D.png', width = 3, height = 4, dpi = 300)
source("R_Pipeline/pipeline_methods.R")
source("Scripts/importMatrix.R")
source("Scripts/FigUtils.R")
source("R_Pipeline/make_gviz_browser_shots.R")
library(cowplot)
#theme_set(theme_gray())
n_threads <- 4
setup_packages(n_threads = n_threads)
library(here)
Sys.setenv(MEME_DIR = "/home/snystrom/meme")
Sys.setenv(TOMTOM_DB = here("Data/fly_factor_survey_id.meme"))
# load pipeline output files
lapply(Sys.glob("R_Pipeline/output_data/*.rda"), load, .GlobalEnv)
times <- c("3LW", "0APF", "6APF", "18APF", "24APF", "36APF", "44APF")
times_nozero <- c("3LW", "6APF", "18APF", "24APF", "36APF", "44APF")
developmental_time_factor <- factor(times, levels = times)
developmental_time_factor_nozero <- factor(times_nozero, levels = times_nozero)
# Additional timepoint information from full WT timecourse
extra_sampleSheet <- readr::read_tsv("Data/allTimes_SampleSheet.tsv") %>%
dplyr::mutate(grp = paste0(Genotype, ".", Time)) %>%
dplyr::mutate(Bigwig = gsub("FAIRE_Data/Data/BigWigs/", "Data/Extra_Bigwigs/", Bigwig)) %>%
dplyr::mutate(BigwigZnorm = gsub("FAIRE_Data/Data/BigWigs/", "Data/Extra_Bigwigs/", BigwigZnorm)) %>%
dplyr::mutate(Bam = gsub("FAIRE_Data/Data/Bam/", "Data/Extra_Bam/", Bam)) %>%
#dplyr::select(-Bam) %>%
data.frame
source("R_Pipeline/pipeline_methods.R")
source("R_Pipeline/pipeline_methods.R")
source("Scripts/importMatrix.R")
source("Scripts/FigUtils.R")
source("R_Pipeline/make_gviz_browser_shots.R")
library(cowplot)
#theme_set(theme_gray())
n_threads <- 4
setup_packages(n_threads = n_threads)
library(here)
Sys.setenv(MEME_DIR = "/home/snystrom/meme")
Sys.setenv(TOMTOM_DB = here("Data/fly_factor_survey_id.meme"))
# load pipeline output files
lapply(Sys.glob("R_Pipeline/output_data/*.rda"), load, .GlobalEnv)
times <- c("3LW", "0APF", "6APF", "18APF", "24APF", "36APF", "44APF")
times_nozero <- c("3LW", "6APF", "18APF", "24APF", "36APF", "44APF")
developmental_time_factor <- factor(times, levels = times)
developmental_time_factor_nozero <- factor(times_nozero, levels = times_nozero)
# Additional timepoint information from full WT timecourse
extra_sampleSheet <- readr::read_tsv("Data/allTimes_SampleSheet.tsv") %>%
dplyr::mutate(grp = paste0(Genotype, ".", Time)) %>%
dplyr::mutate(Bigwig = gsub("FAIRE_Data/Data/BigWigs/", "Data/Extra_Bigwigs/", Bigwig)) %>%
dplyr::mutate(BigwigZnorm = gsub("FAIRE_Data/Data/BigWigs/", "Data/Extra_Bigwigs/", BigwigZnorm)) %>%
dplyr::mutate(Bam = gsub("FAIRE_Data/Data/Bam/", "Data/Extra_Bam/", Bam)) %>%
#dplyr::select(-Bam) %>%
data.frame
# replace 3lw data with correct samples
or.3lw_entry <- peakTable %>%
dplyr::filter(grp == "OR.3LW") %>%
dplyr::select(-Bam, -Peakfile, -Assay, -Sample)
extra_peakTable <- readr::read_tsv("Data/allTimes_PeakTable.tsv") %>%
dplyr::mutate(grp = paste0(Genotype, ".", Time)) %>%
dplyr::mutate(BigwigZnorm = gsub("FAIRE_Data/Data/BigWigs/", "Data/Extra_Bigwigs/", BigwigZnorm)) %>%
dplyr::select(-Peakfile) %>%
dplyr::filter(grp != "OR.3LW") %>%
data.frame %>%
dplyr::bind_rows(., or.3lw_entry)
ptm_sampleSheet <- readr::read_tsv("histone_ptm_samplesheet.tsv") %>%
dplyr::mutate(BigwigZnorm = paste0("Data/", BigwigZnorm)) %>%
dplyr::mutate(Bigwig = paste0("Data/", Bigwig)) %>%
dplyr::mutate(Sample = gsub("-", "\\.", Sample)) %>%
data.frame
#############
# colorscheme for consequences of binding & FAIRE regions
# for WT behavior:
increasing_color = "forestgreen"
decreasing_color = "firebrick"
static_color = "dodgerblue4"
# for behavior in response to precocious E93:
gof_increasing_color = "#0092ff"
gof_decreasing_color = "#ffa700"
gof_static_color = "grey50"
# Generic genome highlight color
genome_highlight_color = "grey75"
behavior_colors <- c("Increasing" = increasing_color, "Decreasing" = decreasing_color, "Static" = static_color)
gof_behavior_colors <- c("Increasing" = gof_increasing_color, "Decreasing" = gof_decreasing_color, "Static" = gof_static_color)
toOrphan <- function(df, col = peak_binding_description){
# For converting peak_binding_description to "orphan" from "orphan_endogenous"
# this is to pay down some tech-debt that I realized too late to change original assignment.
col <- enquo(col)
df %>%
dplyr::mutate(!!col := gsub("_endogenous", "", !!col))
}
## DEVELOPMENT Guidelines:
# fig size max: 180 mm x 210 mm (7.08 in x 8.26 in)
# 8pt arial for all text
# 12pt uppercase for labels
theme_development <- theme(text = element_text(size = 8, family = "Arial"),
axis.text = element_text(size = 8, family = "Arial"),
strip.text = element_text(size = 8, family = "Arial"),
plot.tag = element_text(size = 12, family = "Arial"))
pt_to_mm <- function(pt){
# Convert ggplot2 size from mm to pt
# named this function poorly to start, now too late to change.
pt * 0.352778
}
# now only with E93 WT bound...
# 20% of E93 WT bound, dependent sites are precocious bound and sensitive
unionChip_anno %>%
dplyr::mutate(precocious_bound = ifelse(grepl('ectopic|entopic', peak_binding_description), T,F)) %>%
dplyr::filter(e93_dependent == 'dependent' & peak_binding_description != 'ectopic') %>%
dplyr::group_by(precocious_bound, e93_sensitive) %>%
dplyr::tally() %>%
dplyr::ungroup() %>%
dplyr::mutate(per = n/sum(n))
source("R_Pipeline/pipeline_methods.R")
setup_packages(n_threads = n_threads)
chip_peakTableList <- chip_peakTable %>%
split(., .$grp)
theme_set(theme_grey())
set.seed(1892825)
# now only with E93 WT bound...
# 20% of E93 WT bound, dependent sites are precocious bound and sensitive
unionChip_anno %>%
dplyr::mutate(precocious_bound = ifelse(grepl('ectopic|entopic', peak_binding_description), T,F)) %>%
dplyr::filter(e93_dependent == 'dependent' & peak_binding_description != 'ectopic') %>%
dplyr::group_by(precocious_bound, e93_sensitive) %>%
dplyr::tally() %>%
dplyr::ungroup() %>%
dplyr::mutate(per = n/sum(n))
chip_repOv <- peak_overlaps_by_condition(chip_allPeaks_by_rep %>% split(mcols(.)$grp))
addGrpToPeaks <- function(x){
peaks <- map(x, "mergedPeaks") %>%
map(., data.frame) %>%
imap(., ~{
name <- .y
df <- .x
df %>%
dplyr::mutate(grp = name)
}) %>%
map(., GRanges)
return(peaks)
}
repOv_peaks <- addGrpToPeaks(chip_repOv)
wt_ov_gof <- ChIPpeakAnno::findOverlapsOfPeaks(repOv_peaks)
ChIPpeakAnno::makeVennDiagram(wt_ov_gof)
allChipPeaks <- annotate_overlap_status(wt_ov_gof, by = "grp") %>%
lapply(., function(peaks){
peaks %>%
data.frame %>%
dplyr::mutate(peak_binding_description = case_when(.$peak_status == "OR.24APF_unique" ~ "orphan_endogenous",
.$peak_status == "E93GOF.3LW_unique" ~ "ectopic",
.$peak_status == "shared" & .$grp == "OR.24APF" ~ "entopic",
.$peak_status == "shared" & .$grp == "E93GOF.3LW" ~ "na"))
}) %>%
dplyr::bind_rows(.)
library(forcats)
plotData <- allChipPeaks %>%
dplyr::filter(grp == "OR.24APF") %>%
dplyr::mutate(peak_binding_description = case_when(.$peak_binding_description == "orphan_endogenous" ~ "Unbound",
.$peak_binding_description == "entopic" ~ "Bound"))
axis_data <- plotData %>%
dplyr::group_by(peak_binding_description) %>%
dplyr::count() %>%
tidyr::spread(peak_binding_description, n) %>%
dplyr::mutate(total = Bound + Unbound)
percentBound <- round((axis_data$Bound / axis_data$total) * 100)
breaks <- c(axis_data$Bound, axis_data$total)
plotData %>%
ggplot(aes(factor("WT E93\nLate binding sites"))) +
geom_bar(aes(fill = fct_rev(peak_binding_description))) +
xlab(NULL) +
ylab(glue::glue("{percentBound}%\nBound")) +
theme_minimal() +
theme(text = element_text(color = "black"),
axis.text = element_text(color = "black", size = 15),
axis.line = element_line(color = "black"),
panel.grid.major = element_blank(),
axis.title.y = element_text(angle = 0,
vjust = percentBound/100 + 0.035,
size = 14)) +
guides(fill = guide_legend(title = "Bound by\nPrecocious E93", title.hjust = 0.5)) +
scale_fill_manual(values  = c("Bound" = "Black", "Unbound" = "Grey")) +
scale_y_continuous(breaks = breaks, expand = c(0,0))
unionChip <- allChipPeaks %>%
GRanges %>%
GenomicRanges::reduce(.)
endogenous <- allChipPeaks %>%
dplyr::filter(peak_binding_description == "entopic") %>%
GRanges
ectopic <- allChipPeaks %>%
dplyr::filter(peak_binding_description == "ectopic") %>%
GRanges
orphan_endogenous <- allChipPeaks %>%
dplyr::filter(peak_binding_description == "orphan_endogenous") %>%
GRanges
unionChip %<>%
data.frame %>%
dplyr::mutate(id = glue::glue("peak_{num}", num = seq(1:nrow(.))) %>% as.character(.)) %>%
dplyr::mutate(peak_binding_description = case_when(GRanges(.) %over% endogenous ~ "entopic",
GRanges(.) %over% ectopic ~ "ectopic",
GRanges(.) %over% orphan_endogenous ~ "orphan_endogenous")) %>%
GRanges
unionChip %>%
data.frame %>%
dplyr::count(peak_binding_description)
makeAnno <- function(grange) {
annoDF <- grange %>%
data.frame() %>%
dplyr::select(id, seqnames, start, end, strand)
colnames(annoDF) <- c("GeneID", "Chr", "Start", "End", "Strand")
return(annoDF)
}
# this function is no longer in the rsubread package!
#chip_anno <- Rsubread::createAnnotationFile(unionChip)
chip_anno <- makeAnno(unionChip)
chip_counts <- Rsubread::featureCounts(chip_sampleSheet$Bam,
annot.ext = chip_anno,
allowMultiOverlap = T,
nthreads = n_threads)
faire_counts_in_chipPeaks <- Rsubread::featureCounts(sampleSheet$Bam,
annot.ext = chip_anno,
allowMultiOverlap = T,
nthreads = n_threads)
colnames(chip_counts$counts) <- chip_sampleSheet$Sample
colnames(faire_counts_in_chipPeaks$counts) <- sampleSheet$Sample
chip_res <- results(chip_dds)
library(DESeq2)
chip_dds <- DESeqDataSetFromMatrix(countData = chip_counts$counts, colData = chip_sampleSheet, design = ~grp) %>%
DESeq(.)
faire_chip_dds <- DESeqDataSetFromMatrix(countData = faire_counts_in_chipPeaks$counts, colData = sampleSheet, design = ~grp) %>%
DESeq(.)
chip_res <- results(chip_dds)
summary(chip_res)
chip_cpm <- fpm(chip_dds)
chip_faire_cpm <- fpm(faire_chip_dds)
mean_cpm <- function(cpm, prefix = "", suffix = "_cpm", idCol = "id",
sample_regex = ".+\\..+\\..+\\.",
rep_regex = "\\.Rep\\d"){
# requires colnames to be of form <genotype>.<time>.<tissue>.<Rep#>
mean_cpm <- cpm %>%
data.frame %>%
tibble::rownames_to_column(idCol) %>%
reshape2::melt(variable.name = "Sample_Rep", value.name = "cpm") %>%
dplyr::mutate(grp = gsub(rep_regex, "", Sample_Rep)) %>%
dplyr::mutate(Rep = gsub(sample_regex, "", Sample_Rep)) %>%
dplyr::group_by(id, grp) %>%
dplyr::summarise(cpm = mean(cpm)) %>%
dplyr::mutate(grp = paste0(prefix, grp, suffix)) %>%
tidyr::spread(key = grp, value = cpm) %>%
data.frame
return(mean_cpm)
}
chip_mean_cpm <- mean_cpm(chip_cpm, prefix = "chip_cpm_", suffix = "")
chip_faire_mean_cpm <- mean_cpm(chip_faire_cpm, prefix = "faire_cpm_", suffix = "")
unionChip %<>%
data.frame %>%
dplyr::left_join(., chip_mean_cpm, by = "id") %>%
dplyr::left_join(., chip_faire_mean_cpm, by = "id")
peakTable_split <- peakTable %>% split(.$Sample)
chip_peakTable_split <- chip_peakTable %>% split(.$Sample)
chip_allRes <- generate_DESeq2_contrast_strings(chip_sampleSheet) %>%
generate_DESeq2_contrasts(chip_dds, ., lfcCutoff = 1, padjCutoff = 0.05, format = "DataFrame")
chip_faire_allRes <- generate_DESeq2_contrast_strings(sampleSheet) %>%
generate_DESeq2_contrasts(faire_chip_dds, ., lfcCutoff = 1, padjCutoff = 0.05, format = "DataFrame")
dm3.txdb <- TxDb.Dmelanogaster.UCSC.dm3.ensGene::TxDb.Dmelanogaster.UCSC.dm3.ensGene
BiocManager::install('TxDb.Dmelanogaster.UCSC.dm3.ensGene')
dm3.txdb <- TxDb.Dmelanogaster.UCSC.dm3.ensGene::TxDb.Dmelanogaster.UCSC.dm3.ensGene
unionChip_anno <- unionChip %>%
dplyr::mutate(e93_dependent = case_when((chip_faire_allRes$OR.3LWvsE93mut.3LW$behavior_type %in% c("Increasing", "Decreasing")) ~ "dependent",
(chip_faire_allRes$OR.24APFvsE93mut.24APF$behavior_type %in% c("Increasing", "Decreasing")) ~ "dependent",
T ~ "independent")) %>%
dplyr::mutate(e93_sensitive = case_when((chip_faire_allRes$OR.3LWvsE93GOF.3LW$behavior_type %in% c("Increasing", "Decreasing")) ~ "sensitive",
T ~ "insensitive")) %>%
dplyr::mutate(e93_response_category = paste0(e93_dependent, "_", e93_sensitive)) %>%
dplyr::mutate(e93_sensitive_behavior = chip_faire_allRes$OR.3LWvsE93GOF.3LW$behavior_type) %>%
dplyr::mutate(wt_l3_24_dynamic_behavior = chip_faire_allRes$OR.3LWvsOR.24APF$behavior_type) %>%
GRanges(.) %>%
ChIPseeker::annotatePeak(., tssRegion = c(-500,500), TxDb = dm3.txdb, level = "gene") %>%
ChIPseeker::as.GRanges(.) %>%
data.frame %>%
dplyr::mutate(anno_simple = gsub(" \\(.+$", "", annotation))
unionChip_anno %>%
dplyr::summarize(dep = sum(e93_dependent == "dependent"),
sens = sum(e93_sensitive == "sensitive"),
all = sum(e93_dependent %in% c("dependent", "independent")),
both = sum(e93_response_category == "dependent_sensitive")) %>%
dplyr::summarise(dep_frac = both/dep, sens_frac = both/sens, dep_all = dep/all, sens_all = sens/all)
dm3.txdb <- TxDb.Dmelanogaster.UCSC.dm3.ensGene::TxDb.Dmelanogaster.UCSC.dm3.ensGene
unionChip_anno <- unionChip %>%
dplyr::mutate(e93_dependent = case_when((chip_faire_allRes$OR.3LWvsE93mut.3LW$behavior_type %in% c("Increasing", "Decreasing")) ~ "dependent",
(chip_faire_allRes$OR.24APFvsE93mut.24APF$behavior_type %in% c("Increasing", "Decreasing")) ~ "dependent",
T ~ "independent")) %>%
dplyr::mutate(e93_sensitive = case_when((chip_faire_allRes$OR.3LWvsE93GOF.3LW$behavior_type %in% c("Increasing", "Decreasing")) ~ "sensitive",
T ~ "insensitive")) %>%
dplyr::mutate(e93_response_category = paste0(e93_dependent, "_", e93_sensitive)) %>%
dplyr::mutate(e93_sensitive_behavior = chip_faire_allRes$OR.3LWvsE93GOF.3LW$behavior_type) %>%
dplyr::mutate(wt_l3_24_dynamic_behavior = chip_faire_allRes$OR.3LWvsOR.24APF$behavior_type) %>%
GRanges(.) %>%
ChIPseeker::annotatePeak(., tssRegion = c(-500,500), TxDb = dm3.txdb, level = "gene") %>%
ChIPseeker::as.GRanges(.) %>%
data.frame %>%
dplyr::mutate(anno_simple = gsub(" \\(.+$", "", annotation))
unionChip_anno %>%
dplyr::summarize(dep = sum(e93_dependent == "dependent"),
sens = sum(e93_sensitive == "sensitive"),
all = sum(e93_dependent %in% c("dependent", "independent")),
both = sum(e93_response_category == "dependent_sensitive")) %>%
dplyr::summarise(dep_frac = both/dep, sens_frac = both/sens, dep_all = dep/all, sens_all = sens/all)
unionChip_anno %>%
dplyr::mutate(precocious_bound = ifelse(grepl('ectopic|entopic', peak_binding_description), T,F)) %>%
dplyr::group_by(precocious_bound, e93_response_category) %>%
dplyr::tally() %>%
dplyr::mutate(per = n/sum(n))
# now only with E93 WT bound...
# 20% of E93 WT bound, dependent sites are precocious bound and sensitive
unionChip_anno %>%
dplyr::mutate(precocious_bound = ifelse(grepl('ectopic|entopic', peak_binding_description), T,F)) %>%
dplyr::filter(e93_dependent == 'dependent' & peak_binding_description != 'ectopic') %>%
dplyr::group_by(precocious_bound, e93_sensitive) %>%
dplyr::tally() %>%
dplyr::ungroup() %>%
dplyr::mutate(per = n/sum(n))
# now only with E93 WT bound...
# 20% of E93 WT bound, dependent sites are precocious bound and sensitive
unionChip_anno %>%
dplyr::mutate(precocious_bound = ifelse(grepl('ectopic|entopic', peak_binding_description), T,F)) %>%
dplyr::filter(e93_dependent == 'dependent' & peak_binding_description != 'ectopic') %>%
dplyr::group_by(peak_binding_description, precocious_bound, e93_sensitive) %>%
dplyr::tally() %>%
dplyr::ungroup() %>%
dplyr::mutate(per = n/sum(n))
# now only with E93 WT bound...
# 20% of E93 WT bound, dependent sites are precocious bound and sensitive
unionChip_anno %>%
dplyr::mutate(precocious_bound = ifelse(grepl('ectopic|entopic', peak_binding_description), T,F)) %>%
#dplyr::filter(e93_dependent == 'dependent' & peak_binding_description != 'ectopic') %>%
dplyr::group_by(e93_dependent, peak_binding_description, precocious_bound, e93_sensitive) %>%
dplyr::tally() %>%
dplyr::ungroup() %>%
dplyr::mutate(per = n/sum(n))
# now only with E93 WT bound...
# 20% of E93 WT bound, dependent sites are precocious bound and sensitive
unionChip_anno %>%
dplyr::mutate(precocious_bound = ifelse(grepl('ectopic|entopic', peak_binding_description), T,F)) %>%
dplyr::filter(e93_dependent == 'dependent' & peak_binding_description != 'ectopic') %>%
dplyr::group_by(precocious_bound, e93_sensitive) %>%
dplyr::tally() %>%
dplyr::ungroup() %>%
dplyr::mutate(per = n/sum(n))
# now only entopic peaks
unionChip_anno %>%
dplyr::mutate(precocious_bound = ifelse(grepl('ectopic|entopic', peak_binding_description), T,F)) %>%
dplyr::filter(e93_dependent == 'dependent' & peak_binding_description == 'entopic') %>%
dplyr::group_by(precocious_bound, e93_sensitive) %>%
dplyr::tally() %>%
dplyr::ungroup() %>%
dplyr::mutate(per = n/sum(n))
# now only with E93 WT bound...
# 20% of E93 WT bound, dependent sites are precocious bound and sensitive
unionChip_anno %>%
dplyr::mutate(precocious_bound = ifelse(grepl('ectopic|entopic', peak_binding_description), T,F)) %>%
#dplyr::filter(e93_dependent == 'dependent' & peak_binding_description != 'ectopic') %>%
dplyr::group_by(e93_dependent, peak_binding_description, precocious_bound, e93_sensitive) %>%
dplyr::tally() %>%
dplyr::ungroup() %>%
dplyr::mutate(per = n/sum(n))
