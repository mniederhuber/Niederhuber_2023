###
# load rData
###
load('rData/sheets.rda')
load('rData/peaks.rda')
#TODO move RNAseq data into BAP project
# TODO this is in progress - mixed across directories
load('rData/wing-rnaseq-GeTMM.RData')  # GeTMM normalized RNAseq
#loads 'wing.rnaseq'
#load('rData/wing-rnaseq-DDS.RData')  # loads dds.results
## TODO -- no id validation yet need to fix
#rna.dds <- dds.results %>%
#  dplyr::filter(baseMean_6h > 0) %>%
#  tibble::rownames_to_column(var = 'Geneid')
ON.genes <- wing.rnaseq %>%
dplyr::filter(mean >= 2) %>%
dplyr::select(Geneid)
ON.genes %>% write.table('on-rnaseq.txt', sep = '\n', row.names = F, col.names = F, quote = F)
#TODO clean this up - had to write out the on list and use the flybase id validator tool...
ON.genes.validated <- read.table('~/McKay/Wing-RNAseq/on-genes-IDvalidation.txt', header = T) %>%
dplyr::rename(Geneid = submitted_item,
Validated = validated_id,
Symbol = current_symbol)
#TODO move flyfactor database to BAP - code to download to repo?
## load in a flyfacotr fbgn validated .txt - generated with Flybase id validator
## there are 2 'FlyFactor' FBgn codes that are updated two more than 1 unique 'Validated' FBgns in `fbgn.validated`
# FBgn0051782 -- CG31782 in flyfactor - old annotation? no present in Flybase, maybe split into three differen pseudogene annos now
# FBgn0050420 -- is only Atf-2 in flyfactor db
fbgn.validated <- read.table('~/McKay/Motif_databases/FLY/fbgn_validated.txt', header = F, sep = '\t')
colnames(fbgn.validated) <- c('FlyFactor', 'Validated', 'Symbol')
fbgn.validated %<>%
dplyr::filter(FlyFactor != 'FBgn0051782') %>% #drop this FBgn, problematic update to multiple new FBgns of pseudogenes
dplyr::filter(Validated != 'FBgn0265182') # drop this Validated FBgn, which is an incorrectly updated from FBgn0050420
###
# assign global variables
###
dm6 <- BSgenome.Dmelanogaster.UCSC.dm6::BSgenome.Dmelanogaster.UCSC.dm6
dm3 <- BSgenome.Dmelanogaster.UCSC.dm3::BSgenome.Dmelanogaster.UCSC.dm3
dm6.TxDb <- TxDb.Dmelanogaster.UCSC.dm6.ensGene::TxDb.Dmelanogaster.UCSC.dm6.ensGene
dm6.promoters <- ChIPseeker::getPromoters(dm6.TxDb, upstream = 500, downstream = 100)
dm6.genes <- GenomicFeatures::genes(dm6.TxDb)
brD <- data.frame('seqnames' = 'chrX',
'start' = 1565708,
'end' = 1567401) %>%
GenomicRanges::GRanges()
shn <- data.frame('seqnames' = 'chr2R',
'start' = 11159086,
'end' = 11217394) %>%
GRanges()
sbb <- data.frame('seqnames' = 'chr2R',
'start' = 18278198,
'end' = 18357296) %>%
GRanges()
# Dl
#chr3R:19,265,389-19,350,508
Dl <- data.frame('seqnames' = 'chr3R',
'start' = 19265389,
'end' = 19350508) %>%
GRanges()
# E(spl)-c
#chr3R:25,980,255-26,065,374
espl <- data.frame('seqnames' = 'chr3R',
'start' = 25980255,
'end' = 26065374) %>%
GRanges()
###
# meme db
###
#TODO - so clunky...
# loading in the fly factor database, drop out a couple of problematic fbgn
# then use the fbgn.validated lookup table for fly factor to update all the old ids to correct ids
# then filter on the on gene list -- which has to go through a similar process of id validation
# gross
meme_db <- universalmotif::read_meme('~/McKay/Motif_databases/FLY/fly_factor_survey.meme') %>%
universalmotif::to_df() %>%
dplyr::group_by(name) %>%
dplyr::filter(!grepl('FBgn0051782|FBgn0265182', name)) %>%  #drop this FBgn, problematic update to multiple new FBgns of pseudogenes
dplyr::mutate(basename = stringr::str_split_fixed(name, '_', n = 2)[[1]],
fbgn.validated = fbgn.validated[fbgn.validated$FlyFactor == basename,]$Validated)
meme_db_on <- meme_db %>%
dplyr::filter(fbgn.validated %in% ON.genes.validated$Validated)
options(meme_db = universalmotif::to_list(meme_db_on, extrainfo = F))
###
# colors
###
viridis.hex <- c("#440154","#3b528b","#21918c","#5ec962","#5ec962","#fde725")
cbPalette <- c("#999999", "#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7")
cbPalette.4 <- c("#D81B60","#1E88E5","#FFC107","#004D40")
cbPalette.ibm <- c('#332288','#117733','#44AA99','#88CCEE','#DDCC77','#CC6677','#AA4499','#882255')
###
# peak subsets
###
osaPeaks <- peaks$cnr.df %>%
dplyr::filter(osa.cnr & !yw.cnr) %>%
GRanges() %>%
resize(width = 1, fix = "center")
# REMOVED- this is maybe a bad control because its only 300 sites
#osaUnbound <- peaks %>%
#  dplyr::filter(yw.cnr & assay == 'cnr') %>%
#  GRanges() %>%
#  resize(width = 1, fix = "center")
#trying this...
#background <- peaks %>%
#  dplyr::filter(assay == '1kb background') %>%
#  GRanges() %>%
#  resize(width = 1, fix = 'center')
#closing.osaBound <- peaks %>%
#  dplyr::filter(assay == 'faire' & experiment == 'WT FAIRE Wing Timecourse' & faireCat.3LW_24h == 'closing' & osa.cnr & !yw.cnr) %>%
#  GRanges() %>%
#  resize(width = 1, fix = "center")
fairePeaks.wt <- peaks$faire.wt.df %>%
#  dplyr::filter(assay == 'faire' & experiment == 'WT FAIRE Wing Timecourse') %>%
GRanges() %>%
resize(width = 1, fix = "center")
#redundant... but used in a couple chunks for motif analysis
fairePeaks <- peaks$faire.wt.df %>%
dplyr::filter(assay == 'faire'  & experiment == 'WT FAIRE Wing Timecourse')
#DONE - remove the peakCat ? since now using log2fold change for these categories...
fairePeaks.deg <- peaks$faire.osaDeg.df %>%
#  dplyr::filter(assay == 'faire' & experiment == 'osaGFP deGrad Pupal Wing FAIRE') %>%
dplyr::filter(osaGFP.deGrad | osaGFP.control) %>% # want to only use peaks that are reproducible and of good quality
GRanges() %>%
resize(width = 1, fix = "center")
fairePeaks.osaDependent <- fairePeaks.deg %>%
data.frame() %>%
dplyr::filter(faireCat.osaDeGrad == 'Osa Dependent') %>%
GRanges()
fairePeaks.osaIndependent <- fairePeaks.deg %>%
data.frame() %>%
dplyr::filter(faireCat.osaDeGrad == 'Osa Independent') %>%
GRanges()
fairePeaks.osaEctopic <- fairePeaks.deg %>%
data.frame() %>%
dplyr::filter(faireCat.osaDeGrad == 'Osa Ectopic') %>%
GRanges()
###
# load bws and matrices for heatmaps
###
#TODO - cleanup - move matrices?
bws <- get_bws(dplyr::bind_rows(cnr.ss, faire.wt.ssPool), 'id')
deg.bws <- get_bws(faire.ss %>% dplyr::filter(experiment == 'osaGFP deGrad FAIRE'), 'id')
#mats <- purrr::map(bws, ~{
#  normalizeToMatrix(., osaPeaks, value_column = 'score', keep = c(0.01, 0.99), extend = 2000)
#})
#names(mats) <- names(bws)
#TODO -- move to utils?
###
# functions
###
plot.frac <- function(x) {
lapply(unique(x$change), function(i) {
x %>%
dplyr::filter(change == i) %>%
ggplot(aes(fraction, change, fill = Osa.Bound)) +
geom_bar(stat = 'identity', width = 1) +
geom_text(aes(label = per), position = position_fill(vjust = 0.6),  size = 7, fontface = "bold") +
#geom_text(aes(label = per, position = position_stack(vjust = 0.5))) +
scale_fill_manual(values = c('grey80','#41f0ad'), name = 'Osa Bound') +
scale_y_discrete(position = 'right', ) +
xlab('Percent Bound by Osa') +
theme(legend.position = 'top',
legend.key.size = unit(1, 'cm'),
legend.text = element_text(size = 15),
legend.title = element_text(size = 20),
panel.background = element_blank(),
axis.text = element_blank(),
axis.title = element_blank(),
axis.ticks = element_blank(),
#           axis.text.y = element_text(size = 12),
panel.grid = element_blank()) +
NULL
fn = paste0('rPlots/3E_',i,'.png')
ggsave(fn, width = 6, height = 1.5, units = 'in', dpi = 300 )
})
}
osaPeaks %>%
data.frame() %>%
dplyr::select(seqnames, start, end) %>%
write.table('osaPeaks.bed', quote = F, col.names = F, row.names = F, sep = '\t')
fairePeaks.osaDependent %>%
data.frame() %>%
dplyr::select(seqnames, start, end) %>%
write.table('osaDependent.bed', quote = F, col.names = F, row.names = F, sep = '\t')
fairePeaks.osaEctopic %>%
data.frame() %>%
dplyr::select(seqnames, start, end) %>%
write.table('osaEctopic.bed', quote = F, col.names = F, row.names = F, sep = '\t')
### for gviz
genetrack <- Gviz::GeneRegionTrack(range = dm6.TxDb, fill = 'grey80', showTitle = F, background.title = 'white', stacking = 'squish')
#TODO - best way to generate replicate average signal tracks
#TODO - functionalize givz plotting -- see SLN e93 gof repo - wrote series of functions for browser shot plotting
#track.colors <- RColorBrewer::brewer.pal(n = 4, "PiYG")
track.colors <- c("grey20")
faire.wt.browser <- faire.wt.ssPool %>%
dplyr::filter(grepl('3LW',time)) %>%
dplyr::mutate(color = track.colors)
faire.wt.tracks <- get_cnr_tracks(faire.wt.browser, ylim = c(0,15))
brdisc.at <- Gviz::AnnotationTrack(range = brD, genome = 'dm6', name = 'brDisc', fill = '#e858a5', col = 'transparent', background.title = 'white', showTitle = F )
axis <- Gviz::GenomeAxisTrack(scale = 10000)
png('rPlots/1A.png', width = 10, height = 2, res = 300, units = 'in')
Gviz::plotTracks(c(axis,faire.wt.tracks, brdisc.at, genetrack), chromosome = seqnames(brD) %>% as.character(),
from = start(brD + 20000),
to = end(brD + 20000),
cex.axis = 0.3,
cex.title = 0.5,
title.width = 1,
innerMargin = 10)
dev.off()
fairePeaks.deg %>%
data.frame() %>%
ggplot(aes(faire_osaDeGrad.log2FoldChange, faire_osaDeGrad.stat)) +
geom_point()
# TODO - the adjusted p value plot is meaningless because almost all values ~ 1,
# if that's true then fine, but is this a 'bug' in pvalue correction with few-none differential regions?
fairePeaks.deg %>%
data.frame() %>%
ggplot(aes( faire_osaDeGrad.log2FoldChange, faire_osaDeGrad.padj)) +
geom_point(color = ifelse(fairePeaks.deg$faire_osaDeGrad.padj <= 0.05, 'red','black'))
# TODO - the adjusted p value plot is meaningless because almost all values ~ 1,
# if that's true then fine, but is this a 'bug' in pvalue correction with few-none differential regions?
fairePeaks.deg %>%
data.frame() %>%
ggplot(aes( log2FoldChange, padj)) +
geom_point(color = ifelse(fairePeaks.deg$faire_osaDeGrad.padj <= 0.05, 'red','black'))
# TODO - the adjusted p value plot is meaningless because almost all values ~ 1,
# if that's true then fine, but is this a 'bug' in pvalue correction with few-none differential regions?
fairePeaks.deg %>%
data.frame() %>%
ggplot(aes( log2FoldChange, padj)) +
geom_point(color = ifelse(fairePeaks.deg$padj <= 0.05, 'red','black'))
# TODO - the adjusted p value plot is meaningless because almost all values ~ 1,
# if that's true then fine, but is this a 'bug' in pvalue correction with few-none differential regions?
fairePeaks.deg %>%
data.frame() %>%
ggplot(aes( log2FoldChange, padj)) +
geom_point(color = ifelse(fairePeaks.deg$padj <= 0.05, 'red','black')) +
scale_y_log10()
# TODO - the adjusted p value plot is meaningless because almost all values ~ 1,
# if that's true then fine, but is this a 'bug' in pvalue correction with few-none differential regions?
fairePeaks.deg %>%
data.frame() %>%
ggplot(aes( log2FoldChange, pvalue)) +
geom_point(color = ifelse(fairePeaks.deg$padj <= 0.05, 'red','black'))
# TODO - the adjusted p value plot is meaningless because almost all values ~ 1,
# if that's true then fine, but is this a 'bug' in pvalue correction with few-none differential regions?
fairePeaks.deg %>%
data.frame() %>%
ggplot(aes( log2FoldChange, pvalue)) +
geom_point(color = ifelse(fairePeaks.deg$pvalue <= 0.05, 'red','black'))
ggsave('rPlots/4-draft-log2Fold_vs_Pval.png', width = 4, height = 4, dpi = 300)
#TODO - add 36h FAIRE data? better comparison for osa deGrad?
#track.colors <- RColorBrewer::brewer.pal(n = 4, "PiYG")
track.colors <- c("grey70","grey60", "grey40", 'grey30')
deg.ss.browser <- faire.osaDeGrad.ssPool %>%
dplyr::bind_rows(., faire.wt.ssPool[faire.wt.ssPool$grp == 'wt.3LW' | faire.wt.ssPool$grp == 'wt.24h',]) %>%
dplyr::mutate(color = track.colors)
deg.tracks <- get_cnr_tracks(deg.ss.browser, ylim = c(0,15))
deg.tracks <- c(deg.tracks$wt_3LW,
deg.tracks$wt_24h,
deg.tracks$osaGFP.deGrad_control_faire,
deg.tracks$osaGFP.deGrad_nubG4_faire)
brdisc.at <- Gviz::AnnotationTrack(range = brD, genome = 'dm6', name = 'brDisc', fill = 'grey', col = 'transparent', background.title = 'white', showTitle = F )
axis <- Gviz::GenomeAxisTrack(scale = 1000)
png('rPlots/4D.png', width = 4, height = 6, res = 300, units = 'in')
Gviz::plotTracks(c(axis, deg.tracks, brdisc.at), chromosome = seqnames(brD) %>% as.character(),
from = start(brD + 1000),
to = end(brD + 1000),
cex.axis = 0.3,
cex.title = 0.5,
title.width = 1,
innerMargin = 10)
dev.off()
#TODO - add highlights for dependent regions - currently manually annotating in illustrator
#peaks %>%
#  dplyr::filter(assay == 'faire' & experiment == 'osaGFP deGrad Pupal Wing FAIRE' & faireCat.osaDeGrad == 'Osa Dependent') %>%
#  dplyr::filter(osaGFP.deGrad | osaGFP.control) %>%
#  dplyr::arrange(desc(faire_osaDeGrad.log2FoldChange)) %>%
#  ggplot(aes(faire_osaDeGrad.pvalue, faire_osaDeGrad.log2FoldChange)) +
#  geom_point()
#  dplyr::select(seqnames, start, end) %>%
#  write.table(., file = '~/Desktop/osaDep.bed', col.names = F, row.names = F, quote = F)
# chr2R:11,465,947-11,499,493
inv <- data.frame(seqnames = 'chr2R',
start = 11465947,
end = 11499493) %>%
GRanges()
#track.colors <- RColorBrewer::brewer.pal(n = 4, "PiYG")
track.colors <- c("#50c42d","#c42d85","grey70","grey60","grey50")
deg.ss.browser <- faire.osaDeGrad.ssPool %>%
dplyr::bind_rows(., faire.wt.ssPool[faire.wt.ssPool$grp == 'wt.3LW' | faire.wt.ssPool$grp == 'wt.24h' | faire.wt.ssPool$grp == 'wt.44h',]) %>%
dplyr::mutate(color = track.colors)
deg.tracks <- get_cnr_tracks(deg.ss.browser, ylim = c(0,10))
deg.tracks <- c(deg.tracks$wt_3LW,
deg.tracks$wt_24h,
deg.tracks$wt_44h,
deg.tracks$osaGFP.deGrad_control_faire,
deg.tracks$osaGFP.deGrad_nubG4_faire)
#brdisc.at <- Gviz::AnnotationTrack(range = inv, genome = 'dm6', name = 'brDisc', fill = 'grey', col = 'transparent', background.title = 'white', showTitle = F )
axis <- Gviz::GenomeAxisTrack(scale = 10000)
png('rPlots/4E-browser.png', width = 4, height = 3, res = 300, units = 'in')
Gviz::plotTracks(c(axis, deg.tracks, genetrack), chromosome = seqnames(inv) %>% as.character(),
from = start(inv),
to = end(inv),
cex.axis = 0.3,
cex.title = 0.5,
title.width = 1,
innerMargin = 10)
dev.off()
#TODO - add 36h FAIRE data? better comparison for osa deGrad?
#track.colors <- RColorBrewer::brewer.pal(n = 4, "PiYG")
track.colors <- c("#50c42d","#c42d85","grey70","grey60","grey50")
deg.ss.browser <- faire.osaDeGrad.ssPool %>%
dplyr::bind_rows(., faire.wt.ssPool[faire.wt.ssPool$grp == 'wt.3LW' | faire.wt.ssPool$grp == 'wt.24h',]) %>%
dplyr::mutate(color = track.colors)
#TODO - add 36h FAIRE data? better comparison for osa deGrad?
#track.colors <- RColorBrewer::brewer.pal(n = 4, "PiYG")
track.colors <- c("#50c42d","#c42d85","grey70","grey60","grey50")
deg.ss.browser <- faire.osaDeGrad.ssPool %>%
dplyr::bind_rows(., faire.wt.ssPool[faire.wt.ssPool$grp == 'wt.3LW' | faire.wt.ssPool$grp == 'wt.24h',] | faire.wt.ssPool$grp == 'wt.44h',]) %>%
deg.ss.browser <- faire.osaDeGrad.ssPool %>%
dplyr::bind_rows(., faire.wt.ssPool[faire.wt.ssPool$grp == 'wt.3LW' | faire.wt.ssPool$grp == 'wt.24h' | faire.wt.ssPool$grp == 'wt.44h',]) %>%
dplyr::mutate(color = track.colors)
#TODO - add 36h FAIRE data? better comparison for osa deGrad?
#track.colors <- RColorBrewer::brewer.pal(n = 4, "PiYG")
track.colors <- c("#50c42d","#c42d85","grey70","grey60","grey50")
deg.ss.browser <- faire.osaDeGrad.ssPool %>%
dplyr::bind_rows(., faire.wt.ssPool[faire.wt.ssPool$grp == 'wt.3LW' | faire.wt.ssPool$grp == 'wt.24h' | faire.wt.ssPool$grp == 'wt.44h',]) %>%
dplyr::mutate(color = track.colors)
deg.tracks <- get_cnr_tracks(deg.ss.browser, ylim = c(0,15))
deg.tracks <- c(deg.tracks$wt_3LW,
deg.tracks$wt_24h,
deg.tracks$osaGFP.deGrad_control_faire,
deg.tracks$osaGFP.deGrad_nubG4_faire)
brdisc.at <- Gviz::AnnotationTrack(range = brD, genome = 'dm6', name = 'brDisc', fill = 'grey', col = 'transparent', background.title = 'white', showTitle = F )
axis <- Gviz::GenomeAxisTrack(scale = 1000)
png('rPlots/4D.png', width = 4, height = 6, res = 300, units = 'in')
Gviz::plotTracks(c(axis, deg.tracks, brdisc.at), chromosome = seqnames(brD) %>% as.character(),
from = start(brD + 1000),
to = end(brD + 1000),
cex.axis = 0.3,
cex.title = 0.5,
title.width = 1,
innerMargin = 10)
dev.off()
#TODO - add 36h FAIRE data? better comparison for osa deGrad?
#track.colors <- RColorBrewer::brewer.pal(n = 4, "PiYG")
track.colors <- c("#50c42d","#c42d85","grey70","grey60","grey50")
deg.ss.browser <- faire.osaDeGrad.ssPool %>%
dplyr::bind_rows(., faire.wt.ssPool[faire.wt.ssPool$grp == 'wt.3LW' | faire.wt.ssPool$grp == 'wt.24h' | faire.wt.ssPool$grp == 'wt.44h',]) %>%
dplyr::mutate(color = track.colors)
deg.tracks <- get_cnr_tracks(deg.ss.browser, ylim = c(0,15))
deg.tracks <- c(deg.tracks$wt_3LW,
deg.tracks$wt_24h,
deg.tracks$wt_44h,
deg.tracks$osaGFP.deGrad_control_faire,
deg.tracks$osaGFP.deGrad_nubG4_faire)
brdisc.at <- Gviz::AnnotationTrack(range = brD, genome = 'dm6', name = 'brDisc', fill = 'grey', col = 'transparent', background.title = 'white', showTitle = F )
axis <- Gviz::GenomeAxisTrack(scale = 1000)
png('rPlots/4D.png', width = 4, height = 6, res = 300, units = 'in')
Gviz::plotTracks(c(axis, deg.tracks, brdisc.at), chromosome = seqnames(brD) %>% as.character(),
from = start(brD + 1000),
to = end(brD + 1000),
cex.axis = 0.3,
cex.title = 0.5,
title.width = 1,
innerMargin = 10)
dev.off()
#TODO - add highlights for dependent regions - currently manually annotating in illustrator
#peaks %>%
#  dplyr::filter(assay == 'faire' & experiment == 'osaGFP deGrad Pupal Wing FAIRE' & faireCat.osaDeGrad == 'Osa Dependent') %>%
#  dplyr::filter(osaGFP.deGrad | osaGFP.control) %>%
#  dplyr::arrange(desc(faire_osaDeGrad.log2FoldChange)) %>%
#  ggplot(aes(faire_osaDeGrad.pvalue, faire_osaDeGrad.log2FoldChange)) +
#  geom_point()
#  dplyr::select(seqnames, start, end) %>%
#  write.table(., file = '~/Desktop/osaDep.bed', col.names = F, row.names = F, quote = F)
# chr2R:11,465,947-11,499,493
inv <- data.frame(seqnames = 'chr2R',
start = 11465947,
end = 11499493) %>%
GRanges()
#track.colors <- RColorBrewer::brewer.pal(n = 4, "PiYG")
track.colors <- c("#50c42d","#c42d85","grey70","grey60","grey50")
deg.ss.browser <- faire.osaDeGrad.ssPool %>%
dplyr::bind_rows(., faire.wt.ssPool[faire.wt.ssPool$grp == 'wt.3LW' | faire.wt.ssPool$grp == 'wt.24h' | faire.wt.ssPool$grp == 'wt.44h',]) %>%
dplyr::mutate(color = track.colors)
deg.tracks <- get_cnr_tracks(deg.ss.browser, ylim = c(0,10))
deg.tracks <- c(deg.tracks$wt_3LW,
deg.tracks$wt_24h,
deg.tracks$wt_44h,
deg.tracks$osaGFP.deGrad_control_faire,
deg.tracks$osaGFP.deGrad_nubG4_faire)
#brdisc.at <- Gviz::AnnotationTrack(range = inv, genome = 'dm6', name = 'brDisc', fill = 'grey', col = 'transparent', background.title = 'white', showTitle = F )
axis <- Gviz::GenomeAxisTrack(scale = 10000)
png('rPlots/4E-browser.png', width = 4, height = 3, res = 300, units = 'in')
Gviz::plotTracks(c(axis, deg.tracks, genetrack), chromosome = seqnames(inv) %>% as.character(),
from = start(inv),
to = end(inv),
cex.axis = 0.3,
cex.title = 0.5,
title.width = 1,
innerMargin = 10)
dev.off()
#TODO - add highlights for dependent regions - currently manually annotating in illustrator
#peaks %>%
#  dplyr::filter(assay == 'faire' & experiment == 'osaGFP deGrad Pupal Wing FAIRE' & faireCat.osaDeGrad == 'Osa Dependent') %>%
#  dplyr::filter(osaGFP.deGrad | osaGFP.control) %>%
#  dplyr::arrange(desc(faire_osaDeGrad.log2FoldChange)) %>%
#  ggplot(aes(faire_osaDeGrad.pvalue, faire_osaDeGrad.log2FoldChange)) +
#  geom_point()
#  dplyr::select(seqnames, start, end) %>%
#  write.table(., file = '~/Desktop/osaDep.bed', col.names = F, row.names = F, quote = F)
# chr2R:11,465,947-11,499,493
inv <- data.frame(seqnames = 'chr2R',
start = 11465947,
end = 11499493) %>%
GRanges()
#track.colors <- RColorBrewer::brewer.pal(n = 4, "PiYG")
track.colors <- c("#50c42d","#c42d85","grey70","grey60","grey50")
deg.ss.browser <- faire.osaDeGrad.ssPool %>%
dplyr::bind_rows(., faire.wt.ssPool[faire.wt.ssPool$grp == 'wt.3LW' | faire.wt.ssPool$grp == 'wt.24h' | faire.wt.ssPool$grp == 'wt.44h',]) %>%
dplyr::mutate(color = track.colors)
deg.tracks <- get_cnr_tracks(deg.ss.browser, ylim = c(0,10))
deg.tracks <- c(deg.tracks$wt_3LW,
deg.tracks$wt_24h,
deg.tracks$wt_44h,
deg.tracks$osaGFP.deGrad_control_faire,
deg.tracks$osaGFP.deGrad_nubG4_faire)
#brdisc.at <- Gviz::AnnotationTrack(range = inv, genome = 'dm6', name = 'brDisc', fill = 'grey', col = 'transparent', background.title = 'white', showTitle = F )
axis <- Gviz::GenomeAxisTrack(scale = 10000)
png('rPlots/4E-browser.png', width = 6, height = 3, res = 300, units = 'in')
Gviz::plotTracks(c(axis, deg.tracks, genetrack), chromosome = seqnames(inv) %>% as.character(),
from = start(inv),
to = end(inv),
cex.axis = 0.3,
cex.title = 0.5,
title.width = 1,
innerMargin = 10)
dev.off()
#TODO - add highlights for dependent regions - currently manually annotating in illustrator
#peaks %>%
#  dplyr::filter(assay == 'faire' & experiment == 'osaGFP deGrad Pupal Wing FAIRE' & faireCat.osaDeGrad == 'Osa Dependent') %>%
#  dplyr::filter(osaGFP.deGrad | osaGFP.control) %>%
#  dplyr::arrange(desc(faire_osaDeGrad.log2FoldChange)) %>%
#  ggplot(aes(faire_osaDeGrad.pvalue, faire_osaDeGrad.log2FoldChange)) +
#  geom_point()
#  dplyr::select(seqnames, start, end) %>%
#  write.table(., file = '~/Desktop/osaDep.bed', col.names = F, row.names = F, quote = F)
# chr2R:11,465,947-11,499,493
inv <- data.frame(seqnames = 'chr2R',
start = 11465947,
end = 11499493) %>%
GRanges()
#track.colors <- RColorBrewer::brewer.pal(n = 4, "PiYG")
track.colors <- c("#50c42d","#c42d85","grey70","grey60","grey50")
deg.ss.browser <- faire.osaDeGrad.ssPool %>%
dplyr::bind_rows(., faire.wt.ssPool[faire.wt.ssPool$grp == 'wt.3LW' | faire.wt.ssPool$grp == 'wt.24h' | faire.wt.ssPool$grp == 'wt.44h',]) %>%
dplyr::mutate(color = track.colors)
deg.tracks <- get_cnr_tracks(deg.ss.browser, ylim = c(0,10))
deg.tracks <- c(deg.tracks$wt_3LW,
deg.tracks$wt_24h,
deg.tracks$wt_44h,
deg.tracks$osaGFP.deGrad_control_faire,
deg.tracks$osaGFP.deGrad_nubG4_faire)
#brdisc.at <- Gviz::AnnotationTrack(range = inv, genome = 'dm6', name = 'brDisc', fill = 'grey', col = 'transparent', background.title = 'white', showTitle = F )
axis <- Gviz::GenomeAxisTrack(scale = 10000)
png('rPlots/4E-browser.png', width = 8, height = 5, res = 300, units = 'in')
Gviz::plotTracks(c(axis, deg.tracks, genetrack), chromosome = seqnames(inv) %>% as.character(),
from = start(inv),
to = end(inv),
cex.axis = 0.3,
cex.title = 0.5,
title.width = 1,
innerMargin = 10)
dev.off()
png('rPlots/4E-browser.png', width = 10, height = 5, res = 300, units = 'in')
#TODO - add highlights for dependent regions - currently manually annotating in illustrator
#peaks %>%
#  dplyr::filter(assay == 'faire' & experiment == 'osaGFP deGrad Pupal Wing FAIRE' & faireCat.osaDeGrad == 'Osa Dependent') %>%
#  dplyr::filter(osaGFP.deGrad | osaGFP.control) %>%
#  dplyr::arrange(desc(faire_osaDeGrad.log2FoldChange)) %>%
#  ggplot(aes(faire_osaDeGrad.pvalue, faire_osaDeGrad.log2FoldChange)) +
#  geom_point()
#  dplyr::select(seqnames, start, end) %>%
#  write.table(., file = '~/Desktop/osaDep.bed', col.names = F, row.names = F, quote = F)
# chr2R:11,465,947-11,499,493
inv <- data.frame(seqnames = 'chr2R',
start = 11465947,
end = 11499493) %>%
GRanges()
#track.colors <- RColorBrewer::brewer.pal(n = 4, "PiYG")
track.colors <- c("#50c42d","#c42d85","grey70","grey60","grey50")
deg.ss.browser <- faire.osaDeGrad.ssPool %>%
dplyr::bind_rows(., faire.wt.ssPool[faire.wt.ssPool$grp == 'wt.3LW' | faire.wt.ssPool$grp == 'wt.24h' | faire.wt.ssPool$grp == 'wt.44h',]) %>%
dplyr::mutate(color = track.colors)
deg.tracks <- get_cnr_tracks(deg.ss.browser, ylim = c(0,10))
deg.tracks <- c(deg.tracks$wt_3LW,
deg.tracks$wt_24h,
deg.tracks$wt_44h,
deg.tracks$osaGFP.deGrad_control_faire,
deg.tracks$osaGFP.deGrad_nubG4_faire)
#brdisc.at <- Gviz::AnnotationTrack(range = inv, genome = 'dm6', name = 'brDisc', fill = 'grey', col = 'transparent', background.title = 'white', showTitle = F )
axis <- Gviz::GenomeAxisTrack(scale = 10000)
png('rPlots/4E-browser.png', width = 10, height = 5, res = 300, units = 'in')
Gviz::plotTracks(c(axis, deg.tracks, genetrack), chromosome = seqnames(inv) %>% as.character(),
from = start(inv),
to = end(inv),
cex.axis = 0.3,
cex.title = 0.5,
title.width = 1,
innerMargin = 10)
dev.off()
