dplyr::mutate(peak = as.integer(peak)) %>%
dplyr::left_join(data.frame(fairePeaks.wt.full), ., by = 'peak') %>% # join cluster info to the wt FAIRE peak df
#dplyr::filter(anno.new %in% c('Distal Intergenic', 'Intron'))   # filter out to just "distal regulatory"
#format a dataframe to make the final plots
plot.df <- cluster.df %>%
dplyr::distinct(peak, .keep_all = T) %>%
dplyr::select(peak, km.cluster, WT.3LW, dplyr::matches("faire.\\d{1,2}h.zScore|faire.3LW.zScore")) %>%
tidyr::pivot_longer(dplyr::matches("faire.\\d{1,2}h.zScore|faire.3LW.zScore")) %>%
dplyr::mutate(stage = stringr::str_split_fixed(name,'\\.', n = 3)[,2],
stage = factor(stage, levels = c('3LW', '6h', '18h','24h','36h','44h'))) %>%
# dplyr::group_by(peak) %>%
# dplyr::mutate(frac = value/max(value)) %>%
dplyr::group_by(peak, km.cluster)  %>%
dplyr::mutate(value = value + 1,
norm = log2(value/value[stage == '3LW'])) %>%
dplyr::group_by(km.cluster, stage) %>%
dplyr::summarise(mean = mean(norm),
sd = sd(norm) ,
n = dplyr::n()) %>%
dplyr::group_by( stage) %>%
dplyr::mutate(per = 100 *(n/sum(n)),
km.cluster = factor(km.cluster, levels = rev(c(4,8,1,2,5,7,6,3))))
####
# make a dataframe with the cluster info
cluster.df <- data.frame(km$cluster) %>%
tibble::rownames_to_column('peak') %>%
dplyr::mutate(peak = as.integer(peak)) %>%
dplyr::left_join(data.frame(fairePeaks.wt.full), ., by = 'peak')  # join cluster info to the wt FAIRE peak df
#format a dataframe to make the final plots
plot.df <- cluster.df %>%
dplyr::distinct(peak, .keep_all = T) %>%
dplyr::select(peak, km.cluster, WT.3LW, dplyr::matches("faire.\\d{1,2}h.zScore|faire.3LW.zScore")) %>%
tidyr::pivot_longer(dplyr::matches("faire.\\d{1,2}h.zScore|faire.3LW.zScore")) %>%
dplyr::mutate(stage = stringr::str_split_fixed(name,'\\.', n = 3)[,2],
stage = factor(stage, levels = c('3LW', '6h', '18h','24h','36h','44h'))) %>%
# dplyr::group_by(peak) %>%
# dplyr::mutate(frac = value/max(value)) %>%
dplyr::group_by(peak, km.cluster)  %>%
dplyr::mutate(value = value + 1,
norm = log2(value/value[stage == '3LW'])) %>%
dplyr::group_by(km.cluster, stage) %>%
dplyr::summarise(mean = mean(norm),
sd = sd(norm) ,
n = dplyr::n()) %>%
dplyr::group_by( stage) %>%
dplyr::mutate(per = 100 *(n/sum(n)),
km.cluster = factor(km.cluster, levels = rev(c(4,8,1,2,5,7,6,3))))
#     ggplot(aes(stage,km.cluster, fill = mean))+
#geom_tile() +
plot.df %>%
dplyr::mutate(group = ifelse(km.cluster != 4, 'dynamic', 'static')) %>%
ggplot(aes(stage, y = mean, group = km.cluster))+
geom_ribbon(aes(ymin = mean - sd, ymax = mean+sd, x = stage, fill = group),
alpha = 0.5) +
geom_line() +
scale_fill_manual(values = c('#46AEDB', 'grey40')) +
#  scale_color_manual(values = c('#DE4A47', '#9CBD36')) +
ylab('mean log2(zScore/zScore[3LW])') +
facet_wrap(~km.cluster, ncol = 2, nrow = 4) +
theme(legend.position = 'none')
plot.df %>%
dplyr::ungroup() %>%
#dplyr::mutate(km.cluster = forcats::fct_rev(km.cluster)) %>%
dplyr::select(km.cluster, n, per) %>%
dplyr::distinct() %>%
dplyr::mutate(group = ifelse(km.cluster == '4', 'Static', 'Dynamic')) %>%
#dplyr::group_by(group)
#dplyr::summarise(sum = sum(per),
#                 n = n())
ggplot(aes('', y = per, fill = km.cluster, group = km.cluster)) +
geom_bar(stat = 'identity', position = 'stack', alpha = 0.8, color = 'black') +
#coord_polar(theta = 'y') +
geom_text(aes(y = per, x = 1.2, vjust = 1.5, label = paste0('(',round(per, digits = 1),'%)')), position = 'stack') +
geom_text(aes(y = per,  x = 0.75, vjust = 1.5, label = paste0('n=',n)), position = 'stack') +
scale_fill_manual(values = c(blues, 'grey60')) +
theme(axis.text = element_blank(),
axis.title = element_blank(),
axis.ticks = element_blank(),
legend.title = element_blank(),
legend.key.size = unit(0.5, 'cm'),
legend.position = 'none',
legend.direction = "horizontal",
#strip.background = element_blank(),
panel.background = element_blank(),
strip.text.x = element_blank(),
#panel.spacing.y = unit(1, 'lines'))
)
plot.df %>%
dplyr::mutate(group = ifelse(km.cluster != 4, 'dynamic', 'static')) %>%
ggplot(aes(stage, y = mean, group = km.cluster))+
geom_ribbon(aes(ymin = mean - sd, ymax = mean+sd, x = stage, fill = group),
alpha = 0.5) +
geom_line() +
scale_fill_manual(values = c('#46AEDB', 'grey40')) +
#  scale_color_manual(values = c('#DE4A47', '#9CBD36')) +
ylab('mean log2(zScore/zScore[3LW])') +
facet_wrap(~km.cluster, ncol = 2, nrow = 4) +
theme(legend.position = 'none')
#ggsave('rPlots/5G_1.png', width = 3, height = 5)
# scale_fill_viridis_c() +
# theme(axis.text = element_text(size = 15),
#       axis.title = element_blank(),
#       legend.title = element_blank(),
#       legend.key.size = unit(1, 'cm'),
#       strip.background = element_blank(),
# strip.text.x = element_blank(),
# panel.spacing.y = unit(1, 'lines'),
# legend.position = 'bottom',
# legend.direction = "horizontal") +
#  facet_wrap(~WT.3LW, ncol = 1)
## fraction barplot
plot.df %>%
dplyr::ungroup() %>%
#dplyr::mutate(km.cluster = forcats::fct_rev(km.cluster)) %>%
dplyr::select(km.cluster, n, per) %>%
dplyr::distinct() %>%
dplyr::mutate(group = ifelse(km.cluster == '4', 'Static', 'Dynamic')) %>%
#dplyr::group_by(group)
#dplyr::summarise(sum = sum(per),
#                 n = n())
ggplot(aes('', y = per, fill = km.cluster, group = km.cluster)) +
geom_bar(stat = 'identity', position = 'stack', alpha = 0.8, color = 'black') +
#coord_polar(theta = 'y') +
geom_text(aes(y = per, x = 1.2, vjust = 1.5, label = paste0('(',round(per, digits = 1),'%)')), position = 'stack') +
geom_text(aes(y = per,  x = 0.75, vjust = 1.5, label = paste0('n=',n)), position = 'stack') +
scale_fill_manual(values = c(blues, 'grey60')) +
theme(axis.text = element_blank(),
axis.title = element_blank(),
axis.ticks = element_blank(),
legend.title = element_blank(),
legend.key.size = unit(0.5, 'cm'),
legend.position = 'none',
legend.direction = "horizontal",
#strip.background = element_blank(),
panel.background = element_blank(),
strip.text.x = element_blank(),
#panel.spacing.y = unit(1, 'lines'))
)
plot.df %>%
dplyr::ungroup() %>%
#dplyr::mutate(km.cluster = forcats::fct_rev(km.cluster)) %>%
dplyr::select(km.cluster, n, per) %>%
dplyr::distinct() %>%
dplyr::mutate(group = ifelse(km.cluster == '4', 'Static', 'Dynamic')) %>%
#dplyr::group_by(group)
#dplyr::summarise(sum = sum(per),
#                 n = n())
ggplot(aes('', y = per, fill = km.cluster, group = km.cluster)) +
geom_bar(stat = 'identity', position = 'stack', alpha = 0.8, color = 'black') +
#coord_polar(theta = 'y') +
geom_text(aes(y = per, x = 1.2, vjust = 1.5, label = paste0('(',round(per, digits = 1),'%)')), position = 'stack') +
geom_text(aes(y = per,  x = 0.75, vjust = 1.5, label = paste0('n=',n)), position = 'stack') +
scale_fill_manual(values = c(blues, 'grey60')) +
theme(#axis.text = element_blank(),
axis.title = element_blank(),
axis.ticks = element_blank(),
legend.title = element_blank(),
legend.key.size = unit(0.5, 'cm'),
legend.position = 'none',
legend.direction = "horizontal",
#strip.background = element_blank(),
panel.background = element_blank(),
strip.text.x = element_blank(),
#panel.spacing.y = unit(1, 'lines'))
)
plot.df %>%
dplyr::ungroup() %>%
#dplyr::mutate(km.cluster = forcats::fct_rev(km.cluster)) %>%
dplyr::select(km.cluster, n, per) %>%
dplyr::distinct() %>%
dplyr::mutate(group = ifelse(km.cluster == '4', 'Static', 'Dynamic')) %>%
#dplyr::group_by(group)
#dplyr::summarise(sum = sum(per),
#                 n = n())
ggplot(aes('', y = per, fill = km.cluster, group = km.cluster, fill = km.cluster)) +
geom_bar(stat = 'identity', position = 'stack', alpha = 0.8, color = 'black') +
#coord_polar(theta = 'y') +
geom_text(aes(y = per, x = 1.2, vjust = 1.5, label = paste0('(',round(per, digits = 1),'%)')), position = 'stack') +
geom_text(aes(y = per,  x = 0.75, vjust = 1.5, label = paste0('n=',n)), position = 'stack') +
#scale_fill_manual(values = c(blues, 'grey60')) +
theme(#axis.text = element_blank(),
axis.title = element_blank(),
axis.ticks = element_blank(),
legend.title = element_blank(),
legend.key.size = unit(0.5, 'cm'),
legend.position = 'none',
legend.direction = "horizontal",
#strip.background = element_blank(),
panel.background = element_blank(),
strip.text.x = element_blank(),
#panel.spacing.y = unit(1, 'lines'))
)
plot.df %>%
dplyr::ungroup() %>%
#dplyr::mutate(km.cluster = forcats::fct_rev(km.cluster)) %>%
dplyr::select(km.cluster, n, per) %>%
dplyr::distinct() %>%
dplyr::mutate(group = ifelse(km.cluster == '4', 'Static', 'Dynamic')) %>%
#dplyr::group_by(group)
#dplyr::summarise(sum = sum(per),
#                 n = n())
ggplot(aes('', y = per, fill = km.cluster, group = km.cluster, fill = km.cluster)) +
geom_bar(stat = 'identity', position = 'stack', alpha = 0.8, color = 'black') +
#coord_polar(theta = 'y') +
geom_text(aes(y = per, x = 1.2, vjust = 1.5, label = paste0('(',round(per, digits = 1),'%)')), position = 'stack') +
geom_text(aes(y = per,  x = 0.75, vjust = 1.5, label = paste0('n=',n)), position = 'stack') +
#scale_fill_manual(values = c(blues, 'grey60')) +
theme(#axis.text = element_blank(),
axis.title = element_blank(),
axis.ticks = element_blank(),
legend.title = element_blank(),
legend.key.size = unit(0.5, 'cm'),
#legend.position = 'none',
legend.direction = "horizontal",
#strip.background = element_blank(),
panel.background = element_blank(),
strip.text.x = element_blank(),
#panel.spacing.y = unit(1, 'lines'))
)
#     ggplot(aes(stage,km.cluster, fill = mean))+
#geom_tile() +
plot.df %>%
dplyr::mutate(group = ifelse(km.cluster != 4, 'dynamic', 'static')) %>%
ggplot(aes(stage, y = mean, group = km.cluster))+
geom_ribbon(aes(ymin = mean - sd, ymax = mean+sd, x = stage, fill = group),
alpha = 0.5) +
geom_line() +
scale_fill_manual(values = c('#46AEDB', 'grey40')) +
#  scale_color_manual(values = c('#DE4A47', '#9CBD36')) +
ylab('mean log2(zScore/zScore[3LW])') +
facet_wrap(~km.cluster, ncol = 2, nrow = 4) +
theme(legend.position = 'none')
plot.df %>%
dplyr::mutate(group = ifelse(km.cluster != 4, 'dynamic', 'static')) %>%
ggplot(aes(stage, y = mean, group = km.cluster))+
geom_ribbon(aes(ymin = mean - sd, ymax = mean+sd, x = stage, fill = group),
alpha = 0.5) +
geom_line() +
scale_fill_manual(values = c('#46AEDB', 'grey40')) +
#  scale_color_manual(values = c('#DE4A47', '#9CBD36')) +
ylab('mean log2(zScore/zScore[3LW])') +
facet_wrap(~km.cluster, ncol = 2, nrow = 4) +
theme(legend.position = 'none')
#ggsave('rPlots/5G_1.png', width = 3, height = 5)
# scale_fill_viridis_c() +
# theme(axis.text = element_text(size = 15),
#       axis.title = element_blank(),
#       legend.title = element_blank(),
#       legend.key.size = unit(1, 'cm'),
#       strip.background = element_blank(),
# strip.text.x = element_blank(),
# panel.spacing.y = unit(1, 'lines'),
# legend.position = 'bottom',
# legend.direction = "horizontal") +
#  facet_wrap(~WT.3LW, ncol = 1)
## fraction barplot
plot.df %>%
dplyr::ungroup() %>%
#dplyr::mutate(km.cluster = forcats::fct_rev(km.cluster)) %>%
dplyr::select(km.cluster, n, per) %>%
dplyr::distinct() %>%
dplyr::mutate(group = ifelse(km.cluster == '4', 'Static', 'Dynamic')) %>%
#dplyr::group_by(group)
#dplyr::summarise(sum = sum(per),
#                 n = n())
ggplot(aes('', y = per, fill = km.cluster, group = km.cluster, fill = km.cluster)) +
geom_bar(stat = 'identity', position = 'stack', alpha = 0.8, color = 'black') +
#coord_polar(theta = 'y') +
geom_text(aes(y = per, x = 1.2, vjust = 1.5, label = paste0('(',round(per, digits = 1),'%)')), position = 'stack') +
geom_text(aes(y = per,  x = 0.75, vjust = 1.5, label = paste0('n=',n)), position = 'stack') +
#scale_fill_manual(values = c(blues, 'grey60')) +
theme(#axis.text = element_blank(),
axis.title = element_blank(),
axis.ticks = element_blank(),
legend.title = element_blank(),
legend.key.size = unit(0.5, 'cm'),
#legend.position = 'none',
legend.direction = "horizontal",
#strip.background = element_blank(),
panel.background = element_blank(),
strip.text.x = element_blank(),
#panel.spacing.y = unit(1, 'lines'))
)
####
# make a dataframe with the cluster info
cluster.df <- data.frame(km$cluster) %>%
tibble::rownames_to_column('peak') %>%
dplyr::mutate(peak = as.integer(peak)) %>%
dplyr::left_join(data.frame(fairePeaks.wt.full), ., by = 'peak') %>% # join cluster info to the wt FAIRE peak df
dplyr::filter(anno.new %in% c('Distal Intergenic', 'Intron'))   # filter out to just "distal regulatory"
# settings
cluster.levels = c('4', '7', '8','5','1','3','6','2')
#blues <- colorRampPalette(c("#6be2fa","#0047a3"))(7)
blues <- colorRampPalette(c("#6be2fa","#6be2fa"))(7)
set.seed(1230412)
# make matrix of FAIRE zScore within Osa binding sites by stage
#FAIRE zScore are from pooled replicates (samtools merge of bam files)
tidymat <- fairePeaks.wt.full %>%
#  data.frame() %>%
#  dplyr::filter(anno.new %in% c('Distal Intergenic', 'Intron')) %>%
dplyr::select(peak, dplyr::matches("faire.\\d{1,2}h.zScore|faire.3LW.zScore")) %>%
tidyr::pivot_longer(!peak) %>%
dplyr::mutate(stage = stringr::str_split_fixed(name,'\\.', n = 3)[,2],
stage = factor(stage, levels = c('3LW', '6h', '18h','24h','36h','44h'))) %>%
dplyr::group_by(peak) %>%
dplyr::mutate(value = value + 1,
frac = value/max(value),
peak = as.character(peak)) %>%
tidyr::pivot_wider(id_cols = peak, names_from = stage, values_from = frac) %>%
tibble::column_to_rownames('peak') %>%
as.matrix()
# based of nystrom
# using K = 8 because of previously identified 8 discernible patterns of dynamic accessibility (Nystrom & Niederhuber 2020)
km <- kmeans(tidymat, 8, nstart = 24, iter.max = 15)
figure_col_fun <- circlize::colorRamp2(breaks = seq(0,1,by=0.25), colors = viridis::viridis(5))
k_df <- km$cluster %>%
data.frame %>%
dplyr::rename(k = ".") %>%
tibble::rownames_to_column("id")
####
# make a dataframe with the cluster info
cluster.df <- data.frame(km$cluster) %>%
tibble::rownames_to_column('peak') %>%
dplyr::mutate(peak = as.integer(peak)) %>%
dplyr::left_join(data.frame(fairePeaks.wt.full), ., by = 'peak') %>% # join cluster info to the wt FAIRE peak df
dplyr::filter(anno.new %in% c('Distal Intergenic', 'Intron'))   # filter out to just "distal regulatory"
#format a dataframe to make the final plots
plot.df <- cluster.df %>%
dplyr::distinct(peak, .keep_all = T) %>%
dplyr::select(peak, km.cluster, WT.3LW, dplyr::matches("faire.\\d{1,2}h.zScore|faire.3LW.zScore")) %>%
tidyr::pivot_longer(dplyr::matches("faire.\\d{1,2}h.zScore|faire.3LW.zScore")) %>%
dplyr::mutate(stage = stringr::str_split_fixed(name,'\\.', n = 3)[,2],
stage = factor(stage, levels = c('3LW', '6h', '18h','24h','36h','44h'))) %>%
# dplyr::group_by(peak) %>%
# dplyr::mutate(frac = value/max(value)) %>%
dplyr::group_by(peak, km.cluster)  %>%
dplyr::mutate(value = value + 1,
norm = log2(value/value[stage == '3LW'])) %>%
dplyr::group_by(km.cluster, stage) %>%
dplyr::summarise(mean = mean(norm),
sd = sd(norm) ,
n = dplyr::n()) %>%
dplyr::group_by( stage) %>%
dplyr::mutate(per = 100 *(n/sum(n)),
km.cluster = factor(km.cluster, levels = rev(c(4,8,1,2,5,7,6,3))))
## supp plot
#plot.df %>%
#     ggplot(aes(stage,'', fill = mean, height = per))+
#     geom_tile() +
#  scale_fill_viridis_c() +
#  theme(axis.text = element_text(size = 15),
#        axis.title = element_blank(),
#        legend.title = element_blank(),
#        legend.key.size = unit(0.5, 'cm'),
#        strip.background = element_blank(),
#  strip.text.x = element_blank(),
#  panel.spacing.y = unit(0, 'lines')) +
#   facet_wrap(km.cluster~WT.3LW, nrow = 8, ncol = 2)
#
## without height adjust
#     ggplot(aes(stage,km.cluster, fill = mean))+
#geom_tile() +
plot.df %>%
dplyr::mutate(group = ifelse(km.cluster != 4, 'dynamic', 'static')) %>%
ggplot(aes(stage, y = mean, group = km.cluster))+
geom_ribbon(aes(ymin = mean - sd, ymax = mean+sd, x = stage, fill = group),
alpha = 0.5) +
geom_line() +
scale_fill_manual(values = c('#46AEDB', 'grey40')) +
#  scale_color_manual(values = c('#DE4A47', '#9CBD36')) +
ylab('mean log2(zScore/zScore[3LW])') +
facet_wrap(~km.cluster, ncol = 2, nrow = 4) +
theme(legend.position = 'none')
#ggsave('rPlots/5G_1.png', width = 3, height = 5)
# scale_fill_viridis_c() +
# theme(axis.text = element_text(size = 15),
#       axis.title = element_blank(),
#       legend.title = element_blank(),
#       legend.key.size = unit(1, 'cm'),
#       strip.background = element_blank(),
# strip.text.x = element_blank(),
# panel.spacing.y = unit(1, 'lines'),
# legend.position = 'bottom',
# legend.direction = "horizontal") +
#  facet_wrap(~WT.3LW, ncol = 1)
## fraction barplot
plot.df %>%
dplyr::ungroup() %>%
#dplyr::mutate(km.cluster = forcats::fct_rev(km.cluster)) %>%
dplyr::select(km.cluster, n, per) %>%
dplyr::distinct() %>%
dplyr::mutate(group = ifelse(km.cluster == '4', 'Static', 'Dynamic')) %>%
#dplyr::group_by(group)
#dplyr::summarise(sum = sum(per),
#                 n = n())
ggplot(aes('', y = per, fill = km.cluster, group = km.cluster, fill = km.cluster)) +
geom_bar(stat = 'identity', position = 'stack', alpha = 0.8, color = 'black') +
#coord_polar(theta = 'y') +
geom_text(aes(y = per, x = 1.2, vjust = 1.5, label = paste0('(',round(per, digits = 1),'%)')), position = 'stack') +
geom_text(aes(y = per,  x = 0.75, vjust = 1.5, label = paste0('n=',n)), position = 'stack') +
#scale_fill_manual(values = c(blues, 'grey60')) +
theme(#axis.text = element_blank(),
axis.title = element_blank(),
axis.ticks = element_blank(),
legend.title = element_blank(),
legend.key.size = unit(0.5, 'cm'),
#legend.position = 'none',
legend.direction = "horizontal",
#strip.background = element_blank(),
panel.background = element_blank(),
strip.text.x = element_blank(),
#panel.spacing.y = unit(1, 'lines'))
)
#ggsave('rPlots/5G-2.png', width = 2, height = 6)
#     ggplot(aes(stage,km.cluster, fill = mean))+
#geom_tile() +
plot.df %>%
dplyr::mutate(group = ifelse(km.cluster != 4, 'dynamic', 'static')) %>%
ggplot(aes(stage, y = mean, group = km.cluster))+
geom_ribbon(aes(ymin = mean - sd, ymax = mean+sd, x = stage, fill = km.cluster),
alpha = 0.5) +
geom_line() +
# scale_fill_manual(values = c('#46AEDB', 'grey40')) +
#  scale_color_manual(values = c('#DE4A47', '#9CBD36')) +
ylab('mean log2(zScore/zScore[3LW])') +
facet_wrap(~km.cluster, ncol = 2, nrow = 4) +
theme(legend.position = 'none')
plot.df %>%
dplyr::mutate(group = ifelse(km.cluster != 4, 'dynamic', 'static')) %>%
ggplot(aes(stage, y = mean, group = km.cluster))+
geom_ribbon(aes(ymin = mean - sd, ymax = mean+sd, x = stage, fill = km.cluster),
alpha = 0.5) +
geom_line() +
# scale_fill_manual(values = c('#46AEDB', 'grey40')) +
#  scale_color_manual(values = c('#DE4A47', '#9CBD36')) +
ylab('mean log2(zScore/zScore[3LW])') +
facet_wrap(~km.cluster, ncol = 2, nrow = 4) +
theme(legend.position = 'none')
#ggsave('rPlots/5G_1.png', width = 3, height = 5)
# scale_fill_viridis_c() +
# theme(axis.text = element_text(size = 15),
#       axis.title = element_blank(),
#       legend.title = element_blank(),
#       legend.key.size = unit(1, 'cm'),
#       strip.background = element_blank(),
# strip.text.x = element_blank(),
# panel.spacing.y = unit(1, 'lines'),
# legend.position = 'bottom',
# legend.direction = "horizontal") +
#  facet_wrap(~WT.3LW, ncol = 1)
## fraction barplot
plot.df %>%
dplyr::ungroup() %>%
#dplyr::mutate(km.cluster = forcats::fct_rev(km.cluster)) %>%
dplyr::select(km.cluster, n, per) %>%
dplyr::distinct() %>%
dplyr::mutate(group = ifelse(km.cluster == '4', 'Static', 'Dynamic')) %>%
#dplyr::group_by(group)
#dplyr::summarise(sum = sum(per),
#                 n = n())
ggplot(aes('', y = per, fill = km.cluster, group = km.cluster, fill = km.cluster)) +
geom_bar(stat = 'identity', position = 'stack', alpha = 0.8, color = 'black') +
#coord_polar(theta = 'y') +
geom_text(aes(y = per, x = 1.2, vjust = 1.5, label = paste0('(',round(per, digits = 1),'%)')), position = 'stack') +
geom_text(aes(y = per,  x = 0.75, vjust = 1.5, label = paste0('n=',n)), position = 'stack') +
#scale_fill_manual(values = c(blues, 'grey60')) +
theme(#axis.text = element_blank(),
axis.title = element_blank(),
axis.ticks = element_blank(),
legend.title = element_blank(),
legend.key.size = unit(0.5, 'cm'),
#legend.position = 'none',
legend.direction = "horizontal",
#strip.background = element_blank(),
panel.background = element_blank(),
strip.text.x = element_blank(),
#panel.spacing.y = unit(1, 'lines'))
)
hairless <- read.table('bed/hairless-dm6.bed', sep = '\t')
colnames(hairless) <- c('seqnames', 'start', 'end')
GRanges(hairless)
hairless.df <- hairless %>%
#  data.frame() %>%
dplyr::mutate(osa = ifelse(GRanges(.) %over% osaPeaks.full, 'Yes', 'No'),
osa = factor(osa, levels = c('Yes','No')),
osa.sub = dplyr::case_when(GRanges(.) %over% osaPeaks.enhancers.full ~ 'Distal',
GRanges(.) %over% osaPeaks.full ~ 'Any',
T ~ 'No'))
hairless.df %>%
dplyr::group_by(osa) %>% # using any overlap with  osa peaks - not just distal
dplyr::tally() %>%
dplyr::mutate(frac = n/sum(n)) %>%
ggplot(aes('',y = frac, fill = osa)) +
geom_bar(stat = 'identity') +
geom_text(aes(label = n, y = frac), vjust = 3,  size = 6, position = 'stack') +
scale_fill_manual(values = c('#fcba03','grey60'), name = 'Overlaps\nOsa Peak') +
annotate('text', x = 1, y = 1.02, label = '**') +
theme(axis.title = element_blank(),
axis.text = element_text(size = 12),
axis.ticks.x = element_blank(),
legend.position = 'bottom')
ggsave('rPlots/5G.png', dpi = 300, width = 1.5, height = 4)
hairless.df %>%
dplyr::group_by(osa.sub) %>%
dplyr::tally() %>%
dplyr::filter(osa.sub != 'No') %>%
dplyr::mutate(nfrac = n/sum(n))
enrichtest.hairless <- ChIPseeker::enrichPeakOverlap('bed/osaPeaks-full.bed',
'bed/hairless-dm6.bed',
TxDb = dm6.TxDb,
nShuffle = 1000)
enrichtest.hairless
