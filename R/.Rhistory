})
names(deg.mats) <- faire.ss %>%
dplyr::filter(experiment == 'osaGFP deGrad FAIRE') %>%
dplyr::mutate(nm = paste0(stringr::str_split_fixed(id,'_|\\.', n = 5)[,3],
'.',
stringr::str_split_fixed(id,'_|\\.', n = 5)[,5])) %>%
.$nm
common_min = min(unlist(deg.mats))
common_max = max(unlist(deg.mats))
col_fun = circlize::colorRamp2(seq(common_min, common_max, length.out = 6), viridis.hex)
#deg.count <- fairePeaks.deg %>%
#  data.frame() %>%
#  dplyr::group_by(faireCat.osaDeGrad) %>%
#  dplyr::tally() %>%
#  .$n
#
#names(deg.count) <- c('Osa Dependent', 'Osa Ectopic', 'Osa Independent')
#
#groups <- fairePeaks.deg$faireCat.osaDeGrad
#
#lgd = Legend(at = c("Osa Dependent", "Osa Ectopic", "Osa Independent"), legend_gp = gpar(fill = 2:4))
deg.hms <- purrr::map(names(deg.mats), function(x) {
if(grepl('control.Rep1',x)){
EnrichedHeatmap(deg.mats[[x]],
axis_name = c(-1, 0, 1),
pos_line = F,
column_title = x,
col = col_fun,
name = 'zScore',
row_title = NULL,
top_annotation = HeatmapAnnotation(enriched = anno_enriched(gp = gpar(col = 2:4, lwd = 2), axis_param = list(side = 'left', facing = 'outside'), ylim = c(0,8))),
use_raster = F)
}else{
EnrichedHeatmap(deg.mats[[x]],
axis_name = c(-1, 0, 1),
pos_line = F,
column_title = x,
col = col_fun,
show_heatmap_legend = F,
row_title = NULL,
top_annotation = HeatmapAnnotation(enriched = anno_enriched(gp = gpar(col = 2:4, lwd = 2), ylim = c(0,8), axis = F)),
use_raster = F)
}
})
names(deg.hms) <- names(deg.mats)
hms <- deg.hms$control.Rep1 + deg.hms$control.Rep2 + deg.hms$nubG4.Rep1 + deg.hms$nubG4.Rep2
png('rPlots/4E.png', width = 4, height = 5, units = 'in', res = 300)
ComplexHeatmap::draw(hms, merge_legend = T, heatmap_legend_side = 'right', )
dev.off()
#deg.count <- fairePeaks.deg %>%
#  data.frame() %>%
#  dplyr::group_by(faireCat.osaDeGrad) %>%
#  dplyr::tally() %>%
#  .$n
#
#names(deg.count) <- c('Osa Dependent', 'Osa Ectopic', 'Osa Independent')
#
groups <- fairePeaks.deg$cnr.peakCat
#deg.count <- fairePeaks.deg %>%
#  data.frame() %>%
#  dplyr::group_by(faireCat.osaDeGrad) %>%
#  dplyr::tally() %>%
#  .$n
#
#names(deg.count) <- c('Osa Dependent', 'Osa Ectopic', 'Osa Independent')
#
fairePeaks.deg$cnr.peakCat
fairePeaks.deg
groups <- fairePeaks.deg %>%
data.frame() %>%
dplyr::mutate(new.cat <- ifelse(osa.cnr & !yw.cnr, 'Osa Bound', 'Osa Unbound')) %>%
.$new.cat
fairePeaks.osaDep <- fairePeaks.deg %>%
data.frame() %>%
dplyr::filter(faireCat.osaDeGrad == 'Osa Dependent') %>%
GRanges()
deg.mats <- purrr::map(deg.bws, ~{
normalizeToMatrix(., fairePeaks.osaDep, value_column = 'score', keep = c(0.11,0.99), extend = 1000 )
})
names(deg.mats) <- faire.ss %>%
dplyr::filter(experiment == 'osaGFP deGrad FAIRE') %>%
dplyr::mutate(nm = paste0(stringr::str_split_fixed(id,'_|\\.', n = 5)[,3],
'.',
stringr::str_split_fixed(id,'_|\\.', n = 5)[,5])) %>%
.$nm
common_min = min(unlist(deg.mats))
common_max = max(unlist(deg.mats))
col_fun = circlize::colorRamp2(seq(common_min, common_max, length.out = 6), viridis.hex)
#deg.count <- fairePeaks.deg %>%
#  data.frame() %>%
#  dplyr::group_by(faireCat.osaDeGrad) %>%
#  dplyr::tally() %>%
#  .$n
#
#names(deg.count) <- c('Osa Dependent', 'Osa Ectopic', 'Osa Independent')
#
fairePeaks.deg$cnr.peakCat
groups <- fairePeaks.deg %>%
data.frame() %>%
dplyr::mutate(new.cat <- ifelse(osa.cnr & !yw.cnr, 'Osa Bound', 'Osa Unbound')) %>%
.$new.cat
lgd = Legend(at = c("Osa Bound", "Osa Unbound"), legend_gp = gpar(fill = 2:3))
deg.hms <- purrr::map(names(deg.mats), function(x) {
if(grepl('control.Rep1',x)){
EnrichedHeatmap(deg.mats[[x]],
axis_name = c(-1, 0, 1),
pos_line = F,
column_title = x,
col = col_fun,
name = 'zScore',
row_title = NULL,
top_annotation = HeatmapAnnotation(enriched = anno_enriched(gp = gpar(col = 2:4, lwd = 2), axis_param = list(side = 'left', facing = 'outside'), ylim = c(0,8))),
left_annotation = rowAnnotation(textbox = anno_textbox(align_to = groups,
#as.list(deg.count),
side = 'left',
background_gp = gpar(fill = NA, col = NA),
gp = gpar(col = 'black'),
padding = unit(0, 'mm')),
groups = anno_block(gp = gpar(fill = 2:4), show_name = F)),
use_raster = F)
}else{
EnrichedHeatmap(deg.mats[[x]],
axis_name = c(-1, 0, 1),
pos_line = F,
column_title = x,
col = col_fun,
show_heatmap_legend = F,
row_title = NULL,
top_annotation = HeatmapAnnotation(enriched = anno_enriched(gp = gpar(col = 2:4, lwd = 2), ylim = c(0,8), axis = F)),
use_raster = F)
}
})
fairePeaks.osaDep <- fairePeaks.deg %>%
data.frame() %>%
dplyr::filter(faireCat.osaDeGrad == 'Osa Dependent') %>%
GRanges()
deg.mats <- purrr::map(deg.bws, ~{
normalizeToMatrix(., fairePeaks.osaDep, value_column = 'score', keep = c(0.11,0.99), extend = 1000 )
})
names(deg.mats) <- faire.ss %>%
dplyr::filter(experiment == 'osaGFP deGrad FAIRE') %>%
dplyr::mutate(nm = paste0(stringr::str_split_fixed(id,'_|\\.', n = 5)[,3],
'.',
stringr::str_split_fixed(id,'_|\\.', n = 5)[,5])) %>%
.$nm
common_min = min(unlist(deg.mats))
common_max = max(unlist(deg.mats))
col_fun = circlize::colorRamp2(seq(common_min, common_max, length.out = 6), viridis.hex)
#deg.count <- fairePeaks.deg %>%
#  data.frame() %>%
#  dplyr::group_by(faireCat.osaDeGrad) %>%
#  dplyr::tally() %>%
#  .$n
#
#names(deg.count) <- c('Osa Dependent', 'Osa Ectopic', 'Osa Independent')
#
fairePeaks.deg$cnr.peakCat
groups <- fairePeaks.deg %>%
data.frame() %>%
dplyr::mutate(new.cat <- ifelse(osa.cnr & !yw.cnr, 'Osa Bound', 'Osa Unbound')) %>%
.$new.cat
lgd = Legend(at = c("Osa Bound", "Osa Unbound"), legend_gp = gpar(fill = 2:3))
deg.hms <- purrr::map(names(deg.mats), function(x) {
if(grepl('control.Rep1',x)){
EnrichedHeatmap(deg.mats[[x]],
axis_name = c(-1, 0, 1),
pos_line = F,
column_title = x,
col = col_fun,
name = 'zScore',
row_title = NULL,
top_annotation = HeatmapAnnotation(enriched = anno_enriched(gp = gpar(col = 2:4, lwd = 2), axis_param = list(side = 'left', facing = 'outside'), ylim = c(0,8))),
left_annotation = rowAnnotation(groups = anno_block(gp = gpar(fill = 2:4), show_name = F)),
use_raster = F)
}else{
EnrichedHeatmap(deg.mats[[x]],
axis_name = c(-1, 0, 1),
pos_line = F,
column_title = x,
col = col_fun,
show_heatmap_legend = F,
row_title = NULL,
top_annotation = HeatmapAnnotation(enriched = anno_enriched(gp = gpar(col = 2:4, lwd = 2), ylim = c(0,8), axis = F)),
use_raster = F)
}
})
names(deg.hms) <- names(deg.mats)
hms <- deg.hms$control.Rep1 + deg.hms$control.Rep2 + deg.hms$nubG4.Rep1 + deg.hms$nubG4.Rep2
png('rPlots/4E.png', width = 4, height = 5, units = 'in', res = 300)
#ComplexHeatmap::draw(hms, merge_legend = T, heatmap_legend_side = 'right', )
ComplexHeatmap::draw(hms,annotation_legend_list = c(lgd), row_split = groups, merge_legend = T, heatmap_legend_side = 'bottom', )
groups
fairePeaks.osaDep <- fairePeaks.deg %>%
data.frame() %>%
dplyr::filter(faireCat.osaDeGrad == 'Osa Dependent') %>%
GRanges()
deg.mats <- purrr::map(deg.bws, ~{
normalizeToMatrix(., fairePeaks.osaDep, value_column = 'score', keep = c(0.11,0.99), extend = 1000 )
})
names(deg.mats) <- faire.ss %>%
dplyr::filter(experiment == 'osaGFP deGrad FAIRE') %>%
dplyr::mutate(nm = paste0(stringr::str_split_fixed(id,'_|\\.', n = 5)[,3],
'.',
stringr::str_split_fixed(id,'_|\\.', n = 5)[,5])) %>%
.$nm
common_min = min(unlist(deg.mats))
common_max = max(unlist(deg.mats))
col_fun = circlize::colorRamp2(seq(common_min, common_max, length.out = 6), viridis.hex)
#deg.count <- fairePeaks.deg %>%
#  data.frame() %>%
#  dplyr::group_by(faireCat.osaDeGrad) %>%
#  dplyr::tally() %>%
#  .$n
#
#names(deg.count) <- c('Osa Dependent', 'Osa Ectopic', 'Osa Independent')
#
groups <- fairePeaks.deg %>%
data.frame() %>%
dplyr::filter(faireCat.osaDeGrad == 'Osa Dependent') %>%
dplyr::mutate(new.cat <- ifelse(osa.cnr & !yw.cnr, 'Osa Bound', 'Osa Unbound')) %>%
.$new.cat
lgd = Legend(at = c("Osa Bound", "Osa Unbound"), legend_gp = gpar(fill = 2:3))
deg.hms <- purrr::map(names(deg.mats), function(x) {
if(grepl('control.Rep1',x)){
EnrichedHeatmap(deg.mats[[x]],
axis_name = c(-1, 0, 1),
pos_line = F,
column_title = x,
col = col_fun,
name = 'zScore',
row_title = NULL,
top_annotation = HeatmapAnnotation(enriched = anno_enriched(gp = gpar(col = 2:4, lwd = 2), axis_param = list(side = 'left', facing = 'outside'), ylim = c(0,8))),
left_annotation = rowAnnotation(groups = anno_block(gp = gpar(fill = 2:4), show_name = F)),
use_raster = F)
}else{
EnrichedHeatmap(deg.mats[[x]],
axis_name = c(-1, 0, 1),
pos_line = F,
column_title = x,
col = col_fun,
show_heatmap_legend = F,
row_title = NULL,
top_annotation = HeatmapAnnotation(enriched = anno_enriched(gp = gpar(col = 2:4, lwd = 2), ylim = c(0,8), axis = F)),
use_raster = F)
}
})
names(deg.hms) <- names(deg.mats)
hms <- deg.hms$control.Rep1 + deg.hms$control.Rep2 + deg.hms$nubG4.Rep1 + deg.hms$nubG4.Rep2
png('rPlots/4E.png', width = 4, height = 5, units = 'in', res = 300)
#ComplexHeatmap::draw(hms, merge_legend = T, heatmap_legend_side = 'right', )
ComplexHeatmap::draw(hms,annotation_legend_list = c(lgd), row_split = groups, merge_legend = T, heatmap_legend_side = 'bottom', )
dev.off()
png('rPlots/4E.png', width = 4, height = 5, units = 'in', res = 300)
#ComplexHeatmap::draw(hms, merge_legend = T, heatmap_legend_side = 'right', )
ComplexHeatmap::draw(hms,annotation_legend_list = c(lgd), row_split = groups, merge_legend = T, heatmap_legend_side = 'right', )
dev.off()
fairePeaks.deg %>%
data.frame() %>%
dplyr::filter(faireCat.osaDeGrad == 'Osa Dependent') %>%
dplyr::group_by(assay, anno.new) %>%
dplyr::tally()
fairePeaks.deg %>%
data.frame() %>%
#  dplyr::filter(faireCat.osaDeGrad == 'Osa Dependent' ) %>%
dplyr::group_by(assay, anno.new) %>%
dplyr::tally()
fairePeaks.deg %>%
data.frame() %>%
#  dplyr::filter(faireCat.osaDeGrad == 'Osa Dependent' ) %>%
dplyr::group_by(assay, anno.new, faireCat.osaDeGrad) %>%
dplyr::tally()
fairePeaks.deg %>%
data.frame() %>%
#  dplyr::filter(faireCat.osaDeGrad == 'Osa Dependent' ) %>%
dplyr::group_by(anno.new, faireCat.osaDeGrad) %>%
dplyr::tally() %>%
dplyr::mutate(pct = n/sum(n)) %>%
dplyr::filter(faireCat.osaDeGrad != 'Osa Ectopic') %>%
ggplot(aes(x = assay, y = n, fill = anno.new)) +
geom_bar(stat = 'identity', position = 'fill') +
geom_text_repel(aes(label= ifelse(pct > 0.009, paste0(sprintf("%1.1f", pct*100),"%"), "")),
position=position_fill(vjust=0.5), colour="black", size =3,
min.segment.length = 0,
force = 0.01,
force_pull = 1) +
scale_fill_manual(values = cbPalette) +
ylab('Fraction') +
theme(axis.title.x = element_blank(),
legend.title = element_blank(),
legend.key.size = unit(0.3, 'cm'),
axis.text.y = element_blank(),
axis.ticks = element_blank(),
axis.title.y = element_blank())
fairePeaks.deg %>%
data.frame() %>%
#  dplyr::filter(faireCat.osaDeGrad == 'Osa Dependent' ) %>%
dplyr::group_by(anno.new, faireCat.osaDeGrad) %>%
dplyr::tally() %>%
dplyr::mutate(pct = n/sum(n)) %>%
dplyr::filter(faireCat.osaDeGrad != 'Osa Ectopic') %>%
ggplot(aes(x = assay, y = n, fill = anno.new)) +
geom_bar(stat = 'identity', position = 'fill') +
#  geom_text_repel(aes(label= ifelse(pct > 0.009, paste0(sprintf("%1.1f", pct*100),"%"), "")),
#                     position=position_fill(vjust=0.5), colour="black", size =3,
#                  min.segment.length = 0,
#                  force = 0.01,
#                  force_pull = 1) +
scale_fill_manual(values = cbPalette) +
ylab('Fraction') +
theme(axis.title.x = element_blank(),
legend.title = element_blank(),
legend.key.size = unit(0.3, 'cm'),
axis.text.y = element_blank(),
axis.ticks = element_blank(),
axis.title.y = element_blank())
fairePeaks.deg %>%
data.frame() %>%
#  dplyr::filter(faireCat.osaDeGrad == 'Osa Dependent' ) %>%
dplyr::group_by(anno.new, faireCat.osaDeGrad) %>%
dplyr::tally() %>%
dplyr::mutate(pct = n/sum(n)) %>%
dplyr::filter(faireCat.osaDeGrad != 'Osa Ectopic') %>%
ggplot(aes(x = faireCat.osaDeGrad, y = n, fill = anno.new)) +
geom_bar(stat = 'identity', position = 'fill') +
#  geom_text_repel(aes(label= ifelse(pct > 0.009, paste0(sprintf("%1.1f", pct*100),"%"), "")),
#                     position=position_fill(vjust=0.5), colour="black", size =3,
#                  min.segment.length = 0,
#                  force = 0.01,
#                  force_pull = 1) +
scale_fill_manual(values = cbPalette) +
ylab('Fraction') +
theme(axis.title.x = element_blank(),
legend.title = element_blank(),
legend.key.size = unit(0.3, 'cm'),
axis.text.y = element_blank(),
axis.ticks = element_blank(),
axis.title.y = element_blank())
fairePeaks.deg %>%
data.frame() %>%
#  dplyr::filter(faireCat.osaDeGrad == 'Osa Dependent' ) %>%
dplyr::group_by(anno.new, faireCat.osaDeGrad) %>%
dplyr::tally() %>%
dplyr::mutate(pct = n/sum(n)) %>%
dplyr::filter(faireCat.osaDeGrad != 'Osa Ectopic') %>%
ggplot(aes(x = faireCat.osaDeGrad, y = n, fill = anno.new)) +
geom_bar(stat = 'identity', position = 'fill') +
geom_text_repel(aes(label= ifelse(pct > 0.009, paste0(sprintf("%1.1f", pct*100),"%"), "")),
position=position_fill(vjust=0.5), colour="black", size =3,
min.segment.length = 0,
force = 0.01,
force_pull = 1) +
scale_fill_manual(values = cbPalette) +
ylab('Fraction') +
theme(axis.title.x = element_blank(),
legend.title = element_blank(),
legend.key.size = unit(0.3, 'cm'),
axis.text.y = element_blank(),
axis.ticks = element_blank(),
axis.title.y = element_blank())
library(magrittr)
library(ggplot2)
library(GenomicRanges)
library(org.Dm.eg.db)
library(AnnotationDbi)
library(EnrichedHeatmap)
library(ComplexHeatmap)
library(GO.db)
source('utils.R')
###
# load rData
###
load('rData/sheets.rda')
load('rData/peaks.rda')
###
# assign global variables
###
dm6 <- BSgenome.Dmelanogaster.UCSC.dm6::BSgenome.Dmelanogaster.UCSC.dm6
dm6.TxDb <- TxDb.Dmelanogaster.UCSC.dm6.ensGene::TxDb.Dmelanogaster.UCSC.dm6.ensGene
brD <- data.frame('seqnames' = 'chrX',
'start' = 1565708,
'end' = 1567401) %>%
GenomicRanges::GRanges()
###
# colors
###
viridis.hex <- c("#440154","#3b528b","#21918c","#5ec962","#5ec962","#fde725")
cbPalette <- c("#999999", "#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7")
###
# peak subsets
###
osaPeaks <- peaks %>%
dplyr::filter(osa.cnr & !yw.cnr & assay == 'cnr') %>%
dplyr::mutate(deg.peakCat = dplyr::case_when(osaGFP.deGrad & !osaGFP.control ~ 'osa ectopic',
!osaGFP.deGrad & osaGFP.control ~ 'osa dependent',
osaGFP.deGrad & osaGFP.control ~ 'osa independent',
T ~ as.character(NA))) %>%  # NA here would be peaks that aren't reproducible or of good quality
GRanges() %>%
resize(width = 1, fix = "center")
fairePeaks.wt <- peaks %>%
dplyr::filter(assay == 'faire' & experiment == 'WT FAIRE Wing Timecourse') %>%
GRanges() %>%
resize(width = 1, fix = "center")
#TODO - remove the peakCat ? since now using log2fold change for these categories...
fairePeaks.deg <- peaks %>%
dplyr::filter(assay == 'faire' & experiment == 'osaGFP deGrad Pupal Wing FAIRE') %>%
dplyr::mutate(deg.peakCat = dplyr::case_when(osaGFP.deGrad & !osaGFP.control ~ 'osa ectopic',
!osaGFP.deGrad & osaGFP.control ~ 'osa dependent',
osaGFP.deGrad & osaGFP.control ~ 'osa independent',
T ~ as.character(NA))) %>%  # NA here would be peaks that aren't reproducible or of good quality
dplyr::filter(!is.na(deg.peakCat)) %>%
GRanges() %>%
resize(width = 1, fix = "center")
###
# load bws and matrices for heatmaps
###
#TODO - cleanup - move matrices?
bws <- get_bws(dplyr::bind_rows(cnr.ss, faire.wt.ssPool), 'id')
deg.bws <- get_bws(faire.ss %>% dplyr::filter(experiment == 'osaGFP deGrad FAIRE'), 'id')
mats <- purrr::map(bws, ~{
normalizeToMatrix(., osaPeaks, value_column = 'score', keep = c(0.01, 0.99), extend = 2000)
})
names(mats) <- names(bws)
fairePeaks.deg %>%
data.frame() %>%
#  dplyr::filter(faireCat.osaDeGrad == 'Osa Dependent' ) %>%
dplyr::group_by(anno.new, faireCat.osaDeGrad) %>%
dplyr::tally() %>%
dplyr::mutate(pct = n/sum(n)) %>%
dplyr::filter(faireCat.osaDeGrad != 'Osa Ectopic') %>%
ggplot(aes(x = faireCat.osaDeGrad, y = n, fill = anno.new)) +
geom_bar(stat = 'identity', position = 'fill') +
geom_text_repel(aes(label= ifelse(pct > 0.009, paste0(sprintf("%1.1f", pct*100),"%"), "")),
position=position_fill(vjust=0.5), colour="black", size =3,
min.segment.length = 0,
force = 0.01,
force_pull = 1) +
scale_fill_manual(values = cbPalette) +
ylab('Fraction') +
theme(axis.title.x = element_blank(),
legend.title = element_blank(),
legend.key.size = unit(0.3, 'cm'),
axis.text.y = element_blank(),
axis.ticks = element_blank(),
axis.title.y = element_blank())
library(ggrepel)
fairePeaks.deg %>%
data.frame() %>%
#  dplyr::filter(faireCat.osaDeGrad == 'Osa Dependent' ) %>%
dplyr::group_by(anno.new, faireCat.osaDeGrad) %>%
dplyr::tally() %>%
dplyr::mutate(pct = n/sum(n)) %>%
dplyr::filter(faireCat.osaDeGrad != 'Osa Ectopic') %>%
ggplot(aes(x = faireCat.osaDeGrad, y = n, fill = anno.new)) +
geom_bar(stat = 'identity', position = 'fill') +
geom_text_repel(aes(label= ifelse(pct > 0.009, paste0(sprintf("%1.1f", pct*100),"%"), "")),
position=position_fill(vjust=0.5), colour="black", size =3,
min.segment.length = 0,
force = 0.01,
force_pull = 1) +
scale_fill_manual(values = cbPalette) +
ylab('Fraction') +
theme(axis.title.x = element_blank(),
legend.title = element_blank(),
legend.key.size = unit(0.3, 'cm'),
axis.text.y = element_blank(),
axis.ticks = element_blank(),
axis.title.y = element_blank())
fairePeaks.deg %>%
data.frame() %>%
#  dplyr::filter(faireCat.osaDeGrad == 'Osa Dependent' ) %>%
dplyr::group_by(faireCat.osaDeGrad, anno.new) %>%
dplyr::tally() %>%
dplyr::mutate(pct = n/sum(n)) %>%
dplyr::filter(faireCat.osaDeGrad != 'Osa Ectopic') %>%
ggplot(aes(x = faireCat.osaDeGrad, y = n, fill = anno.new)) +
geom_bar(stat = 'identity', position = 'fill') +
geom_text_repel(aes(label= ifelse(pct > 0.009, paste0(sprintf("%1.1f", pct*100),"%"), "")),
position=position_fill(vjust=0.5), colour="black", size =3,
min.segment.length = 0,
force = 0.01,
force_pull = 1) +
scale_fill_manual(values = cbPalette) +
ylab('Fraction') +
theme(axis.title.x = element_blank(),
legend.title = element_blank(),
legend.key.size = unit(0.3, 'cm'),
axis.text.y = element_blank(),
axis.ticks = element_blank(),
axis.title.y = element_blank())
fairePeaks.deg %>%
data.frame() %>%
#  dplyr::filter(faireCat.osaDeGrad == 'Osa Dependent' ) %>%
dplyr::group_by(faireCat.osaDeGrad, anno.new) %>%
dplyr::tally() %>%
dplyr::mutate(pct = n/sum(n)) %>%
dplyr::filter(faireCat.osaDeGrad != 'Osa Ectopic') %>%
ggplot(aes(x = faireCat.osaDeGrad, y = n, fill = anno.new)) +
geom_bar(stat = 'identity', position = 'fill') +
geom_text_repel(aes(label= ifelse(pct > 0.009, paste0(sprintf("%1.1f", pct*100),"%"), "")),
position=position_fill(vjust=0.5), colour="black", size =3,
min.segment.length = 0,
force = 0.01,
force_pull = 1) +
scale_fill_manual(values = cbPalette) +
ylab('Fraction') +
theme(axis.title.x = element_blank(),
legend.title = element_blank(),
legend.key.size = unit(0.3, 'cm'),
axis.text.y = element_blank(),
axis.ticks = element_blank(),
axis.title.y = element_blank())
ggsave('rPlots/4G.png', width = 4, height = 4, units = 'in', dpi = 300)
