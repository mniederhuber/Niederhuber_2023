#chr3R:19,265,389-19,350,508
Dl <- data.frame('seqnames' = 'chr3R',
'start' = 19265389,
'end' = 19350508) %>%
GRanges()
# E(spl)-c
#chr3R:25,980,255-26,065,374
espl <- data.frame('seqnames' = 'chr3R',
'start' = 25980255,
'end' = 26065374) %>%
GRanges()
# ac/sc
#chrX:365,344-402,061
acsc <- data.frame('seqnames' = 'chrX',
'start' = 365344,
'end' = 402061) %>%
GRanges()
# serrate
#chr3R:27,167,731-27,227,610
ser <- data.frame('seqnames' = 'chr3R',
'start' = 27167731,
'end' = 27227610) %>%
GRanges()
# notch
#chrX:3,093,887-3,206,341
notch <- data.frame('seqnames' = 'chrX',
'start' = 3093887,
'end' = 3206341) %>%
GRanges()
###
# enhancers
###
redFly_enhancers <- read.table('bed/all_Dmel_CRM-sorted-merged.bed', sep = '\t')
colnames(redFly_enhancers) <- c('seqnames', 'start','end')
redFly_enhancers.ranges <- GRanges(redFly_enhancers)
## memes setup
###
# meme db
###
#TODO - so clunky...
# loading in the fly factor database, drop out a couple of problematic fbgn
# then use the fbgn.validated lookup table for fly factor to update all the old ids to correct ids
# then filter on the on gene list -- which has to go through a similar process of id validation
# gross
meme_db <- universalmotif::read_meme('~/McKay/Motif_databases/FLY/fly_factor_survey.meme') %>%
universalmotif::to_df() %>%
dplyr::group_by(name) %>%
dplyr::filter(!grepl('FBgn0051782|FBgn0265182', name)) %>%  #drop this FBgn, problematic update to multiple new FBgns of pseudogenes
dplyr::mutate(basename = stringr::str_split_fixed(name, '_', n = 2)[[1]],
fbgn.validated = fbgn.validated[fbgn.validated$FlyFactor == basename,]$Validated)
meme_db_on <- meme_db %>%
dplyr::filter(fbgn.validated %in% ON.genes.validated$Validated)
options(meme_db = universalmotif::to_list(meme_db_on, extrainfo = F))
## colors
viridis.hex <- c("#440154","#3b528b","#21918c","#5ec962","#5ec962","#fde725")
cbPalette <- c("#999999", "#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7")
cbPalette.4 <- c("#D81B60","#1E88E5","#FFC107","#004D40")
cbPalette.ibm <- c('#332288','#117733','#44AA99','#88CCEE','#DDCC77','#CC6677','#AA4499','#882255')
## browser
WTFAIRE.colors <- c("grey10","grey20","grey30","grey40","grey50","grey60")
## peak subsets
osaPeaks <- peaks$cnr.df %>%
dplyr::filter(osa.cnr & !yw.cnr) %>%
GRanges() %>%
resize(width = 1, fix = "center")
osaPeaks.full <- peaks$cnr.df %>%
dplyr::filter(osa.cnr & !yw.cnr) %>%
GRanges(seqlengths = seqlengths(dm6))
osaPeaks.enhancers.full <- osaPeaks.full %>%
data.frame() %>%
dplyr::filter(anno.new %in% c('Distal Intergenic', 'Intron')) %>%
GRanges()
# uses rep1 summit coordinates
osaPeaks.summits <- subsetByOverlaps(cnr.summits, osaPeaks.full)
osaPeaks.faire.summits <- subsetByOverlaps(faire.wt.3LW.summits, osaPeaks.full)
fairePeaks.wt <- peaks$faire.wt.df %>%
#  dplyr::filter(assay == 'faire' & experiment == 'WT FAIRE Wing Timecourse') %>%
GRanges() %>%
resize(width = 1, fix = "center")
#redundant... but used in a couple chunks for motif analysis
fairePeaks.wt.full <- peaks$faire.wt.df %>%
dplyr::filter(assay == 'faire'  & experiment == 'WT FAIRE Wing Timecourse')
#DONE - remove the peakCat ? since now using log2fold change for these categories...
# switched to using osaDeg.qF which is a peak set derived from diffbind, that has been subset using iranges by intersect
# with quality filtered peak calls in peaks$faire.osaDeg.df
osaDeg.center <- osaDeg.qF %>%
GRanges() %>%
resize(width = 1, fix = "center")
# rotund peaks
rn.peaks <- peaks$rn.df %>%
GRanges()
rn.distal <- rn.peaks %>%
dplyr::filter(anno.new %in% c('Distal Intergenic', 'Intron')) %>%
GRanges()
# genomic 500bp
dm6.500bp <- peaks$dm6.500bp %>%
GRanges() %>%
resize(width = 1, fix = 'center')
#fairePeaks.osaDependent <- fairePeaks.deg %>%
#  data.frame() %>%
#  dplyr::filter(faireCat.osaDeGrad == 'Osa Dependent') %>%
#  GRanges()
#
#fairePeaks.osaIndependent <- fairePeaks.deg %>%
#  data.frame() %>%
#  dplyr::filter(faireCat.osaDeGrad == 'Osa Independent') %>%
#  GRanges()
#
#fairePeaks.osaEctopic <- fairePeaks.deg %>%
#  data.frame() %>%
#  dplyr::filter(faireCat.osaDeGrad == 'Osa Ectopic') %>%
#  GRanges()
## load bws
#TODO - cleanup - move matrices?
bws <- get_bws(dplyr::bind_rows(cnr.ss, faire.wt.ssPool), 'id')
deg.bws <- get_bws(faire.ss %>% dplyr::filter(experiment == 'osaGFP deGrad FAIRE'), 'id')
#TODO move data to main project directory and fix path
#TODO merge reps?
#k27ac.bw <- rtracklayer::import.bw('~/mckay/h3k27ac_cnr/bigwig/yw-3LW-wing-ak27ac-pel-Rep1_dm6_trim_q5_dupsRemoved_allFrags_rpgcNorm_zNorm.bw')
#TODO put these notes in better place"
## K27ac data- yeast spikein norm pel data is generally lower in rep2 than rep1, this is not seen in znorm or drosYak norm data
## drosYak norm signal is "low" as in the absolute values are usually < 1, but the normalization between samples looks good, and the signal to noise still looks fine, not appreciably better or worse that znorm
## using pellet because only have 2 reps of pel, only 1 of sup - the sup rep looks really good though I think
## using large fragments only because all fractions/reps show poor signal in <120 bp frag split
#k27ac.bw <- rtracklayer::import.bw('~/mckay/H3K27ac_CnR/BigWig/yw-3LW-wing-ak27ac-pel-MEAN_dm6_trim_q5_dupsRemoved_150to700_rpgcNorm_zNorm.bw')
k27ac.1.bw <- rtracklayer::import.bw('~/mckay/BAP_Project/R/BigWig/yw-3LW-wing-ak27ac-pel-Rep1_dm6_trim_q5_dupsRemoved_150to700_rpgcNorm_zNorm.bw')
k27ac.2.bw <- rtracklayer::import.bw('~/mckay/BAP_Project/R/BigWig/yw-3LW-wing-ak27ac-pel-Rep2_dm6_trim_q5_dupsRemoved_150to700_rpgcNorm_zNorm.bw')
## functions
plot.frac <- function(x) {
lapply(unique(x$change), function(i) {
x %>%
dplyr::filter(change == i) %>%
ggplot(aes(fraction, change, fill = Osa.Bound)) +
geom_bar(stat = 'identity', width = 1) +
geom_text(aes(label = per), position = position_fill(vjust = 0.6),  size = 7, fontface = "bold") +
#geom_text(aes(label = per, position = position_stack(vjust = 0.5))) +
scale_fill_manual(values = c('grey80','#41f0ad'), name = 'Osa Bound') +
scale_y_discrete(position = 'right', ) +
xlab('Percent Bound by Osa') +
theme(legend.position = 'top',
legend.key.size = unit(1, 'cm'),
legend.text = element_text(size = 15),
legend.title = element_text(size = 20),
panel.background = element_blank(),
axis.text = element_blank(),
axis.title = element_blank(),
axis.ticks = element_blank(),
#           axis.text.y = element_text(size = 12),
panel.grid = element_blank()) +
NULL
fn = paste0('rPlots/3E_',i,'.png')
ggsave(fn, width = 6, height = 1.5, units = 'in', dpi = 300 )
})
}
## .bed out
osaPeaks %>%
data.frame() %>%
dplyr::select(seqnames, start, end) %>%
write.table('osaPeaks.bed', quote = F, col.names = F, row.names = F, sep = '\t')
osaPeaks.full %>%
data.frame() %>%
dplyr::select(seqnames, start, end) %>%
write.table('osaPeaks-full.bed', quote = F, col.names = F, row.names = F, sep = '\t')
peaks$cnr.df %>%
data.frame() %>%
dplyr::filter(yw.cnr) %>%
dplyr::select(seqnames, start, end) %>%
write.table('controlPeaks.bed', quote = F, col.names = F, row.names = F, sep = '\t')
#fairePeaks.osaDependent %>%
#  data.frame() %>%
#  dplyr::select(seqnames, start, end) %>%
#  write.table('osaDependent.bed', quote = F, col.names = F, row.names = F, sep = '\t')
#
#fairePeaks.osaEctopic %>%
#  data.frame() %>%
#  dplyr::select(seqnames, start, end) %>%
#  write.table('osaEctopic.bed', quote = F, col.names = F, row.names = F, sep = '\t')
#
## gviz
track.colors <- c("grey40","#D01C8B", "grey40","#D01C8B")
cnr.ss.browser <- cnr.ss %>% dplyr::mutate(color = track.colors)
mckay_enhancers <- read.table('bed/cloned_enhancers_dm6.bed', sep = '\t')
Delta_enhancers <- read.table('bed/cloned_Delta_enhancers.bed', sep = '\t')
espl_enhancers <- read.table('bed/espl_enhancers-merge.bed', sep = '\t')
enhancers <- dplyr::bind_rows(Delta_enhancers, espl_enhancers)
colnames(enhancers) <- c('seqnames', 'start','end','name')
enhancer.ranges <- GRanges(enhancers)
enhancertrack <- Gviz::AnnotationTrack(range = enhancer.ranges,
genome = 'dm6',
fill = '#e00218',
col = 'transparent',
background.title = 'white',
showTitle = F)
genetrack <- Gviz::GeneRegionTrack(range = dm6.TxDb, fill = 'grey80', showTitle = F, background.title = 'white', stacking = 'squish')
peakTrack <- Gviz::AnnotationTrack(range = osaPeaks.full,
genome = 'dm6',
fill = '#D01C8B',
col = 'transparent',
background.title = 'white',
showTitle = F )
osaDep.peakTrack <- Gviz::AnnotationTrack(range = GRanges(peaks$faire.osaDeg.df %>% dplyr::filter(osa.dependent)),
#osaDep.peakTrack <- Gviz::AnnotationTrack(range = osaDeg.osaDep,
genome = 'dm6',
fill = '#469ae8',
col = 'transparent',
background.title = 'white',
showTitle = F)
hairless_peaks <- read.table('bed/hairless-dm6.bed', col.names = c('seqnames', 'start', 'end')) %>% GRanges()
hTrack <- Gviz::AnnotationTrack(range = hairless_peaks,
genome = 'dm6',
fill = '#2ad4c3',
col = 'transparent',
background.title = 'white',
showTitle = F)
spacer <- Gviz::AnnotationTrack(background.title = 'white')
## matrices for heatmaps
mats <- purrr::map(bws, ~{
normalizeToMatrix(., osaPeaks, value_column = 'score', keep = c(0.01, 0.99), extend = 2000)
})
names(mats) <- names(bws)
#TODO - are heatmaps misleading? is this difficult to parse when split by these different peak call groups?
cols <- c('black', '#469ae8')
# union osa degrad peaks
deg.mats <- purrr::map(deg.bws, ~{
normalizeToMatrix(.,
osaDeg.center,
value_column = 'score',
keep = c(0.01,0.99),
extend = 1000 )
})
names(deg.mats) <- faire.ss %>%
dplyr::filter(experiment == 'osaGFP deGrad FAIRE') %>%
dplyr::mutate(nm = paste0(stringr::str_split_fixed(id,'_|\\.', n = 5)[,3],
'.',
stringr::str_split_fixed(id,'_|\\.', n = 5)[,5])) %>%
.$nm
common_min = min(unlist(deg.mats))
common_max = max(unlist(deg.mats))
col_fun = circlize::colorRamp2(seq(common_min, common_max, length.out = 6), viridis.hex)
#deg.count <- fairePeaks.deg %>%
#  data.frame() %>%
#  dplyr::group_by(faireCat.osaDeGrad) %>% #peak category assigned in peaks.R
#  dplyr::tally() %>%
#  .$n
#names(deg.count) <- c('Osa Dependent', 'Osa Ectopic', 'Osa Independent')
#groups <- fairePeaks.deg$faireCat.osaDeGrad
#lgd = Legend(at = c("Osa Dependent", "Osa Ectopic", "Osa Independent"), legend_gp = gpar(fill = cols))
deg.hms <- purrr::map(names(deg.mats), function(x) {
if(grepl('control.Rep1',x)){
EnrichedHeatmap(deg.mats[[x]],
axis_name = c(-1000, 0, 1000),
pos_line = F,
column_title = x,
col = col_fun,
name = 'zScore',
row_title = NULL,
top_annotation = HeatmapAnnotation(enriched = anno_enriched(gp = gpar(col = cols, lwd = 2),
axis_param = list(side = 'left', facing = 'outside'),
ylim = c(0,6))),
use_raster = F)
}else{
EnrichedHeatmap(deg.mats[[x]],
axis_name = c(-1000, 0, 1000),
pos_line = F,
column_title = x,
col = col_fun,
show_heatmap_legend = F,
row_title = NULL,
top_annotation = HeatmapAnnotation(enriched = anno_enriched(gp = gpar(col = cols,
lwd = 2),
ylim = c(0,6),
axis = F)),
use_raster = F)
}
})
names(deg.hms) <- names(deg.mats)
hms <- deg.hms$control.Rep1 + deg.hms$control.Rep2 + deg.hms$nubG4.Rep1 + deg.hms$nubG4.Rep2
png('rPlots/3B.png', width = 3, height = 5, units = 'in', res = 300)
ComplexHeatmap::draw(hms,
# annotation_legend_list = c(lgd),
# row_split = groups,
merge_legend = T,
heatmap_legend_side = 'right')
dev.off()
#fairePeaks.deg %>%
#  data.frame() %>%
#  dplyr::mutate(osa.cnr.specific = ifelse(osa.cnr & !yw.cnr,T,F)) %>%
#  dplyr::group_by(faireCat.osaDeGrad, osa.cnr) %>%
#  dplyr::tally()
#  dplyr::mutate(fraction = n / sum(n),
#                change = faireCat.osaDeGrad) %>%
#  dplyr::mutate(per = paste0(round(100*fraction, digits = 1),'%')) %>%
#  plot.frac()
osaPeaks.enhancers <- osaPeaks %>%
data.frame() %>%
dplyr::filter(anno.new %in% c('Distal Intergenic','Intron')) %>%
GRanges()
#osaPeaks.enhancers <- subsetByOverlaps(faire.wt.3LW.summits, osaPeaks.enhancers)
wt.3lw.mat <- normalizeToMatrix(bws$wt_3LW, osaPeaks.enhancers, value_column = 'score', keep = c(0.01, 0.99), extend = 2000)
osa.1.mat <- normalizeToMatrix(bws$osaGFP.rep1, osaPeaks.enhancers, value_column = 'score', keep = c(0.01, 0.99), extend = 2000)
osa.2.mat <- normalizeToMatrix(bws$osaGFP.rep2, osaPeaks.enhancers, value_column = 'score', keep = c(0.01, 0.99), extend = 2000)
k27ac.1.mat <- normalizeToMatrix(k27ac.1.bw,
osaPeaks.enhancers,
value_column = 'score',
keep = c(0.01, 0.99),
extend = 2000)
k27ac.2.mat <- normalizeToMatrix(k27ac.2.bw, osaPeaks.enhancers,
value_column = 'score',
keep = c(0.01, 0.99),
extend = 2000)
#k14ac.mat <- normalizeToMatrix(k14ac.bw, osaPeaks.enhancers,
#                               value_column = 'score',
#                               keep = c(0.01, 0.99),
#                               extend = 10000)
fig3d.mats <- list(wt.3lw.mat,
osa.1.mat,
osa.2.mat,
k27ac.1.mat,
k27ac.2.mat)
# k14ac.mat)
names(fig3d.mats) <- c('WT_3LW',
'Osa Rep1',
'Osa Rep2',
'K27ac Rep1',
'K27ac Rep2')
#'K14ac')
common_min = min(c(osa.1.mat, osa.2.mat))
common_max = max(c(osa.1.mat, osa.2.mat))
col_fun = circlize::colorRamp2(seq(common_min, common_max, length.out = 6), viridis.hex)
common_min.k27 = min(c(k27ac.1.mat, k27ac.2.mat))
common_max.k27 = max(c(k27ac.1.mat, k27ac.2.mat))
col_fun.k27 = circlize::colorRamp2(seq(common_min.k27, common_max.k27, length.out = 6), viridis.hex)
groups <- ifelse(osaPeaks.enhancers$WT.3LW, "Open", "Closed")
lgd = Legend(at = c("closed", "open"), legend_gp = gpar(fill = c('#fc5d63','#87d674')))
l3.count <- osaPeaks.enhancers %>%
data.frame() %>%
dplyr::group_by(osa.cnr, WT.3LW) %>%
dplyr::count() %>%
dplyr::mutate(WT_FAIRE_3LW = ifelse(WT.3LW, 'Open','Closed'),
n = as.character(n)) %>%
.$n
#
names(l3.count) = unique(groups)
fig3d.hms <- EnrichedHeatmap(fig3d.mats$WT_3LW,
axis_name = c(-2,0,+2),
pos_line = F,
column_title = '3LW-FAIRE',
col = viridis.hex,
width = unit(0.5, 'in'),
left_annotation = c(rowAnnotation(textbox = anno_textbox(groups,
as.list(l3.count),
side = 'left',
background_gp = gpar(fill = NA, col = NA),
gp = gpar(col = 'black'),
padding = unit(0, 'mm')))),
#rowAnnotation(groups = anno_block(gp = gpar(fill = c('#fc5d63','#87d674')), show_name = F))),
top_annotation = HeatmapAnnotation(lines = anno_enriched(gp = gpar(col = c('#fc5d63','#87d674')),
ylim = c(0,6),
axis = F,
axis_param = list(side = 'left'))),
row_title = NULL,
name = 'FAIRE zScore') +
EnrichedHeatmap(fig3d.mats$`Osa Rep1`,
axis_name = c(-2,0,+2),
pos_line = F,
column_title = 'Osa.1',
col = col_fun,
name = 'Osa zScore',
width = unit(0.5,'in'),
top_annotation = HeatmapAnnotation(lines = anno_enriched(gp = gpar(col = c('#fc5d63','#87d674')),
ylim = c(0,6.8),
axis = F))) +
EnrichedHeatmap(fig3d.mats$`Osa Rep2`,
axis_name = c(-2,0,+2),
pos_line = F,
column_title = 'Osa.2',
col = col_fun,
show_heatmap_legend = F,
width = unit(0.5,'in'),
top_annotation = HeatmapAnnotation(lines = anno_enriched(gp = gpar(col = c('#fc5d63','#87d674')),
ylim = c(0,6.8),
# axis_param = list(side = 'right'))),
axis = F))) +
EnrichedHeatmap(fig3d.mats$`K27ac Rep1`,
axis_name = c(-2,0,+2),
pos_line = F,
column_title = 'K27ac',
#col = col_fun.k27,
col = circlize::colorRamp2(seq(0.2, 3, length.out = 6), viridis.hex),
name = 'H3K27ac rep1',
#show_heatmap_legend = F,
width = unit(0.5,'in'),
top_annotation = HeatmapAnnotation(lines = anno_enriched(gp = gpar(col = c('#fc5d63','#87d674')),
ylim = c(0.2,3),
axis = F,
axis_param = list(side = 'right')))) +
EnrichedHeatmap(fig3d.mats$`K27ac Rep2`,
axis_name = c(-2,0,+2),
pos_line = F,
column_title = 'K27ac',
#col = col_fun.k27,
col = circlize::colorRamp2(seq(0.2, 3, length.out = 6), viridis.hex),
name = 'H3K27ac rep2',
show_heatmap_legend = F,
width = unit(0.5,'in'),
top_annotation = HeatmapAnnotation(lines = anno_enriched(gp = gpar(col = c('#fc5d63','#87d674')),
ylim = c(0.2,3),
axis = F,
axis_param = list(side = 'right'))))
#    EnrichedHeatmap(fig3d.mats$K14ac,
#                   axis_name = c(-2,0,+2),
#                   pos_line = F,
#                   column_title = 'K27ac',
#                   #col = col_fun,
#                   col = circlize::colorRamp2(seq(0, 1, length.out = 6), viridis.hex),
#                   name = 'H3K14ac zScore',
#                   #show_heatmap_legend = F,
#                   width = unit(1,'in'),
#                   top_annotation = HeatmapAnnotation(lines = anno_enriched(gp = gpar(col = c('#fc5d63','#87d674')),
#                                                                            ylim = c(-0.5,0.5),
#                                                                            axis = F,
#                                                                            axis_param = list(side = 'right'))))
png('rPlots/5D.png', width = 5, heigh = 4, units = 'in', res = 300)
ComplexHeatmap::draw(fig3d.hms,
row_split = groups,
annotation_legend_list = list(lgd),
row_title = NULL,
heatmap_legend_side = "right",
merge_legend = T)
dev.off()
fig3d.hms <- EnrichedHeatmap(fig3d.mats$WT_3LW,
axis_name = c(-2,0,+2),
pos_line = F,
column_title = '3LW-FAIRE',
col = viridis.hex,
width = unit(0.5, 'in'),
left_annotation = c(rowAnnotation(textbox = anno_textbox(groups,
as.list(l3.count),
side = 'left',
background_gp = gpar(fill = NA, col = NA),
gp = gpar(col = 'black'),
padding = unit(0, 'mm')))),
#rowAnnotation(groups = anno_block(gp = gpar(fill = c('#fc5d63','#87d674')), show_name = F))),
top_annotation = HeatmapAnnotation(lines = anno_enriched(gp = gpar(col = c('#fc5d63','#87d674')),
ylim = c(0,6),
axis = F,
axis_param = list(side = 'left'))),
row_title = NULL,
name = 'FAIRE zScore') +
EnrichedHeatmap(fig3d.mats$`Osa Rep1`,
axis_name = c(-2,0,+2),
pos_line = F,
column_title = 'Osa.1',
col = col_fun,
name = 'Osa zScore',
width = unit(0.5,'in'),
top_annotation = HeatmapAnnotation(lines = anno_enriched(gp = gpar(col = c('#fc5d63','#87d674')),
ylim = c(0,6.8),
axis = F))) +
EnrichedHeatmap(fig3d.mats$`Osa Rep2`,
axis_name = c(-2,0,+2),
pos_line = F,
column_title = 'Osa.2',
col = col_fun,
show_heatmap_legend = F,
width = unit(0.5,'in'),
top_annotation = HeatmapAnnotation(lines = anno_enriched(gp = gpar(col = c('#fc5d63','#87d674')),
ylim = c(0,6.8),
# axis_param = list(side = 'right'))),
axis = F))) +
EnrichedHeatmap(fig3d.mats$`K27ac Rep1`,
axis_name = c(-2,0,+2),
pos_line = F,
column_title = 'K27ac',
#col = col_fun.k27,
col = circlize::colorRamp2(seq(0.2, 3, length.out = 6), viridis.hex),
name = 'H3K27ac rep1',
#show_heatmap_legend = F,
width = unit(0.5,'in'),
top_annotation = HeatmapAnnotation(lines = anno_enriched(gp = gpar(col = c('#fc5d63','#87d674')),
ylim = c(0.2,2.5),
axis = F,
axis_param = list(side = 'right')))) +
EnrichedHeatmap(fig3d.mats$`K27ac Rep2`,
axis_name = c(-2,0,+2),
pos_line = F,
column_title = 'K27ac',
#col = col_fun.k27,
col = circlize::colorRamp2(seq(0.2, 3, length.out = 6), viridis.hex),
name = 'H3K27ac rep2',
show_heatmap_legend = F,
width = unit(0.5,'in'),
top_annotation = HeatmapAnnotation(lines = anno_enriched(gp = gpar(col = c('#fc5d63','#87d674')),
ylim = c(0.2,2.5),
axis = F,
axis_param = list(side = 'right'))))
png('rPlots/5D.png', width = 5, heigh = 4, units = 'in', res = 300)
ComplexHeatmap::draw(fig3d.hms,
row_split = groups,
annotation_legend_list = list(lgd),
row_title = NULL,
heatmap_legend_side = "right",
merge_legend = T)
dev.off()
png('rPlots/5D.png', width = 5, heigh = 4, units = 'in', res = 300)
ComplexHeatmap::draw(fig3d.hms,
row_split = groups,
annotation_legend_list = list(lgd),
row_title = NULL,
heatmap_legend_side = "right",
merge_legend = T)
dev.off()
